###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       31/Jan/2018  11:51:08
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -D XML_SHRT -D WM -lCN
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\WeatherMesh\List
#        -o
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\WeatherMesh\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.4\arm\INC\c\DLib_Config_Full.h"
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\WeatherMesh\List\gpio.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\WeatherMesh\Obj\gpio.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : gpio.c
      4            * Description        : This file provides code for the configuration
      5            *                      of all used GPIO pins.
      6            ******************************************************************************
      7            *
      8            * COPYRIGHT(c) 2016 STMicroelectronics
      9            *
     10            * Redistribution and use in source and binary forms, with or without modification,
     11            * are permitted provided that the following conditions are met:
     12            *   1. Redistributions of source code must retain the above copyright notice,
     13            *      this list of conditions and the following disclaimer.
     14            *   2. Redistributions in binary form must reproduce the above copyright notice,
     15            *      this list of conditions and the following disclaimer in the documentation
     16            *      and/or other materials provided with the distribution.
     17            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     18            *      may be used to endorse or promote products derived from this software
     19            *      without specific prior written permission.
     20            *
     21            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     22            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     24            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     25            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     27            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     28            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     29            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     30            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31            *
     32            ******************************************************************************
     33            */
     34          
     35          /* Includes ------------------------------------------------------------------*/
     36          #include "gpio.h"
     37          /* USER CODE BEGIN 0 */

   \                                 In section .rodata, align 4
     38          const uint32_t RoadBrd_LED_PORT[RoadBrd_LEDn] = {(uint32_t)LED2_GPIO_PORT, 
   \                     RoadBrd_LED_PORT:
   \   00000000   0x40020000         DC32 1073872896, 1073873920, 1073873920, 1073873920, 1073873920
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \   00000014   0x40020400         DC32 1073873920, 1073873920, 1073872896, 1073872896, 1073873920
   \              0x40020400   
   \              0x40020000   
   \              0x40020000   
   \              0x40020400   
   \   00000028   0x40020800         DC32 1073874944, 1073874944, 1073874944, 1073874944, 1073874944
   \              0x40020800   
   \              0x40020800   
   \              0x40020800   
   \              0x40020800   
     39                                                          (uint32_t)BLUE_GPIO_PORT, 
     40                                                          (uint32_t)GREEN_GPIO_PORT, 
     41                                                          (uint32_t)YELLOW_GPIO_PORT,
     42                                                          (uint32_t)TAM_PWR_GPIO_PORT,
     43                                                          (uint32_t)VDD_PWR_GPIO_PORT,
     44                                                          (uint32_t)RESET_BGM111_GPIO_PORT,
     45                                                          (uint32_t)CHARGE_ON_GPIO_PORT,
     46                                                          (uint32_t)HEAT_ON_GPIO_PORT,
     47                                                          (uint32_t)GPIOB,
     48                                                          (uint32_t)PC0_GPIO_PORT,
     49                                                          (uint32_t)PC1_GPIO_PORT,
     50                                                          (uint32_t)PC2_GPIO_PORT,
     51                                                          (uint32_t)PC3_GPIO_PORT,
     52                                                          (uint32_t)PC4_GPIO_PORT};
     53          

   \                                 In section .rodata, align 4
     54          const uint16_t RoadBrd_LED_PIN[RoadBrd_LEDn] = {LED2_PIN, 
   \                     RoadBrd_LED_PIN:
   \   00000000   0x0020 0x0200      DC16 32, 512, 4096, 256, 2, 32, 32768, 128, 256, 64, 1, 2, 4, 8, 16
   \              0x1000 0x0100
   \              0x0002 0x0020
   \              0x8000 0x0080
   \              0x0100 0x0040
   \              0x0001 0x0002
   \              0x0004 0x0008
   \              0x0010       
   \   0000001E   0x00 0x00          DC8 0, 0
     55                                                          BLUE_PIN, 
     56                                                          GREEN_PIN, 
     57                                                          YELLOW_PIN,
     58                                                          TAM_PWR_PIN,
     59                                                          VDD_PWR_PIN,
     60                                                          RESET_BGM111_PIN,
     61                                                          CHARGE_ON_PIN,
     62                                                          HEAT_ON_PIN,
     63                                                          I2C_SCL_Pin,
     64                                                          PC0_PIN,
     65                                                          PC1_PIN,
     66                                                          PC2_PIN,
     67                                                          PC3_PIN,
     68                                                          PC4_PIN};
     69          
     70          /* USER CODE END 0 */
     71          
     72          /*----------------------------------------------------------------------------*/
     73          /* Configure GPIO                                                             */
     74          /*----------------------------------------------------------------------------*/
     75          /* USER CODE BEGIN 1 */
     76          
     77          #ifdef WM
     78          //****************************************************************************************
     79          // WEATHERMESH User Code starts here. Custom GPIO Initialization
     80          // Configure PC0, PC1, PC2, PC3, and PC4 as Input or Output here.
     81          // CURRENT CONFIGURATION
     82          //      PC0: Input, Analog, No Pullup
     83          //      PC1: Input, Analog, No Pullup
     84          //      PC2: Input, Analog, No Pullup
     85          //      PC3: Input, Analog, No Pullup
     86          //      PC4: Output, Speed:Low, Push-Pull, No Pullup, Output=LOW
     87          //
     88          /** Configure pins as 
     89                  * Analog 
     90                  * Input 
     91                  * Output
     92                  * EVENT_OUT
     93                  * EXTI
     94                  * Free pins are configured automatically as Analog (this feature is enabled through 
     95                  * the Code Generation settings)
     96          */

   \                                 In section .text, align 2, keep-with-next
     97          void WM_GPIO_Init(void)
     98          {
   \                     WM_GPIO_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     99          
    100            GPIO_InitTypeDef GPIO_InitStruct;
    101          
    102            /* GPIO Ports Clock Enable */
    103            __HAL_RCC_GPIOC_CLK_ENABLE();
   \   00000004   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
    104          
    105            /*Configure GPIO pins : PC0 PC1 PC2 PC3 */
    106            GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3;
   \   0000001C   0x200F             MOVS     R0,#+15
   \   0000001E   0x9001             STR      R0,[SP, #+4]
    107            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x9002             STR      R0,[SP, #+8]
    108            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x9003             STR      R0,[SP, #+12]
    109            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   00000028   0xA901             ADD      R1,SP,#+4
   \   0000002A   0x....             LDR.N    R0,??DataTable7_1  ;; 0x40020800
   \   0000002C   0x.... 0x....      BL       HAL_GPIO_Init
    110          
    111            /*Configure GPIO pins : PC4 */
    112            GPIO_InitStruct.Pin = GPIO_PIN_4;
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x9001             STR      R0,[SP, #+4]
    113            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x9002             STR      R0,[SP, #+8]
    114            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x9004             STR      R0,[SP, #+16]
    115            //GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    116            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x9003             STR      R0,[SP, #+12]
    117            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   00000040   0xA901             ADD      R1,SP,#+4
   \   00000042   0x....             LDR.N    R0,??DataTable7_1  ;; 0x40020800
   \   00000044   0x.... 0x....      BL       HAL_GPIO_Init
    118          
    119            /*Configure GPIO pin Output Level */
    120            HAL_GPIO_WritePin(GPIOC, PC4_PIN, GPIO_PIN_RESET);
   \   00000048   0x2200             MOVS     R2,#+0
   \   0000004A   0x2110             MOVS     R1,#+16
   \   0000004C   0x....             LDR.N    R0,??DataTable7_1  ;; 0x40020800
   \   0000004E   0x.... 0x....      BL       HAL_GPIO_WritePin
    121          
    122          }
   \   00000052   0xB007             ADD      SP,SP,#+28
   \   00000054   0xBD00             POP      {PC}             ;; return
    123          
    124          // END OF ALL User Code for WM Here.
    125          //*****************************************************************************************     
    126          #endif
    127          /* USER CODE END 1 */
    128          
    129          /** Configure pins as 
    130                  * Analog 
    131                  * Input 
    132                  * Output
    133                  * EVENT_OUT
    134                  * EXTI
    135                  * Free pins are configured automatically as Analog (this feature is enabled through 
    136                  * the Code Generation settings)
    137          */

   \                                 In section .text, align 2, keep-with-next
    138          void MX_GPIO_Init(void)
    139          {
   \                     MX_GPIO_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
    140          
    141            GPIO_InitTypeDef GPIO_InitStruct;
    142          
    143            /* GPIO Ports Clock Enable */
    144            __HAL_RCC_GPIOC_CLK_ENABLE();
   \   00000004   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
    145            __HAL_RCC_GPIOH_CLK_ENABLE();
   \   0000001C   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000024   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   00000026   0x6008             STR      R0,[R1, #+0]
   \   00000028   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF010 0x0020      ANDS     R0,R0,#0x20
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x9800             LDR      R0,[SP, #+0]
    146            __HAL_RCC_GPIOA_CLK_ENABLE();
   \   00000034   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000003C   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0x9800             LDR      R0,[SP, #+0]
    147            __HAL_RCC_GPIOB_CLK_ENABLE();
   \   0000004C   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000054   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   00000056   0x6008             STR      R0,[R1, #+0]
   \   00000058   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x9800             LDR      R0,[SP, #+0]
    148            __HAL_RCC_GPIOD_CLK_ENABLE();
   \   00000064   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000006C   0x....             LDR.N    R1,??DataTable7  ;; 0x4002381c
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \   00000070   0x....             LDR.N    R0,??DataTable7  ;; 0x4002381c
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF010 0x0008      ANDS     R0,R0,#0x8
   \   00000078   0x9000             STR      R0,[SP, #+0]
   \   0000007A   0x9800             LDR      R0,[SP, #+0]
    149          
    150            /*Configure GPIO pin : PtPin */
    151            GPIO_InitStruct.Pin = B1_Pin;
   \   0000007C   0xF44F 0x5000      MOV      R0,#+8192
   \   00000080   0x9001             STR      R0,[SP, #+4]
    152            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x9002             STR      R0,[SP, #+8]
    153            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x9003             STR      R0,[SP, #+12]
    154            HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
   \   0000008A   0xA901             ADD      R1,SP,#+4
   \   0000008C   0x....             LDR.N    R0,??DataTable7_1  ;; 0x40020800
   \   0000008E   0x.... 0x....      BL       HAL_GPIO_Init
    155          
    156            /*Configure GPIO pins : PC0 PC1 PC2 PC3 
    157                                     PC4 PC5 PC6 PC7 
    158                                     PC8 PC9 PC10 PC11 
    159                                     PC12 */
    160            GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
    161                                    |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
    162                                    |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
    163                                    |GPIO_PIN_12;
   \   00000092   0xF641 0x70FF      MOVW     R0,#+8191
   \   00000096   0x9001             STR      R0,[SP, #+4]
    164            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   00000098   0x2003             MOVS     R0,#+3
   \   0000009A   0x9002             STR      R0,[SP, #+8]
    165            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x9003             STR      R0,[SP, #+12]
    166            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   000000A0   0xA901             ADD      R1,SP,#+4
   \   000000A2   0x....             LDR.N    R0,??DataTable7_1  ;; 0x40020800
   \   000000A4   0x.... 0x....      BL       HAL_GPIO_Init
    167          
    168            /*Configure GPIO pins : PA1 PA6 PA9 PA10 */
    169            GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_9|GPIO_PIN_10;
   \   000000A8   0xF240 0x6042      MOVW     R0,#+1602
   \   000000AC   0x9001             STR      R0,[SP, #+4]
    170            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   000000AE   0x2003             MOVS     R0,#+3
   \   000000B0   0x9002             STR      R0,[SP, #+8]
    171            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x9003             STR      R0,[SP, #+12]
    172            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000000B6   0xA901             ADD      R1,SP,#+4
   \   000000B8   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40020000
   \   000000BA   0x.... 0x....      BL       HAL_GPIO_Init
    173          
    174            /*Configure GPIO pins : PAPin PAPin PAPin */
    175            GPIO_InitStruct.Pin = LD2_Pin|CHARGE_ON_Pin|HEAT_ON_Pin;
   \   000000BE   0xF44F 0x70D0      MOV      R0,#+416
   \   000000C2   0x9001             STR      R0,[SP, #+4]
    176            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x9002             STR      R0,[SP, #+8]
    177            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x9003             STR      R0,[SP, #+12]
    178            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x9004             STR      R0,[SP, #+16]
    179            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000000D0   0xA901             ADD      R1,SP,#+4
   \   000000D2   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40020000
   \   000000D4   0x.... 0x....      BL       HAL_GPIO_Init
    180          
    181            /*Configure GPIO pins : PB0 PB2 PB4 PB5 */
    182            GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5;
   \   000000D8   0x2035             MOVS     R0,#+53
   \   000000DA   0x9001             STR      R0,[SP, #+4]
    183            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x9002             STR      R0,[SP, #+8]
    184            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x9004             STR      R0,[SP, #+16]
    185            //GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    186            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x9003             STR      R0,[SP, #+12]
    187            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   000000E8   0xA901             ADD      R1,SP,#+4
   \   000000EA   0x....             LDR.N    R0,??DataTable7_3  ;; 0x40020400
   \   000000EC   0x.... 0x....      BL       HAL_GPIO_Init
    188          
    189            /*Configure GPIO pins : PBPin PBPin PBPin PBPin 
    190                                     PBPin */
    191            GPIO_InitStruct.Pin = TAM_PWR_Pin|LED_MICRO_Pin|RESET_BGM111_Pin|LED_STATUS_Pin 
    192                                    |LED_BGM111_Pin;
   \   000000F0   0xF249 0x3002      MOVW     R0,#+37634
   \   000000F4   0x9001             STR      R0,[SP, #+4]
    193            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x9002             STR      R0,[SP, #+8]
    194            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x9003             STR      R0,[SP, #+12]
    195            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000FE   0x2000             MOVS     R0,#+0
   \   00000100   0x9004             STR      R0,[SP, #+16]
    196            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000102   0xA901             ADD      R1,SP,#+4
   \   00000104   0x....             LDR.N    R0,??DataTable7_3  ;; 0x40020400
   \   00000106   0x.... 0x....      BL       HAL_GPIO_Init
    197          
    198            /*Configure GPIO pin : PD2 */
    199            GPIO_InitStruct.Pin = GPIO_PIN_2;
   \   0000010A   0x2004             MOVS     R0,#+4
   \   0000010C   0x9001             STR      R0,[SP, #+4]
    200            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   0000010E   0x2003             MOVS     R0,#+3
   \   00000110   0x9002             STR      R0,[SP, #+8]
    201            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x9003             STR      R0,[SP, #+12]
    202            HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \   00000116   0xA901             ADD      R1,SP,#+4
   \   00000118   0x....             LDR.N    R0,??DataTable7_4  ;; 0x40020c00
   \   0000011A   0x.... 0x....      BL       HAL_GPIO_Init
    203          
    204            /*Configure GPIO pin Output Level */
    205            HAL_GPIO_WritePin(GPIOA, LD2_Pin|CHARGE_ON_Pin|HEAT_ON_Pin, GPIO_PIN_RESET);
   \   0000011E   0x2200             MOVS     R2,#+0
   \   00000120   0xF44F 0x71D0      MOV      R1,#+416
   \   00000124   0x....             LDR.N    R0,??DataTable7_2  ;; 0x40020000
   \   00000126   0x.... 0x....      BL       HAL_GPIO_WritePin
    206          
    207            /*Configure GPIO pin Output Level */
    208            HAL_GPIO_WritePin(GPIOB, TAM_PWR_Pin|LED_MICRO_Pin|RESET_BGM111_Pin|LED_STATUS_Pin 
    209                                    |LED_BGM111_Pin, GPIO_PIN_RESET);
   \   0000012A   0x2200             MOVS     R2,#+0
   \   0000012C   0xF249 0x3102      MOVW     R1,#+37634
   \   00000130   0x....             LDR.N    R0,??DataTable7_3  ;; 0x40020400
   \   00000132   0x.... 0x....      BL       HAL_GPIO_WritePin
    210          
    211          }
   \   00000136   0xB007             ADD      SP,SP,#+28
   \   00000138   0xBD00             POP      {PC}             ;; return
    212          
    213          /* USER CODE BEGIN 2 */
    214          /**
    215            * @brief  Turns selected LED On.
    216            * @param  Led: Specifies the Led to be set on. 
    217            *   This parameter can be one of following parameters:
    218            *     @arg LED2
    219            * @retval None
    220            */

   \                                 In section .text, align 2, keep-with-next
    221          void RoadBrd_LED_On(RoadBrd_Led_TypeDef Led)
    222          {
   \                     RoadBrd_LED_On: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    223            GPIO_TypeDef* temp_GPIOx;
    224            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Led];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    225            HAL_GPIO_WritePin(temp_GPIOx, RoadBrd_LED_PIN[Led], GPIO_PIN_SET); 
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x....             LDR.N    R0,??DataTable7_6
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_WritePin
    226          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    227          
    228          /**
    229            * @brief  Turns selected LED Off.
    230            * @param  Led: Specifies the Led to be set off. 
    231            *   This parameter can be one of following parameters:
    232            *     @arg LED2
    233            * @retval None
    234            */

   \                                 In section .text, align 2, keep-with-next
    235          void RoadBrd_LED_Off(RoadBrd_Led_TypeDef Led)
    236          {
   \                     RoadBrd_LED_Off: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    237            GPIO_TypeDef* temp_GPIOx;
    238            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Led];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    239            HAL_GPIO_WritePin(temp_GPIOx, RoadBrd_LED_PIN[Led], GPIO_PIN_RESET); 
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x....             LDR.N    R0,??DataTable7_6
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_WritePin
    240          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    241          
    242          /**
    243            * @brief  Toggles the selected LED.
    244            * @param  Led: Specifies the Led to be toggled. 
    245            *   This parameter can be one of following parameters:
    246            *            @arg  LED2
    247            * @retval None
    248            */

   \                                 In section .text, align 2, keep-with-next
    249          void RoadBrd_LED_Toggle(RoadBrd_Led_TypeDef Led)
    250          {
   \                     RoadBrd_LED_Toggle: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    251            GPIO_TypeDef* temp_GPIOx;
    252            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Led];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    253            HAL_GPIO_TogglePin(temp_GPIOx, RoadBrd_LED_PIN[Led]);
   \   0000000E   0x....             LDR.N    R0,??DataTable7_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000016   0x0028             MOVS     R0,R5
   \   00000018   0x.... 0x....      BL       HAL_GPIO_TogglePin
    254          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    255          
    256          /**
    257            * @brief  Turns selected gpio On.
    258            * @param  Led: Specifies the gpio to be set on. 
    259            *   This parameter can be one of following parameters:
    260            * @retval None
    261            */

   \                                 In section .text, align 2, keep-with-next
    262          void RoadBrd_gpio_On(RoadBrd_Led_TypeDef Port)
    263          {
   \                     RoadBrd_gpio_On: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    264            GPIO_TypeDef* temp_GPIOx;
    265            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Port];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    266            HAL_GPIO_WritePin(temp_GPIOx, RoadBrd_LED_PIN[Port], GPIO_PIN_SET); 
   \   0000000E   0x2201             MOVS     R2,#+1
   \   00000010   0x....             LDR.N    R0,??DataTable7_6
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_WritePin
    267          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    268          
    269          /**
    270            * @brief  Turns selected gpio Off.
    271            * @param  Led: Specifies the gpio to be set off. 
    272            *   This parameter can be one of following parameters:
    273            * @retval None
    274            */

   \                                 In section .text, align 2, keep-with-next
    275          void RoadBrd_gpio_Off(RoadBrd_Led_TypeDef Port)
    276          {
   \                     RoadBrd_gpio_Off: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    277            GPIO_TypeDef* temp_GPIOx;
    278            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Port];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    279            HAL_GPIO_WritePin(temp_GPIOx, RoadBrd_LED_PIN[Port], GPIO_PIN_RESET); 
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x....             LDR.N    R0,??DataTable7_6
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000018   0x0028             MOVS     R0,R5
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_WritePin
    280          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    281          
    282          /**
    283            * @brief  Toggles the selected gpio.
    284            * @param  Led: Specifies the gpio to be toggled. 
    285            *   This parameter can be one of following parameters:
    286            * @retval None
    287            */

   \                                 In section .text, align 2, keep-with-next
    288          void RoadBrd_gpio_Toggle(RoadBrd_Led_TypeDef Port)
    289          {
   \                     RoadBrd_gpio_Toggle: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    290            GPIO_TypeDef* temp_GPIOx;
    291            temp_GPIOx = (GPIO_TypeDef*)RoadBrd_LED_PORT[Port];
   \   00000004   0x....             LDR.N    R0,??DataTable7_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000000C   0x0005             MOVS     R5,R0
    292            HAL_GPIO_TogglePin(temp_GPIOx, RoadBrd_LED_PIN[Port]);
   \   0000000E   0x....             LDR.N    R0,??DataTable7_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   00000016   0x0028             MOVS     R0,R5
   \   00000018   0x.... 0x....      BL       HAL_GPIO_TogglePin
    293          }
   \   0000001C   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x4002381C         DC32     0x4002381c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     RoadBrd_LED_PORT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     RoadBrd_LED_PIN
    294          
    295          
    296          /* USER CODE END 2 */
    297          
    298          /**
    299            * @}
    300            */
    301          
    302          /**
    303            * @}
    304            */
    305          
    306          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   MX_GPIO_Init
        32   -> HAL_GPIO_Init
        32   -> HAL_GPIO_WritePin
      16   RoadBrd_LED_Off
        16   -> HAL_GPIO_WritePin
      16   RoadBrd_LED_On
        16   -> HAL_GPIO_WritePin
      16   RoadBrd_LED_Toggle
        16   -> HAL_GPIO_TogglePin
      16   RoadBrd_gpio_Off
        16   -> HAL_GPIO_WritePin
      16   RoadBrd_gpio_On
        16   -> HAL_GPIO_WritePin
      16   RoadBrd_gpio_Toggle
        16   -> HAL_GPIO_TogglePin
      32   WM_GPIO_Init
        32   -> HAL_GPIO_Init
        32   -> HAL_GPIO_WritePin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
     314  MX_GPIO_Init
      32  RoadBrd_LED_Off
      32  RoadBrd_LED_On
      32  RoadBrd_LED_PIN
      60  RoadBrd_LED_PORT
      30  RoadBrd_LED_Toggle
      32  RoadBrd_gpio_Off
      32  RoadBrd_gpio_On
      30  RoadBrd_gpio_Toggle
      86  WM_GPIO_Init

 
  92 bytes in section .rodata
 616 bytes in section .text
 
 616 bytes of CODE  memory
  92 bytes of CONST memory

Errors: none
Warnings: none
