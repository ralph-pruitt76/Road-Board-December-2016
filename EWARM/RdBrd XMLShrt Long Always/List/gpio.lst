###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       31/Jan/2018  10:16:49
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -D XML_SHRT -lCN
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List" -o
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List\gpio.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj\gpio.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\gpio.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : gpio.c
      4            * Description        : This file provides code for the configuration
      5            *                      of all used GPIO pins.
      6            ******************************************************************************
      7            *
      8            * COPYRIGHT(c) 2016 STMicroelectronics
      9            *
     10            * Redistribution and use in source and binary forms, with or without modification,
     11            * are permitted provided that the following conditions are met:
     12            *   1. Redistributions of source code must retain the above copyright notice,
     13            *      this list of conditions and the following disclaimer.
     14            *   2. Redistributions in binary form must reproduce the above copyright notice,
     15            *      this list of conditions and the following disclaimer in the documentation
     16            *      and/or other materials provided with the distribution.
     17            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     18            *      may be used to endorse or promote products derived from this software
     19            *      without specific prior written permission.
     20            *
     21            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     22            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     23            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     24            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     25            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     26            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     27            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     28            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     29            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     30            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     31            *
     32            ******************************************************************************
     33            */
     34          
     35          /* Includes ------------------------------------------------------------------*/
     36          #include "gpio.h"
     37          /* USER CODE BEGIN 0 */

   \                                 In section .data, align 4
     38          GPIO_TypeDef* RoadBrd_LED_PORT[RoadBrd_LEDn] = {LED2_GPIO_PORT, 
   \                     RoadBrd_LED_PORT:
   \   00000000   0x40020000         DC32 40020000H, 40020400H, 40020400H, 40020400H, 40020400H, 40020400H
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \              0x40020400   
   \   00000018   0x40020400         DC32 40020400H, 40020000H, 40020000H, 40020400H
   \              0x40020000   
   \              0x40020000   
   \              0x40020400   
     39                                                          BLUE_GPIO_PORT, 
     40                                                          GREEN_GPIO_PORT, 
     41                                                          YELLOW_GPIO_PORT,
     42                                                          TAM_PWR_GPIO_PORT,
     43                                                          VDD_PWR_GPIO_PORT,
     44                                                          RESET_BGM111_GPIO_PORT,
     45                                                          CHARGE_ON_GPIO_PORT,
     46                                                          HEAT_ON_GPIO_PORT,
     47                                                          GPIOB};
     48          

   \                                 In section .rodata, align 4
     49          const uint16_t RoadBrd_LED_PIN[RoadBrd_LEDn] = {LED2_PIN, 
   \                     RoadBrd_LED_PIN:
   \   00000000   0x0020 0x0200      DC16 32, 512, 4096, 256, 2, 32, 32768, 128, 256, 64
   \              0x1000 0x0100
   \              0x0002 0x0020
   \              0x8000 0x0080
   \              0x0100 0x0040
     50                                                          BLUE_PIN, 
     51                                                          GREEN_PIN, 
     52                                                          YELLOW_PIN,
     53                                                          TAM_PWR_PIN,
     54                                                          VDD_PWR_PIN,
     55                                                          RESET_BGM111_PIN,
     56                                                          CHARGE_ON_PIN,
     57                                                          HEAT_ON_PIN,
     58                                                          I2C_SCL_Pin};
     59          
     60          /* USER CODE END 0 */
     61          
     62          /*----------------------------------------------------------------------------*/
     63          /* Configure GPIO                                                             */
     64          /*----------------------------------------------------------------------------*/
     65          /* USER CODE BEGIN 1 */
     66          
     67          /* USER CODE END 1 */
     68          
     69          /** Configure pins as 
     70                  * Analog 
     71                  * Input 
     72                  * Output
     73                  * EVENT_OUT
     74                  * EXTI
     75                  * Free pins are configured automatically as Analog (this feature is enabled through 
     76                  * the Code Generation settings)
     77          */

   \                                 In section .text, align 2, keep-with-next
     78          void MX_GPIO_Init(void)
     79          {
   \                     MX_GPIO_Init: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
     80          
     81            GPIO_InitTypeDef GPIO_InitStruct;
     82          
     83            /* GPIO Ports Clock Enable */
     84            __HAL_RCC_GPIOC_CLK_ENABLE();
   \   00000004   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000000C   0x....             LDR.N    R1,??DataTable6  ;; 0x4002381c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   \   00000010   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0xF010 0x0004      ANDS     R0,R0,#0x4
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
     85            __HAL_RCC_GPIOH_CLK_ENABLE();
   \   0000001C   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000024   0x....             LDR.N    R1,??DataTable6  ;; 0x4002381c
   \   00000026   0x6008             STR      R0,[R1, #+0]
   \   00000028   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF010 0x0020      ANDS     R0,R0,#0x20
   \   00000030   0x9000             STR      R0,[SP, #+0]
   \   00000032   0x9800             LDR      R0,[SP, #+0]
     86            __HAL_RCC_GPIOA_CLK_ENABLE();
   \   00000034   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000003C   0x....             LDR.N    R1,??DataTable6  ;; 0x4002381c
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000048   0x9000             STR      R0,[SP, #+0]
   \   0000004A   0x9800             LDR      R0,[SP, #+0]
     87            __HAL_RCC_GPIOB_CLK_ENABLE();
   \   0000004C   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000054   0x....             LDR.N    R1,??DataTable6  ;; 0x4002381c
   \   00000056   0x6008             STR      R0,[R1, #+0]
   \   00000058   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF010 0x0002      ANDS     R0,R0,#0x2
   \   00000060   0x9000             STR      R0,[SP, #+0]
   \   00000062   0x9800             LDR      R0,[SP, #+0]
     88            __HAL_RCC_GPIOD_CLK_ENABLE();
   \   00000064   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   0000006C   0x....             LDR.N    R1,??DataTable6  ;; 0x4002381c
   \   0000006E   0x6008             STR      R0,[R1, #+0]
   \   00000070   0x....             LDR.N    R0,??DataTable6  ;; 0x4002381c
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF010 0x0008      ANDS     R0,R0,#0x8
   \   00000078   0x9000             STR      R0,[SP, #+0]
   \   0000007A   0x9800             LDR      R0,[SP, #+0]
     89          
     90            /*Configure GPIO pin : PtPin */
     91            GPIO_InitStruct.Pin = B1_Pin;
   \   0000007C   0xF44F 0x5000      MOV      R0,#+8192
   \   00000080   0x9001             STR      R0,[SP, #+4]
     92            GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x9002             STR      R0,[SP, #+8]
     93            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x9003             STR      R0,[SP, #+12]
     94            HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
   \   0000008A   0xA901             ADD      R1,SP,#+4
   \   0000008C   0x....             LDR.N    R0,??DataTable6_1  ;; 0x40020800
   \   0000008E   0x.... 0x....      BL       HAL_GPIO_Init
     95          
     96            /*Configure GPIO pins : PC0 PC1 PC2 PC3 
     97                                     PC4 PC5 PC6 PC7 
     98                                     PC8 PC9 PC10 PC11 
     99                                     PC12 */
    100            GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
    101                                    |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7 
    102                                    |GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11 
    103                                    |GPIO_PIN_12;
   \   00000092   0xF641 0x70FF      MOVW     R0,#+8191
   \   00000096   0x9001             STR      R0,[SP, #+4]
    104            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   00000098   0x2003             MOVS     R0,#+3
   \   0000009A   0x9002             STR      R0,[SP, #+8]
    105            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x9003             STR      R0,[SP, #+12]
    106            HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
   \   000000A0   0xA901             ADD      R1,SP,#+4
   \   000000A2   0x....             LDR.N    R0,??DataTable6_1  ;; 0x40020800
   \   000000A4   0x.... 0x....      BL       HAL_GPIO_Init
    107          
    108            /*Configure GPIO pins : PA1 PA6 PA9 PA10 */
    109            GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_6|GPIO_PIN_9|GPIO_PIN_10;
   \   000000A8   0xF240 0x6042      MOVW     R0,#+1602
   \   000000AC   0x9001             STR      R0,[SP, #+4]
    110            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   000000AE   0x2003             MOVS     R0,#+3
   \   000000B0   0x9002             STR      R0,[SP, #+8]
    111            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x9003             STR      R0,[SP, #+12]
    112            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000000B6   0xA901             ADD      R1,SP,#+4
   \   000000B8   0x....             LDR.N    R0,??DataTable6_2  ;; 0x40020000
   \   000000BA   0x.... 0x....      BL       HAL_GPIO_Init
    113          
    114            /*Configure GPIO pins : PAPin PAPin PAPin */
    115            GPIO_InitStruct.Pin = LD2_Pin|CHARGE_ON_Pin|HEAT_ON_Pin;
   \   000000BE   0xF44F 0x70D0      MOV      R0,#+416
   \   000000C2   0x9001             STR      R0,[SP, #+4]
    116            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x9002             STR      R0,[SP, #+8]
    117            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x9003             STR      R0,[SP, #+12]
    118            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x9004             STR      R0,[SP, #+16]
    119            HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
   \   000000D0   0xA901             ADD      R1,SP,#+4
   \   000000D2   0x....             LDR.N    R0,??DataTable6_2  ;; 0x40020000
   \   000000D4   0x.... 0x....      BL       HAL_GPIO_Init
    120          
    121            /*Configure GPIO pins : PB0 PB2 PB4 PB5 */
    122            GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5;
   \   000000D8   0x2035             MOVS     R0,#+53
   \   000000DA   0x9001             STR      R0,[SP, #+4]
    123            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x9002             STR      R0,[SP, #+8]
    124            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x9004             STR      R0,[SP, #+16]
    125            //GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    126            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x9003             STR      R0,[SP, #+12]
    127            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   000000E8   0xA901             ADD      R1,SP,#+4
   \   000000EA   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40020400
   \   000000EC   0x.... 0x....      BL       HAL_GPIO_Init
    128          
    129            /*Configure GPIO pins : PBPin PBPin PBPin PBPin 
    130                                     PBPin */
    131            GPIO_InitStruct.Pin = TAM_PWR_Pin|LED_MICRO_Pin|RESET_BGM111_Pin|LED_STATUS_Pin 
    132                                    |LED_BGM111_Pin;
   \   000000F0   0xF249 0x3002      MOVW     R0,#+37634
   \   000000F4   0x9001             STR      R0,[SP, #+4]
    133            GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
   \   000000F6   0x2001             MOVS     R0,#+1
   \   000000F8   0x9002             STR      R0,[SP, #+8]
    134            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x9003             STR      R0,[SP, #+12]
    135            GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
   \   000000FE   0x2000             MOVS     R0,#+0
   \   00000100   0x9004             STR      R0,[SP, #+16]
    136            HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
   \   00000102   0xA901             ADD      R1,SP,#+4
   \   00000104   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40020400
   \   00000106   0x.... 0x....      BL       HAL_GPIO_Init
    137          
    138            /*Configure GPIO pin : PD2 */
    139            GPIO_InitStruct.Pin = GPIO_PIN_2;
   \   0000010A   0x2004             MOVS     R0,#+4
   \   0000010C   0x9001             STR      R0,[SP, #+4]
    140            GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
   \   0000010E   0x2003             MOVS     R0,#+3
   \   00000110   0x9002             STR      R0,[SP, #+8]
    141            GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000112   0x2000             MOVS     R0,#+0
   \   00000114   0x9003             STR      R0,[SP, #+12]
    142            HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
   \   00000116   0xA901             ADD      R1,SP,#+4
   \   00000118   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40020c00
   \   0000011A   0x.... 0x....      BL       HAL_GPIO_Init
    143          
    144            /*Configure GPIO pin Output Level */
    145            HAL_GPIO_WritePin(GPIOA, LD2_Pin|CHARGE_ON_Pin|HEAT_ON_Pin, GPIO_PIN_RESET);
   \   0000011E   0x2200             MOVS     R2,#+0
   \   00000120   0xF44F 0x71D0      MOV      R1,#+416
   \   00000124   0x....             LDR.N    R0,??DataTable6_2  ;; 0x40020000
   \   00000126   0x.... 0x....      BL       HAL_GPIO_WritePin
    146          
    147            /*Configure GPIO pin Output Level */
    148            HAL_GPIO_WritePin(GPIOB, TAM_PWR_Pin|LED_MICRO_Pin|RESET_BGM111_Pin|LED_STATUS_Pin 
    149                                    |LED_BGM111_Pin, GPIO_PIN_RESET);
   \   0000012A   0x2200             MOVS     R2,#+0
   \   0000012C   0xF249 0x3102      MOVW     R1,#+37634
   \   00000130   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40020400
   \   00000132   0x.... 0x....      BL       HAL_GPIO_WritePin
    150          
    151          }
   \   00000136   0xB007             ADD      SP,SP,#+28
   \   00000138   0xBD00             POP      {PC}             ;; return
    152          
    153          /* USER CODE BEGIN 2 */
    154          /**
    155            * @brief  Turns selected LED On.
    156            * @param  Led: Specifies the Led to be set on. 
    157            *   This parameter can be one of following parameters:
    158            *     @arg LED2
    159            * @retval None
    160            */

   \                                 In section .text, align 2, keep-with-next
    161          void RoadBrd_LED_On(RoadBrd_Led_TypeDef Led)
    162          {
   \                     RoadBrd_LED_On: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    163            HAL_GPIO_WritePin(RoadBrd_LED_PORT[Led], RoadBrd_LED_PIN[Led], GPIO_PIN_SET); 
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable6_5
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000E   0x....             LDR.N    R0,??DataTable6_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000016   0x.... 0x....      BL       HAL_GPIO_WritePin
    164          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    165          
    166          /**
    167            * @brief  Turns selected LED Off.
    168            * @param  Led: Specifies the Led to be set off. 
    169            *   This parameter can be one of following parameters:
    170            *     @arg LED2
    171            * @retval None
    172            */

   \                                 In section .text, align 2, keep-with-next
    173          void RoadBrd_LED_Off(RoadBrd_Led_TypeDef Led)
    174          {
   \                     RoadBrd_LED_Off: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    175            HAL_GPIO_WritePin(RoadBrd_LED_PORT[Led], RoadBrd_LED_PIN[Led], GPIO_PIN_RESET); 
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x....             LDR.N    R0,??DataTable6_5
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000E   0x....             LDR.N    R0,??DataTable6_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000016   0x.... 0x....      BL       HAL_GPIO_WritePin
    176          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    177          
    178          /**
    179            * @brief  Toggles the selected LED.
    180            * @param  Led: Specifies the Led to be toggled. 
    181            *   This parameter can be one of following parameters:
    182            *            @arg  LED2
    183            * @retval None
    184            */

   \                                 In section .text, align 2, keep-with-next
    185          void RoadBrd_LED_Toggle(RoadBrd_Led_TypeDef Led)
    186          {
   \                     RoadBrd_LED_Toggle: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    187            HAL_GPIO_TogglePin(RoadBrd_LED_PORT[Led], RoadBrd_LED_PIN[Led]);
   \   00000004   0x....             LDR.N    R0,??DataTable6_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000C   0x....             LDR.N    R0,??DataTable6_6
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000014   0x.... 0x....      BL       HAL_GPIO_TogglePin
    188          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    189          
    190          /**
    191            * @brief  Turns selected gpio On.
    192            * @param  Led: Specifies the gpio to be set on. 
    193            *   This parameter can be one of following parameters:
    194            * @retval None
    195            */

   \                                 In section .text, align 2, keep-with-next
    196          void RoadBrd_gpio_On(RoadBrd_Led_TypeDef Port)
    197          {
   \                     RoadBrd_gpio_On: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    198            HAL_GPIO_WritePin(RoadBrd_LED_PORT[Port], RoadBrd_LED_PIN[Port], GPIO_PIN_SET); 
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x....             LDR.N    R0,??DataTable6_5
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000E   0x....             LDR.N    R0,??DataTable6_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000016   0x.... 0x....      BL       HAL_GPIO_WritePin
    199          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    200          
    201          /**
    202            * @brief  Turns selected gpio Off.
    203            * @param  Led: Specifies the gpio to be set off. 
    204            *   This parameter can be one of following parameters:
    205            * @retval None
    206            */

   \                                 In section .text, align 2, keep-with-next
    207          void RoadBrd_gpio_Off(RoadBrd_Led_TypeDef Port)
    208          {
   \                     RoadBrd_gpio_Off: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    209            HAL_GPIO_WritePin(RoadBrd_LED_PORT[Port], RoadBrd_LED_PIN[Port], GPIO_PIN_RESET); 
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0x....             LDR.N    R0,??DataTable6_5
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000E   0x....             LDR.N    R0,??DataTable6_6
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000016   0x.... 0x....      BL       HAL_GPIO_WritePin
    210          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
    211          
    212          /**
    213            * @brief  Toggles the selected gpio.
    214            * @param  Led: Specifies the gpio to be toggled. 
    215            *   This parameter can be one of following parameters:
    216            * @retval None
    217            */

   \                                 In section .text, align 2, keep-with-next
    218          void RoadBrd_gpio_Toggle(RoadBrd_Led_TypeDef Port)
    219          {
   \                     RoadBrd_gpio_Toggle: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    220            HAL_GPIO_TogglePin(RoadBrd_LED_PORT[Port], RoadBrd_LED_PIN[Port]);
   \   00000004   0x....             LDR.N    R0,??DataTable6_5
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xF830 0x1014      LDRH     R1,[R0, R4, LSL #+1]
   \   0000000C   0x....             LDR.N    R0,??DataTable6_6
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000014   0x.... 0x....      BL       HAL_GPIO_TogglePin
    221          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x4002381C         DC32     0x4002381c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x40020800         DC32     0x40020800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x40020400         DC32     0x40020400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x40020C00         DC32     0x40020c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     RoadBrd_LED_PIN

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     RoadBrd_LED_PORT
    222          
    223          
    224          /* USER CODE END 2 */
    225          
    226          /**
    227            * @}
    228            */
    229          
    230          /**
    231            * @}
    232            */
    233          
    234          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   MX_GPIO_Init
        32   -> HAL_GPIO_Init
        32   -> HAL_GPIO_WritePin
       8   RoadBrd_LED_Off
         8   -> HAL_GPIO_WritePin
       8   RoadBrd_LED_On
         8   -> HAL_GPIO_WritePin
       8   RoadBrd_LED_Toggle
         8   -> HAL_GPIO_TogglePin
       8   RoadBrd_gpio_Off
         8   -> HAL_GPIO_WritePin
       8   RoadBrd_gpio_On
         8   -> HAL_GPIO_WritePin
       8   RoadBrd_gpio_Toggle
         8   -> HAL_GPIO_TogglePin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
     314  MX_GPIO_Init
      28  RoadBrd_LED_Off
      28  RoadBrd_LED_On
      20  RoadBrd_LED_PIN
      40  RoadBrd_LED_PORT
      26  RoadBrd_LED_Toggle
      28  RoadBrd_gpio_Off
      28  RoadBrd_gpio_On
      26  RoadBrd_gpio_Toggle

 
  40 bytes in section .data
  20 bytes in section .rodata
 506 bytes in section .text
 
 506 bytes of CODE  memory
  20 bytes of CONST memory
  40 bytes of DATA  memory

Errors: none
Warnings: none
