###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       07/Dec/2017  20:12:25
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pwr_ex.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pwr_ex.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -D XML_SHRT -lCN
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List" -o
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List\stm32l1xx_hal_pwr_ex.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj\stm32l1xx_hal_pwr_ex.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pwr_ex.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32l1xx_hal_pwr_ex.c
      4            * @author  MCD Application Team
      5            * @version V1.1.3
      6            * @date    04-March-2016
      7            * @brief   Extended PWR HAL module driver.
      8            *          This file provides firmware functions to manage the following
      9            *          functionalities of the Power Controller (PWR) peripheral:
     10            *           + Extended Initialization and de-initialization functions
     11            *           + Extended Peripheral Control functions
     12            *         
     13            ******************************************************************************
     14            * @attention
     15            *
     16            * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
     17            *
     18            * Redistribution and use in source and binary forms, with or without modification,
     19            * are permitted provided that the following conditions are met:
     20            *   1. Redistributions of source code must retain the above copyright notice,
     21            *      this list of conditions and the following disclaimer.
     22            *   2. Redistributions in binary form must reproduce the above copyright notice,
     23            *      this list of conditions and the following disclaimer in the documentation
     24            *      and/or other materials provided with the distribution.
     25            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     26            *      may be used to endorse or promote products derived from this software
     27            *      without specific prior written permission.
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     30            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     31            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     32            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     33            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     34            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     35            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     36            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     37            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     38            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     39            *
     40            ******************************************************************************
     41            */
     42          
     43          /* Includes ------------------------------------------------------------------*/
     44          #include "stm32l1xx_hal.h"
     45          
     46          /** @addtogroup STM32L1xx_HAL_Driver
     47            * @{
     48            */
     49          
     50          /** @defgroup PWREx PWREx
     51            * @brief    PWR HAL module driver
     52            * @{
     53            */
     54          
     55          #ifdef HAL_PWR_MODULE_ENABLED
     56          
     57          /* Private typedef -----------------------------------------------------------*/
     58          /* Private define ------------------------------------------------------------*/
     59          /* Private macro -------------------------------------------------------------*/
     60          /* Private variables ---------------------------------------------------------*/
     61          /* Private function prototypes -----------------------------------------------*/
     62          /* Private functions ---------------------------------------------------------*/
     63          
     64          /** @defgroup PWREx_Exported_Functions PWREx Exported Functions
     65            * @{
     66            */
     67          
     68          /** @defgroup PWREx_Exported_Functions_Group1 Peripheral Extended Features Functions
     69            * @brief    Low Power modes configuration functions
     70            *
     71          @verbatim
     72          
     73           ===============================================================================
     74                           ##### Peripheral extended features functions #####
     75           ===============================================================================
     76          @endverbatim
     77            * @{
     78            */
     79          
     80          /**
     81            * @brief Return Voltage Scaling Range.   
     82            * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_SCALE1, PWR_REGULATOR_VOLTAGE_SCALE2 or PWR_REGULATOR_VOLTAGE_SCALE3)
     83            */  

   \                                 In section .text, align 2, keep-with-next
     84          uint32_t HAL_PWREx_GetVoltageRange(void)
     85          {
     86            return  (PWR->CR & PWR_CR_VOS);
   \                     HAL_PWREx_GetVoltageRange: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable6  ;; 0x40007000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF410 0x50C0      ANDS     R0,R0,#0x1800
   \   00000008   0x4770             BX       LR               ;; return
     87          }
     88          
     89          
     90          /**
     91            * @brief  Enables the Fast WakeUp from Ultra Low Power mode.
     92            * @note   This bit works in conjunction with ULP bit. 
     93            *         Means, when ULP = 1 and FWU = 1 :VREFINT startup time is ignored when 
     94            *         exiting from low power mode.
     95            * @retval None
     96            */

   \                                 In section .text, align 2, keep-with-next
     97          void HAL_PWREx_EnableFastWakeUp(void)
     98          {
     99            /* Enable the fast wake up */
    100            *(__IO uint32_t *) CR_FWU_BB = (uint32_t)ENABLE;
   \                     HAL_PWREx_EnableFastWakeUp: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0xF45F 0x1100      MOVS     R1,#+2097152
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    101          }
   \   00000012   0x4770             BX       LR               ;; return
    102          
    103          /**
    104            * @brief  Disables the Fast WakeUp from Ultra Low Power mode.
    105            * @retval None
    106            */

   \                                 In section .text, align 2, keep-with-next
    107          void HAL_PWREx_DisableFastWakeUp(void)
    108          {
    109            /* Disable the fast wake up */
    110            *(__IO uint32_t *) CR_FWU_BB = (uint32_t)DISABLE;
   \                     HAL_PWREx_DisableFastWakeUp: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xF45F 0x1100      MOVS     R1,#+2097152
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    111          }
   \   00000012   0x4770             BX       LR               ;; return
    112          
    113          /**
    114            * @brief  Enables the Ultra Low Power mode
    115            * @retval None
    116            */

   \                                 In section .text, align 2, keep-with-next
    117          void HAL_PWREx_EnableUltraLowPower(void)
    118          {
    119            /* Enable the Ultra Low Power mode */
    120            *(__IO uint32_t *) CR_ULP_BB = (uint32_t)ENABLE;
   \                     HAL_PWREx_EnableUltraLowPower: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0xF45F 0x0180      MOVS     R1,#+4194304
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    121          }
   \   00000012   0x4770             BX       LR               ;; return
    122          
    123          /**
    124            * @brief  Disables the Ultra Low Power mode
    125            * @retval None
    126            */

   \                                 In section .text, align 2, keep-with-next
    127          void HAL_PWREx_DisableUltraLowPower(void)
    128          {
    129            /* Disable the Ultra Low Power mode */
    130            *(__IO uint32_t *) CR_ULP_BB = (uint32_t)DISABLE;
   \                     HAL_PWREx_DisableUltraLowPower: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xF45F 0x0180      MOVS     R1,#+4194304
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    131          }
   \   00000012   0x4770             BX       LR               ;; return
    132          
    133          /**
    134            * @brief  Enters the Low Power Run mode.
    135            * @note   Low power run mode can only be entered when VCORE is in range 2.
    136            *         In addition, the dynamic voltage scaling must not be used when Low
    137            *         power run mode is selected. Only Stop and Sleep modes with regulator
    138            *         configured in Low power mode is allowed when Low power run mode is 
    139            *         selected.
    140            * @note   In Low power run mode, all I/O pins keep the same state as in Run mode.
    141            * @retval None
    142            */

   \                                 In section .text, align 2, keep-with-next
    143          void HAL_PWREx_EnableLowPowerRunMode(void)
    144          {
    145            /* Enters the Low Power Run mode */
    146            *(__IO uint32_t *) CR_LPSDSR_BB = (uint32_t)ENABLE;
   \                     HAL_PWREx_EnableLowPowerRunMode: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0xF05F 0x4100      MOVS     R1,#-2147483648
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    147            *(__IO uint32_t *) CR_LPRUN_BB  = (uint32_t)ENABLE;
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xF45F 0x3100      MOVS     R1,#+131072
   \   00000018   0xFAB1 0xF181      CLZ      R1,R1
   \   0000001C   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000001E   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000022   0x6008             STR      R0,[R1, #+0]
    148          }
   \   00000024   0x4770             BX       LR               ;; return
    149          
    150          /**
    151            * @brief  Exits the Low Power Run mode.
    152            * @retval None
    153            */

   \                                 In section .text, align 2, keep-with-next
    154          void HAL_PWREx_DisableLowPowerRunMode(void)
    155          {
    156            /* Exits the Low Power Run mode */
    157            *(__IO uint32_t *) CR_LPRUN_BB  = (uint32_t)DISABLE;
   \                     HAL_PWREx_DisableLowPowerRunMode: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xF45F 0x3100      MOVS     R1,#+131072
   \   00000006   0xFAB1 0xF181      CLZ      R1,R1
   \   0000000A   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000000C   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000010   0x6008             STR      R0,[R1, #+0]
    158            *(__IO uint32_t *) CR_LPSDSR_BB = (uint32_t)DISABLE;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xF05F 0x4100      MOVS     R1,#-2147483648
   \   00000018   0xFAB1 0xF181      CLZ      R1,R1
   \   0000001C   0x....             LDR.N    R2,??DataTable6_1  ;; 0x420e0000
   \   0000001E   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   00000022   0x6008             STR      R0,[R1, #+0]
    159          }
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40007000         DC32     0x40007000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x420E0000         DC32     0x420e0000
    160          
    161          /**
    162            * @}
    163            */
    164          
    165          /**
    166            * @}
    167            */
    168          
    169          #endif /* HAL_PWR_MODULE_ENABLED */
    170          /**
    171            * @}
    172            */
    173          
    174          /**
    175            * @}
    176            */
    177          
    178          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   HAL_PWREx_DisableFastWakeUp
       0   HAL_PWREx_DisableLowPowerRunMode
       0   HAL_PWREx_DisableUltraLowPower
       0   HAL_PWREx_EnableFastWakeUp
       0   HAL_PWREx_EnableLowPowerRunMode
       0   HAL_PWREx_EnableUltraLowPower
       0   HAL_PWREx_GetVoltageRange


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
      20  HAL_PWREx_DisableFastWakeUp
      38  HAL_PWREx_DisableLowPowerRunMode
      20  HAL_PWREx_DisableUltraLowPower
      20  HAL_PWREx_EnableFastWakeUp
      38  HAL_PWREx_EnableLowPowerRunMode
      20  HAL_PWREx_EnableUltraLowPower
      10  HAL_PWREx_GetVoltageRange

 
 174 bytes in section .text
 
 174 bytes of CODE memory

Errors: none
Warnings: none
