###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       13/Dec/2017  09:15:37
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pcd_ex.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pcd_ex.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -D XML_SHRT -lCN
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List" -o
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\List\stm32l1xx_hal_pcd_ex.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\RdBrd
#        XMLShrt Long Always\Obj\stm32l1xx_hal_pcd_ex.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Drivers\STM32L1xx_HAL_Driver\Src\stm32l1xx_hal_pcd_ex.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32l1xx_hal_pcd_ex.c
      4            * @author  MCD Application Team
      5            * @version V1.1.3
      6            * @date    04-March-2016
      7            * @brief   Extended PCD HAL module driver.
      8            *          This file provides firmware functions to manage the following 
      9            *          functionalities of the USB Peripheral Controller:
     10            *           + Configururation of the PMA for EP
     11            *         
     12            ******************************************************************************
     13            * @attention
     14            *
     15            * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
     16            *
     17            * Redistribution and use in source and binary forms, with or without modification,
     18            * are permitted provided that the following conditions are met:
     19            *   1. Redistributions of source code must retain the above copyright notice,
     20            *      this list of conditions and the following disclaimer.
     21            *   2. Redistributions in binary form must reproduce the above copyright notice,
     22            *      this list of conditions and the following disclaimer in the documentation
     23            *      and/or other materials provided with the distribution.
     24            *   3. Neither the name of STMicroelectronics nor the names of its contributors
     25            *      may be used to endorse or promote products derived from this software
     26            *      without specific prior written permission.
     27            *
     28            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     29            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     30            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     31            * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     32            * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     33            * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     34            * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     35            * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     36            * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     37            * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     38            *
     39            ******************************************************************************
     40            */ 
     41          
     42          /* Includes ------------------------------------------------------------------*/
     43          #include "stm32l1xx_hal.h"
     44          
     45          /** @addtogroup STM32L1xx_HAL_Driver
     46            * @{
     47            */
     48          
     49          /** @defgroup PCDEx PCDEx
     50            * @brief PCDEx HAL module driver
     51            * @{
     52            */
     53          
     54          #ifdef HAL_PCD_MODULE_ENABLED
     55          
     56          /* Private typedef -----------------------------------------------------------*/
     57          /* Private define ------------------------------------------------------------*/
     58          /* Private macro -------------------------------------------------------------*/
     59          /* Private variables ---------------------------------------------------------*/
     60          /* Private function prototypes -----------------------------------------------*/
     61          /* Private functions ---------------------------------------------------------*/
     62          
     63          
     64          /** @defgroup PCDEx_Exported_Functions PCDEx Exported Functions
     65            * @{
     66            */
     67          
     68          /** @defgroup PCDEx_Exported_Functions_Group2 Extended Peripheral Control functions
     69            * @brief    Extended Peripheral Control functions
     70            *
     71          @verbatim   
     72           ===============================================================================
     73                       ##### Peripheral Control functions #####
     74           ===============================================================================  
     75              [..]  This section provides functions allowing to:
     76                (+) Configure PMA for the EndPoint
     77                
     78          @endverbatim
     79            * @{
     80            */
     81            
     82          /**
     83            * @brief Configure PMA for EP
     84            * @param  hpcd : Device instance
     85            * @param  ep_addr: endpoint address
     86            * @param  ep_kind: endpoint Kind
     87            *                  USB_SNG_BUF: Single Buffer used
     88            *                  USB_DBL_BUF: Double Buffer used
     89            * @param  pmaadress: EP address in The PMA: In case of single buffer endpoint
     90            *                   this parameter is 16-bit value providing the address
     91            *                   in PMA allocated to endpoint.
     92            *                   In case of double buffer endpoint this parameter
     93            *                   is a 32-bit value providing the endpoint buffer 0 address
     94            *                   in the LSB part of 32-bit value and endpoint buffer 1 address
     95            *                   in the MSB part of 32-bit value.
     96            * @retval : status
     97            */
     98          

   \                                 In section .text, align 2, keep-with-next
     99          HAL_StatusTypeDef  HAL_PCDEx_PMAConfig(PCD_HandleTypeDef *hpcd, 
    100                                  uint16_t ep_addr,
    101                                  uint16_t ep_kind,
    102                                  uint32_t pmaadress)
    103          
    104          {
   \                     HAL_PCDEx_PMAConfig: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
   \   00000002   0x0004             MOVS     R4,R0
    105            PCD_EPTypeDef *ep;
    106            
    107            /* initialize ep structure*/
    108            if ((0x80 & ep_addr) == 0x80)
   \   00000004   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   0x0608             LSLS     R0,R1,#+24
   \   00000008   0xD508             BPL.N    ??HAL_PCDEx_PMAConfig_0
    109            {
    110              ep = &hpcd->IN_ep[ep_addr & 0x7F];
   \   0000000A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000C   0xF011 0x007F      ANDS     R0,R1,#0x7F
   \   00000010   0x261C             MOVS     R6,#+28
   \   00000012   0x4370             MULS     R0,R6,R0
   \   00000014   0x4420             ADD      R0,R4,R0
   \   00000016   0x3028             ADDS     R0,R0,#+40
   \   00000018   0x0005             MOVS     R5,R0
   \   0000001A   0xE008             B.N      ??HAL_PCDEx_PMAConfig_1
    111            }
    112            else
    113            {
    114              ep = &hpcd->OUT_ep[ep_addr];
   \                     ??HAL_PCDEx_PMAConfig_0: (+1)
   \   0000001C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001E   0x201C             MOVS     R0,#+28
   \   00000020   0xFB00 0xF001      MUL      R0,R0,R1
   \   00000024   0x4420             ADD      R0,R4,R0
   \   00000026   0xF44F 0x7684      MOV      R6,#+264
   \   0000002A   0x4430             ADD      R0,R0,R6
   \   0000002C   0x0005             MOVS     R5,R0
    115            }
    116            
    117            /* Here we check if the endpoint is single or double Buffer*/
    118            if (ep_kind == PCD_SNG_BUF)
   \                     ??HAL_PCDEx_PMAConfig_1: (+1)
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x2A00             CMP      R2,#+0
   \   00000032   0xD103             BNE.N    ??HAL_PCDEx_PMAConfig_2
    119            {
    120              /*Single Buffer*/
    121              ep->doublebuffer = 0;
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x72A8             STRB     R0,[R5, #+10]
    122              /*Configure te PMA*/
    123              ep->pmaadress = (uint16_t)pmaadress;
   \   00000038   0x80AB             STRH     R3,[R5, #+4]
   \   0000003A   0xE004             B.N      ??HAL_PCDEx_PMAConfig_3
    124            }
    125            else /*USB_DBL_BUF*/
    126            {
    127              /*Double Buffer Endpoint*/
    128              ep->doublebuffer = 1;
   \                     ??HAL_PCDEx_PMAConfig_2: (+1)
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x72A8             STRB     R0,[R5, #+10]
    129              /*Configure the PMA*/
    130              ep->pmaaddr0 =  pmaadress & 0xFFFF;
   \   00000040   0x80EB             STRH     R3,[R5, #+6]
    131              ep->pmaaddr1 =  (pmaadress & 0xFFFF0000) >> 16;
   \   00000042   0x0C18             LSRS     R0,R3,#+16
   \   00000044   0x8128             STRH     R0,[R5, #+8]
    132            }
    133            
    134            return HAL_OK; 
   \                     ??HAL_PCDEx_PMAConfig_3: (+1)
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xBC70             POP      {R4-R6}
   \   0000004A   0x4770             BX       LR               ;; return
    135          }
    136          
    137          /**
    138            * @}
    139            */
    140          
    141          /**
    142            * @}
    143            */
    144          
    145          #endif /* HAL_PCD_MODULE_ENABLED */
    146          /**
    147            * @}
    148            */
    149          
    150          /**
    151            * @}
    152            */
    153          
    154          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      12   HAL_PCDEx_PMAConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      76  HAL_PCDEx_PMAConfig

 
 76 bytes in section .text
 
 76 bytes of CODE memory

Errors: none
Warnings: none
