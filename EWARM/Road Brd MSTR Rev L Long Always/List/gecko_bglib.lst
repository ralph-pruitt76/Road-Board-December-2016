###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       07/Aug/2017  13:10:59
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Middlewares\Third_Party\BgLib\gecko_bglib.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Middlewares\Third_Party\BgLib\gecko_bglib.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -lCN
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\List" -o
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\List\gecko_bglib.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\Obj\gecko_bglib.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Middlewares\Third_Party\BgLib\gecko_bglib.c
      1          #include "gecko_bglib.h"
      2          #include "wwdg.h"
      3          

   \                                 In section .text, align 2, keep-with-next
      4          struct gecko_cmd_packet* gecko_wait_message(void)
      5          {//wait for event from system
   \                     gecko_wait_message: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB082             SUB      SP,SP,#+8
      6              uint32_t msg_length;
      7              uint32_t header;
      8              uint8_t  *payload;
      9              struct gecko_cmd_packet *pck, *retVal = NULL;
   \   00000006   0x2700             MOVS     R7,#+0
     10              int      ret;
     11              //sync to header byte
     12              ret = bglib_input(1, (uint8_t*)&header);
   \   00000008   0x4669             MOV      R1,SP
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x....             LDR.N    R2,??DataTable4
   \   0000000E   0x6812             LDR      R2,[R2, #+0]
   \   00000010   0x4790             BLX      R2
   \   00000012   0x4680             MOV      R8,R0
     13              if (ret < 0 || (header&0x78) != gecko_dev_type_gecko)
   \   00000014   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000018   0xD404             BMI.N    ??gecko_wait_message_0
   \   0000001A   0x9800             LDR      R0,[SP, #+0]
   \   0000001C   0xF010 0x0078      ANDS     R0,R0,#0x78
   \   00000020   0x2820             CMP      R0,#+32
   \   00000022   0xD001             BEQ.N    ??gecko_wait_message_1
     14              {
     15                  return 0;
   \                     ??gecko_wait_message_0: (+1)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xE057             B.N      ??gecko_wait_message_2
     16              }
     17              ret = bglib_input(BGLIB_MSG_HEADER_LEN-1, &((uint8_t*)&header)[1]);
   \                     ??gecko_wait_message_1: (+1)
   \   00000028   0xF10D 0x0101      ADD      R1,SP,#+1
   \   0000002C   0x2003             MOVS     R0,#+3
   \   0000002E   0x....             LDR.N    R2,??DataTable4
   \   00000030   0x6812             LDR      R2,[R2, #+0]
   \   00000032   0x4790             BLX      R2
   \   00000034   0x4680             MOV      R8,R0
     18              if (ret < 0)
   \   00000036   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000003A   0xD501             BPL.N    ??gecko_wait_message_3
     19              {
     20                  return 0;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0xE04B             B.N      ??gecko_wait_message_2
     21              }
     22          
     23              msg_length = BGLIB_MSG_LEN(header);
   \                     ??gecko_wait_message_3: (+1)
   \   00000040   0x9800             LDR      R0,[SP, #+0]
   \   00000042   0x0200             LSLS     R0,R0,#+8
   \   00000044   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000048   0x9900             LDR      R1,[SP, #+0]
   \   0000004A   0xF3C1 0x2107      UBFX     R1,R1,#+8,#+8
   \   0000004E   0x4308             ORRS     R0,R1,R0
   \   00000050   0x0004             MOVS     R4,R0
     24          
     25              if ((header & 0xf8) == ((uint32_t)gecko_dev_type_gecko | (uint32_t)gecko_msg_type_evt))
   \   00000052   0x9800             LDR      R0,[SP, #+0]
   \   00000054   0xF010 0x00F8      ANDS     R0,R0,#0xF8
   \   00000058   0x28A0             CMP      R0,#+160
   \   0000005A   0xD11F             BNE.N    ??gecko_wait_message_4
     26              {
     27                  //received event
     28                  if ((gecko_queue_w + 1) % BGLIB_QUEUE_LEN == gecko_queue_r)
   \   0000005C   0x....             LDR.N    R0,??DataTable4_1
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \   00000062   0x211E             MOVS     R1,#+30
   \   00000064   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000068   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000006C   0x....             LDR.N    R1,??DataTable4_2
   \   0000006E   0x6809             LDR      R1,[R1, #+0]
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xD101             BNE.N    ??gecko_wait_message_5
     29                      return 0;//NO ROOM IN QUEUE
   \   00000074   0x2000             MOVS     R0,#+0
   \   00000076   0xE02F             B.N      ??gecko_wait_message_2
     30          
     31                  pck=&gecko_queue[gecko_queue_w];
   \                     ??gecko_wait_message_5: (+1)
   \   00000078   0x....             LDR.N    R0,??DataTable4_3
   \   0000007A   0x....             LDR.N    R1,??DataTable4_1
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0x2284             MOVS     R2,#+132
   \   00000080   0x4351             MULS     R1,R2,R1
   \   00000082   0x4408             ADD      R0,R0,R1
   \   00000084   0x0006             MOVS     R6,R0
     32                  gecko_queue_w = (gecko_queue_w + 1) % BGLIB_QUEUE_LEN;
   \   00000086   0x....             LDR.N    R0,??DataTable4_1
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x211E             MOVS     R1,#+30
   \   0000008E   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000092   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000096   0x....             LDR.N    R1,??DataTable4_1
   \   00000098   0x6008             STR      R0,[R1, #+0]
   \   0000009A   0xE00B             B.N      ??gecko_wait_message_6
     33              }
     34              else if ((header & 0xf8) == gecko_dev_type_gecko)
   \                     ??gecko_wait_message_4: (+1)
   \   0000009C   0x9800             LDR      R0,[SP, #+0]
   \   0000009E   0xF010 0x00F8      ANDS     R0,R0,#0xF8
   \   000000A2   0x2820             CMP      R0,#+32
   \   000000A4   0xD104             BNE.N    ??gecko_wait_message_7
     35              {//response
     36                  retVal = pck = gecko_rsp_msg;
   \   000000A6   0x....             LDR.N    R0,??DataTable4_4
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x0006             MOVS     R6,R0
   \   000000AC   0x0037             MOVS     R7,R6
   \   000000AE   0xE001             B.N      ??gecko_wait_message_6
     37              }
     38              else
     39              {
     40                  //fail
     41                  return 0;
   \                     ??gecko_wait_message_7: (+1)
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0xE011             B.N      ??gecko_wait_message_2
     42              }
     43              pck->header = header;
   \                     ??gecko_wait_message_6: (+1)
   \   000000B4   0x9800             LDR      R0,[SP, #+0]
   \   000000B6   0x6030             STR      R0,[R6, #+0]
     44              payload = (uint8_t*)&pck->data.payload;
   \   000000B8   0x1D30             ADDS     R0,R6,#+4
   \   000000BA   0x0005             MOVS     R5,R0
     45              /**
     46              * Read the payload data if required and store it after the header.
     47              */
     48              if (msg_length)
   \   000000BC   0x2C00             CMP      R4,#+0
   \   000000BE   0xD00A             BEQ.N    ??gecko_wait_message_8
     49              {
     50                  ret = bglib_input(msg_length, payload);
   \   000000C0   0x0029             MOVS     R1,R5
   \   000000C2   0x0020             MOVS     R0,R4
   \   000000C4   0x....             LDR.N    R2,??DataTable4
   \   000000C6   0x6812             LDR      R2,[R2, #+0]
   \   000000C8   0x4790             BLX      R2
   \   000000CA   0x4680             MOV      R8,R0
     51                  if (ret < 0)
   \   000000CC   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000D0   0xD501             BPL.N    ??gecko_wait_message_8
     52                  {
     53                      return 0;
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0xE000             B.N      ??gecko_wait_message_2
     54                  }
     55              }
     56          
     57              // Using retVal avoid double handling of event msg types in outer function
     58              return retVal;
   \                     ??gecko_wait_message_8: (+1)
   \   000000D6   0x0038             MOVS     R0,R7
   \                     ??gecko_wait_message_2: (+1)
   \   000000D8   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
     59          }
     60          
     61          

   \                                 In section .text, align 2, keep-with-next
     62          int gecko_event_pending(void)
     63          {
   \                     gecko_event_pending: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     64              if(gecko_queue_w != gecko_queue_r)
   \   00000002   0x....             LDR.N    R0,??DataTable4_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable4_2
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD001             BEQ.N    ??gecko_event_pending_0
     65              {//event is waiting in queue
     66                  return 1;
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0xE00B             B.N      ??gecko_event_pending_1
     67              }
     68          
     69              //something in uart waiting to be read
     70          	if (bglib_peek && bglib_peek())
   \                     ??gecko_event_pending_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable4_5
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD006             BEQ.N    ??gecko_event_pending_2
   \   0000001A   0x....             LDR.N    R0,??DataTable4_5
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x4780             BLX      R0
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD001             BEQ.N    ??gecko_event_pending_2
     71                  return 1;
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0xE000             B.N      ??gecko_event_pending_1
     72          
     73              return 0;
   \                     ??gecko_event_pending_2: (+1)
   \   00000028   0x2000             MOVS     R0,#+0
   \                     ??gecko_event_pending_1: (+1)
   \   0000002A   0xBD02             POP      {R1,PC}          ;; return
     74          }
     75          

   \                                 In section .text, align 2, keep-with-next
     76          struct gecko_cmd_packet* gecko_get_event(int block)
     77          {
   \                     gecko_get_event: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     78              struct gecko_cmd_packet* p;
     79          
     80              while (1)
     81              {
     82                  if (gecko_queue_w != gecko_queue_r)
   \                     ??gecko_get_event_0: (+1)
   \   00000004   0x....             LDR.N    R0,??DataTable4_1
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x....             LDR.N    R1,??DataTable4_2
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x4288             CMP      R0,R1
   \   0000000E   0xD012             BEQ.N    ??gecko_get_event_1
     83                  {
     84                      p = &gecko_queue[gecko_queue_r];
   \   00000010   0x....             LDR.N    R0,??DataTable4_3
   \   00000012   0x....             LDR.N    R1,??DataTable4_2
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x2284             MOVS     R2,#+132
   \   00000018   0x4351             MULS     R1,R2,R1
   \   0000001A   0x4408             ADD      R0,R0,R1
   \   0000001C   0x0005             MOVS     R5,R0
     85                      gecko_queue_r = (gecko_queue_r + 1) % BGLIB_QUEUE_LEN;
   \   0000001E   0x....             LDR.N    R0,??DataTable4_2
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x1C40             ADDS     R0,R0,#+1
   \   00000024   0x211E             MOVS     R1,#+30
   \   00000026   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000002A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000002E   0x....             LDR.N    R1,??DataTable4_2
   \   00000030   0x6008             STR      R0,[R1, #+0]
     86                      return p;
   \   00000032   0x0028             MOVS     R0,R5
   \   00000034   0xE012             B.N      ??gecko_get_event_2
     87                  }
     88                  //if not blocking and nothing in uart -> out
     89                  if(!block && bglib_peek && bglib_peek()==0)
   \                     ??gecko_get_event_1: (+1)
   \   00000036   0x2C00             CMP      R4,#+0
   \   00000038   0xD10A             BNE.N    ??gecko_get_event_3
   \   0000003A   0x....             LDR.N    R0,??DataTable4_5
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD006             BEQ.N    ??gecko_get_event_3
   \   00000042   0x....             LDR.N    R0,??DataTable4_5
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x4780             BLX      R0
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD101             BNE.N    ??gecko_get_event_3
     90                      return NULL;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0xE005             B.N      ??gecko_get_event_2
     91          
     92                  //read more messages from device
     93                  if ( (p = gecko_wait_message()) ) {
   \                     ??gecko_get_event_3: (+1)
   \   00000050   0x.... 0x....      BL       gecko_wait_message
   \   00000054   0x0005             MOVS     R5,R0
   \   00000056   0x2800             CMP      R0,#+0
   \   00000058   0xD0D4             BEQ.N    ??gecko_get_event_0
     94                    return p;
   \   0000005A   0x0028             MOVS     R0,R5
   \                     ??gecko_get_event_2: (+1)
   \   0000005C   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     95                  }
     96              }
     97          }
     98          

   \                                 In section .text, align 2, keep-with-next
     99          struct gecko_cmd_packet* gecko_wait_event(void)
    100          {
   \                     gecko_wait_event: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    101              return gecko_get_event(1);
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       gecko_get_event
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    102          }
    103          

   \                                 In section .text, align 2, keep-with-next
    104          struct gecko_cmd_packet* gecko_peek_event(void)
    105          {
   \                     gecko_peek_event: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    106              return gecko_get_event(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       gecko_get_event
   \   00000008   0xBD02             POP      {R1,PC}          ;; return
    107          }
    108          

   \                                 In section .text, align 2, keep-with-next
    109          struct gecko_cmd_packet* gecko_wait_response(void)
    110          {
   \                     gecko_wait_response: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    111              struct gecko_cmd_packet* p;
    112              while (1)
    113              {
    114                  // Need to Service Watch Dog or we die here....
    115                  RoadBrd_WWDG_Refresh();     // Refresh WatchDog
   \                     ??gecko_wait_response_0: (+1)
   \   00000002   0x.... 0x....      BL       RoadBrd_WWDG_Refresh
    116                  p = gecko_wait_message();
   \   00000006   0x.... 0x....      BL       gecko_wait_message
   \   0000000A   0x0004             MOVS     R4,R0
    117                  if (p&&!(p->header&gecko_msg_type_evt))
   \   0000000C   0x2C00             CMP      R4,#+0
   \   0000000E   0xD0F8             BEQ.N    ??gecko_wait_response_0
   \   00000010   0x7820             LDRB     R0,[R4, #+0]
   \   00000012   0x0600             LSLS     R0,R0,#+24
   \   00000014   0xD4F5             BMI.N    ??gecko_wait_response_0
    118                      return p;
   \   00000016   0x0020             MOVS     R0,R4
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    119              }
    120          }
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void gecko_handle_command(uint32_t hdr, void* data)
    123          {
   \                     gecko_handle_command: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    124              //packet in gecko_cmd_msg is waiting for output
    125              bglib_output(BGLIB_MSG_HEADER_LEN+BGLIB_MSG_LEN(gecko_cmd_msg->header), (uint8_t*)gecko_cmd_msg);
   \   00000006   0x....             LDR.N    R0,??DataTable4_6
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0x....             LDR.N    R0,??DataTable4_6
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x0200             LSLS     R0,R0,#+8
   \   00000012   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000016   0x....             LDR.N    R2,??DataTable4_6
   \   00000018   0x6812             LDR      R2,[R2, #+0]
   \   0000001A   0x6812             LDR      R2,[R2, #+0]
   \   0000001C   0xF3C2 0x2207      UBFX     R2,R2,#+8,#+8
   \   00000020   0x4310             ORRS     R0,R2,R0
   \   00000022   0x1D00             ADDS     R0,R0,#+4
   \   00000024   0x....             LDR.N    R2,??DataTable4_7
   \   00000026   0x6812             LDR      R2,[R2, #+0]
   \   00000028   0x4790             BLX      R2
    126              gecko_wait_response();
   \   0000002A   0x.... 0x....      BL       gecko_wait_response
    127          }
   \   0000002E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    128          

   \                                 In section .text, align 2, keep-with-next
    129          void gecko_handle_command_noresponse(uint32_t hdr, void* data)
    130          {
   \                     gecko_handle_command_noresponse: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    131              //packet in gecko_cmd_msg is waiting for output
    132              bglib_output(BGLIB_MSG_HEADER_LEN+BGLIB_MSG_LEN(gecko_cmd_msg->header), (uint8_t*)gecko_cmd_msg);
   \   00000006   0x....             LDR.N    R0,??DataTable4_6
   \   00000008   0x6801             LDR      R1,[R0, #+0]
   \   0000000A   0x....             LDR.N    R0,??DataTable4_6
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x0200             LSLS     R0,R0,#+8
   \   00000012   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000016   0x....             LDR.N    R2,??DataTable4_6
   \   00000018   0x6812             LDR      R2,[R2, #+0]
   \   0000001A   0x6812             LDR      R2,[R2, #+0]
   \   0000001C   0xF3C2 0x2207      UBFX     R2,R2,#+8,#+8
   \   00000020   0x4310             ORRS     R0,R2,R0
   \   00000022   0x1D00             ADDS     R0,R0,#+4
   \   00000024   0x....             LDR.N    R2,??DataTable4_7
   \   00000026   0x6812             LDR      R2,[R2, #+0]
   \   00000028   0x4790             BLX      R2
    133          }
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     bglib_input

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     gecko_queue_w

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     gecko_queue_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     gecko_queue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     gecko_rsp_msg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     bglib_peek

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     gecko_cmd_msg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     bglib_output

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   gecko_event_pending
         8   -- Indirect call
      16   gecko_get_event
        16   -- Indirect call
        16   -> gecko_wait_message
      16   gecko_handle_command
        16   -- Indirect call
        16   -> gecko_wait_response
      16   gecko_handle_command_noresponse
        16   -- Indirect call
       8   gecko_peek_event
         8   -> gecko_get_event
       8   gecko_wait_event
         8   -> gecko_get_event
      32   gecko_wait_message
        32   -- Indirect call
       8   gecko_wait_response
         8   -> RoadBrd_WWDG_Refresh
         8   -> gecko_wait_message


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
      44  gecko_event_pending
      94  gecko_get_event
      48  gecko_handle_command
      44  gecko_handle_command_noresponse
      10  gecko_peek_event
      10  gecko_wait_event
     220  gecko_wait_message
      26  gecko_wait_response

 
 528 bytes in section .text
 
 528 bytes of CODE memory

Errors: none
Warnings: none
