###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.2.11341/W32 for ARM       18/Jul/2017  05:20:05
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\app_data.c
#    Command line =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\app_data.c
#        -D USE_HAL_DRIVER -D STM32L152xE -D USE_STM32L1XX_NUCLEO -D ASCII -D
#        REV_L -D LONG_DELAY -lCN
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\List" -o
#        "D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\Obj" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/BSP/STM32L1xx_Nucleo\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM3\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Core/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/ST/STM32_USB_Device_Library/Class/CDC/Inc\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM/../Drivers/CMSIS/Device/ST/STM32L1xx/Include\
#        -I
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\..\Middlewares\Third_Party\BgLib\
#        -On --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  English_United States.1252
#    List file    =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\List\app_data.lst
#    Object file  =  
#        D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\EWARM\Road
#        Brd MSTR Rev L Long Always\Obj\app_data.o
#
###############################################################################

D:\GoogleDriveCLT\GoogleDrive\WeatherCloud\Roadboard\Software\Road-Board-December-2016N8\Src\app_data.c
      1          /* Application data manager implementation
      2           * Takes care of scheduling sample times and formatting the sensor data
      3           * to be sent as BLE characteristics to the app. */
      4          
      5          #include "app_data.h"
      6          #include "stm32l1xx_hal.h"
      7          #include "VMonitor.h"
      8          #include "Temperature.h"
      9          #include "Humidity.h"
     10          #include "RGBLight.h"
     11          #include "barometer.h"
     12          #include "GridEye.h"
     13          #include <stdio.h>
     14          #include <string.h>
     15          #include "ErrorCodes.h"
     16          #include "wwdg.h"
     17          
     18          /* Characteristic handles */
     19          /*
     20          #ifdef LEGACY_PATCH
     21          #define gattdb_xgatt_temp0                      8
     22          #define gattdb_xgatt_temp1                     12
     23          #define gattdb_xgatt_temp2                     16
     24          #define gattdb_xgatt_temp3                     20
     25          #define gattdb_xgatt_temp4                     24
     26          #define gattdb_xgatt_temp5                     28
     27          #define gattdb_xgatt_temp6                     32
     28          #define gattdb_xgatt_temp7                     36
     29          #define gattdb_xgatt_temp8                     40
     30          #define gattdb_xgatt_fuel                      44
     31          #define gattdb_xgatt_humidity                  48
     32          #define gattdb_xgatt_barometer                 52
     33          #define gattdb_xgatt_lightning                 56
     34          #define gattdb_xgatt_rev                       60
     35          #define gattdb_xgatt_fft1                      64
     36          #define gattdb_xgatt_fft2                      68
     37          #define gattdb_xgatt_fft3                      72
     38          #define gattdb_xgatt_fft4                      76
     39          #else
     40          #define gattdb_ShntVltg                         8
     41          #define gattdb_Current                         12
     42          #define gattdb_Power                           16
     43          #define gattdb_Voltage                         20
     44          #define gattdb_TemperatureC                    24
     45          #define gattdb_TemperatureF                    28
     46          #define gattdb_Pressure                        32
     47          #define gattdb_PrTemperatureC                  36
     48          #define gattdb_PrTemperatureF                  40
     49          #define gattdb_Humidity                        44
     50          #define gattdb_HmdtyTempC                      48
     51          #define gattdb_HmdtyTempF                      52
     52          #define gattdb_RGBLightRd                      57
     53          #define gattdb_RGBLightGrn                     61
     54          #define gattdb_RGBLightBlu                     65
     55          #define gattdb_RdSound0                        70
     56          #define gattdb_RdSound16                       74
     57          #define gattdb_RdSound32                       78
     58          #define gattdb_RdSound48                       82
     59          #define gattdb_ThermistorC                     87
     60          #define gattdb_Thermal_1RwC                    91
     61          #define gattdb_Thermal_2RwC                    95
     62          #define gattdb_Thermal_3RwC                    99
     63          #define gattdb_Thermal_4RwC                   103
     64          #define gattdb_Thermal_5RwC                   107
     65          #define gattdb_Thermal_6RwC                   111
     66          #define gattdb_Thermal_7RwC                   115
     67          #define gattdb_Thermal_8RwC                   119
     68          #define gattdb_xgatt_temp0                    124
     69          #define gattdb_xgatt_temp1                    128
     70          #define gattdb_xgatt_temp2                    132
     71          #define gattdb_xgatt_temp3                    136
     72          #define gattdb_xgatt_temp4                    140
     73          #define gattdb_xgatt_temp5                    144
     74          #define gattdb_xgatt_temp6                    148
     75          #define gattdb_xgatt_temp7                    152
     76          #define gattdb_xgatt_temp8                    156
     77          #define gattdb_xgatt_fuel                     160
     78          #define gattdb_xgatt_humidity                 164
     79          #define gattdb_xgatt_barometer                168
     80          #define gattdb_xgatt_lightning                172
     81          #define gattdb_xgatt_rev                      176
     82          #define gattdb_xgatt_fft1                     180
     83          #define gattdb_xgatt_fft2                     184
     84          #define gattdb_xgatt_fft3                     188
     85          #define gattdb_xgatt_fft4                     192
     86          #define gattdb_AnlErrCnt                      197
     87          #define gattdb_AnlErrCd                       201
     88          #define gattdb_AnlDevCd                       205
     89          #define gattdb_AnlTickCnt                     209
     90          #define gattdb_AnlHrtBt                       213
     91          #define gattdb_AnlHrtBt2                      217
     92          #endif */
     93          #define gattdb_xgatt_spp_data                   13
     94          
     95          
     96          // Global Vars to app_data.

   \                                 In section .bss, align 2
     97          static uint16_t connection_cnt = 0;
   \                     connection_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     98          static uint16_t HeartBeat_Cnt = 0;
   \                     HeartBeat_Cnt:
   \   00000000                      DS8 2
     99          
    100          // Driver list Structure
    101          struct
    102          {
    103            bool  VoltageMonitor;
    104            bool  Temperature;
    105            bool  Irradiance;
    106            bool  Pressure;
    107            bool  Humidity;
    108            bool  GridEye;
    109            bool  CoolEye;
    110            bool  I2CState;
    111            bool  FrameState;
    112            bool  CalibrationState;

   \                                 In section .bss, align 4
    113          } static driver_list;
   \                     driver_list:
   \   00000000                      DS8 12
    114          
    115          // Analytics Structure
    116          struct
    117          {
    118            bool  HrtBeat_Flg;
    119            uint16_t HrtBeat_Cnt;

   \                                 In section .bss, align 4
    120          } static analytics;
   \                     analytics:
   \   00000000                      DS8 4
    121          
    122          /* App data measurment structure */
    123          
    124          typedef struct
    125          {
    126            volatile bool         reading_scheduled;
    127            bool          Legacy_OneTime;
    128            uint8_t       task_item;
    129            // Voltage Monitor Data
    130            Voltage       ShntVltg;
    131            Current       Current;
    132            Power         Power;
    133            Voltage       Voltage;
    134            // Temperature Data
    135            Temperature   Temp;
    136            // Irradiance Data
    137            RGBLight      RGBValues;
    138            // Pressure Data.
    139            PRPressure    Pressure;
    140            Temperature   PrTemp;
    141            Humidity      Humidity;
    142            Temperature   HmTemp;
    143            // FFT Bin Data
    144            BinString     FFTBin0;
    145            BinString     FFTBin16;
    146            BinString     FFTBin32;
    147            BinString     FFTBin48;
    148            GridEye       GridValues;
    149          } dataTmplate;
    150          

   \                                 In section .bss, align 4
    151          dataTmplate TmpData;
   \                     TmpData:
   \   00000000                      DS8 584

   \                                 In section .bss, align 4
    152          dataTmplate data;
   \                     `data`:
   \   00000000                      DS8 584
    153          
    154          //* Initialize all sensors */
    155          

   \                                 In section .text, align 2, keep-with-next
    156          void InitSensors(void)
    157          {
   \                     InitSensors: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    158            data.Legacy_OneTime = true;                   // Clear Legacy One time flag so that we can set key characteristics...once.
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x....             LDR.N    R1,??DataTable3
   \   00000006   0x7048             STRB     R0,[R1, #+1]
    159            ClrDataStructure();                           // Clear Backup data structure.
   \   00000008   0x.... 0x....      BL       ClrDataStructure
    160            data.task_item = VOLTAGE_MNTR_TASK;           // Initialize the task_item to first item.
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable3
   \   00000010   0x7088             STRB     R0,[R1, #+2]
    161            analytics.HrtBeat_Flg = false;                // Set flasg to clear before using it.
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    162            analytics.HrtBeat_Cnt = 0;                    // Clear count before using it.
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000020   0x8048             STRH     R0,[R1, #+2]
    163          }
   \   00000022   0xBD01             POP      {R0,PC}          ;; return
    164          

   \                                 In section .text, align 2, keep-with-next
    165          void ClrDataStructure(void)
    166          {
   \                     ClrDataStructure: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    167            data.Legacy_OneTime = true;                   // Clear Legacy One time flag so that we can set key characteristics...once.
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x....             LDR.N    R1,??DataTable3
   \   00000006   0x7048             STRB     R0,[R1, #+1]
    168            strcpy( (char *)data.ShntVltg.Raw, "------" );
   \   00000008   0x....             LDR.N    R1,??DataTable3_1
   \   0000000A   0x....             LDR.N    R0,??DataTable3_2
   \   0000000C   0x.... 0x....      BL       strcpy
    169            strcpy( (char *)data.Current.Raw, "------" );
   \   00000010   0x....             LDR.N    R1,??DataTable3_1
   \   00000012   0x....             LDR.N    R0,??DataTable3_3
   \   00000014   0x.... 0x....      BL       strcpy
    170            strcpy( (char *)data.Power.Raw, "------" );
   \   00000018   0x....             LDR.N    R1,??DataTable3_1
   \   0000001A   0x....             LDR.N    R0,??DataTable3_4
   \   0000001C   0x.... 0x....      BL       strcpy
    171            strcpy( (char *)data.Voltage.Raw, "------" );
   \   00000020   0x....             LDR.N    R1,??DataTable3_1
   \   00000022   0x....             LDR.N    R0,??DataTable3_5
   \   00000024   0x.... 0x....      BL       strcpy
    172            strcpy( (char *)data.Temp.Raw, "------" );
   \   00000028   0x....             LDR.N    R1,??DataTable3_1
   \   0000002A   0x....             LDR.N    R0,??DataTable3_6
   \   0000002C   0x.... 0x....      BL       strcpy
    173            strcpy( (char *)data.RGBValues.Raw, "--------------" );
   \   00000030   0x....             LDR.N    R1,??DataTable3_7
   \   00000032   0x....             LDR.N    R0,??DataTable3_8
   \   00000034   0x.... 0x....      BL       strcpy
    174            strcpy( (char *)data.Pressure.Raw, "---------" );
   \   00000038   0x....             LDR.N    R1,??DataTable3_9
   \   0000003A   0x....             LDR.N    R0,??DataTable3_10
   \   0000003C   0x.... 0x....      BL       strcpy
    175            strcpy( (char *)data.PrTemp.Raw, "------" );
   \   00000040   0x....             LDR.N    R1,??DataTable3_1
   \   00000042   0x....             LDR.N    R0,??DataTable3_11
   \   00000044   0x.... 0x....      BL       strcpy
    176            strcpy( (char *)data.Humidity.HRaw, "------" );
   \   00000048   0x....             LDR.N    R1,??DataTable3_1
   \   0000004A   0x....             LDR.N    R0,??DataTable3_12
   \   0000004C   0x.... 0x....      BL       strcpy
    177            strcpy( (char *)data.HmTemp.Raw, "------" );
   \   00000050   0x....             LDR.N    R1,??DataTable3_1
   \   00000052   0x....             LDR.N    R0,??DataTable3_13
   \   00000054   0x.... 0x....      BL       strcpy
    178            strcpy( (char *)data.GridValues.Thermistor.Raw, "------" );
   \   00000058   0x....             LDR.N    R1,??DataTable3_1
   \   0000005A   0x....             LDR.N    R0,??DataTable3_14
   \   0000005C   0x.... 0x....      BL       strcpy
    179            strcpy( (char *)data.GridValues.GridEye1.Raw, "------" );
   \   00000060   0x....             LDR.N    R1,??DataTable3_1
   \   00000062   0x....             LDR.N    R0,??DataTable3_15
   \   00000064   0x.... 0x....      BL       strcpy
    180            strcpy( (char *)data.GridValues.GridEye2.Raw, "------" );
   \   00000068   0x....             LDR.N    R1,??DataTable3_1
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable4
   \   0000006E   0x.... 0x....      BL       strcpy
    181            strcpy( (char *)data.GridValues.GridEye3.Raw, "------" );
   \   00000072   0x....             LDR.N    R1,??DataTable3_1
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000078   0x.... 0x....      BL       strcpy
    182            strcpy( (char *)data.GridValues.GridEye4.Raw, "------" );
   \   0000007C   0x....             LDR.N    R1,??DataTable3_1
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000082   0x.... 0x....      BL       strcpy
    183            strcpy( (char *)data.GridValues.GridEye5.Raw, "------" );
   \   00000086   0x....             LDR.N    R1,??DataTable3_1
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   0000008C   0x.... 0x....      BL       strcpy
    184            strcpy( (char *)data.GridValues.GridEye6.Raw, "------" );
   \   00000090   0x....             LDR.N    R1,??DataTable3_1
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable4_4
   \   00000096   0x.... 0x....      BL       strcpy
    185            strcpy( (char *)data.GridValues.GridEye7.Raw, "------" );
   \   0000009A   0x....             LDR.N    R1,??DataTable3_1
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable4_5
   \   000000A0   0x.... 0x....      BL       strcpy
    186            strcpy( (char *)data.GridValues.GridEye8.Raw, "------" );
   \   000000A4   0x....             LDR.N    R1,??DataTable3_1
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000000AA   0x.... 0x....      BL       strcpy
    187          }
   \   000000AE   0xBD01             POP      {R0,PC}          ;; return
    188          
    189          /**
    190            * @brief  Set the reading_scheduled flag to enable Sensor processing.
    191            * @param  None
    192            * @retval None
    193            */

   \                                 In section .text, align 2, keep-with-next
    194          void SetDataReady( void )
    195          {
    196            /* Schedule a sensor reading */
    197            data.reading_scheduled = true;
   \                     SetDataReady: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    198          }
   \   00000008   0x4770             BX       LR               ;; return
    199          
    200          /* Sample timer interrupt handler */
    201          

   \                                 In section .text, align 2, keep-with-next
    202          void SAMPLE_TIM_IRQHandler(void)
    203          {
    204            /* Clear the interrupt flag */
    205            //TIM_ClearITPendingBit(SAMPLE_TIM, TIM_IT_Update);
    206            /* Schedule a sensor reading */
    207            data.reading_scheduled = true;
   \                     TIM6_IRQHandler: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    208          }
   \   00000008   0x4770             BX       LR               ;; return
    209          
    210          /* Process sensor state machine */
    211          

   \                                 In section .text, align 2, keep-with-next
    212          HAL_StatusTypeDef  ProcessSensorState(void)
    213          {
   \                     ProcessSensorState: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
    214            HAL_StatusTypeDef Status;
    215            uint8_t tmpBuffer[40];
    216            
    217            Status = HAL_OK;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0004             MOVS     R4,R0
    218          
    219            /* Is a reading scheduled? */
    220            if (data.reading_scheduled)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xF000 0x849C      BEQ.W    ??ProcessSensorState_0
    221            {
    222          #if 0
    223          //************************OLD STYLE TASKING STARTS HERE************************
    224          // OLD STYLE CODE. Does not allow flexible tasking. Possible hole in design.
    225              /* Clear the scheduling flag */
    226              data.reading_scheduled = false;
    227              
    228              /* Read the Voltage Monitor Data. */
    229              Status = RoadBrd_VMonitor_RdShntVltg_Scaled( &TmpData.ShntVltg );
    230              if (Status != HAL_OK)
    231                return Status;
    232              Status = RoadBrd_VMonitor_RdCurrent_Scaled( &TmpData.Current );
    233              if (Status != HAL_OK)
    234                return Status;
    235              Status = RoadBrd_VMonitor_RdPower_Scaled( &TmpData.Power );
    236              if (Status != HAL_OK)
    237                return Status;
    238              Status = RoadBrd_VMonitor_RdVoltage_Scaled( &TmpData.Voltage );
    239             if (Status != HAL_OK)
    240                return Status;
    241              /* Read the Temperature Data. */
    242              Status = RoadBrd_ReadTemp_Scaled( &TmpData.Temp );
    243              if (Status != HAL_OK)
    244                return Status;
    245          
    246              /* Read the Irradiance Data. */
    247              Status = RoadBrd_RGBReadValues( &TmpData.RGBValues );
    248              if (Status != HAL_OK)
    249                return Status;
    250          
    251              /* Read the pressure and temperature */
    252              Status = RoadBrd_Baro_ReadPressure_Scaled( &TmpData.Pressure );
    253              if (Status != HAL_OK)
    254                return Status;
    255              Status = RoadBrd_Baro_ReadTemp( &TmpData.PrTemp );
    256              if (Status != HAL_OK)
    257                return Status;
    258              
    259              /* Read the Humidity and temperature */
    260              Status = RoadBrd_Humidity_ReadHumidity_Scaled( &TmpData.Humidity );
    261              if (Status != HAL_OK)
    262                return Status;
    263              Status = RoadBrd_Humidity_ReadTemperature_Scaled( &TmpData.HmTemp );
    264              if (Status != HAL_OK)
    265                return Status;
    266              
    267              /* Read Grid Eye Values */
    268              Status = RoadBrd_GridEye_ReadValues_Scaled( &TmpData.GridValues );
    269              if (Status != HAL_OK)
    270                return Status;
    271          //************************OLD STYLE TASKING ENDS HERE************************
    272          #else
    273          //************************NEW STYLE TASKING STARTS HERE************************
    274              switch(data.task_item)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   00000018   0x7880             LDRB     R0,[R0, #+2]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD008             BEQ.N    ??ProcessSensorState_1
   \   0000001E   0x2802             CMP      R0,#+2
   \   00000020   0xD046             BEQ.N    ??ProcessSensorState_2
   \   00000022   0xD33A             BCC.N    ??ProcessSensorState_3
   \   00000024   0x2804             CMP      R0,#+4
   \   00000026   0xD061             BEQ.N    ??ProcessSensorState_4
   \   00000028   0xD34D             BCC.N    ??ProcessSensorState_5
   \   0000002A   0x2805             CMP      R0,#+5
   \   0000002C   0xD071             BEQ.N    ??ProcessSensorState_6
   \   0000002E   0xE085             B.N      ??ProcessSensorState_7
    275              {
    276                case VOLTAGE_MNTR_TASK:
    277                  // Send <FRM> String.
    278                  sprintf( (char *)tmpBuffer, "<FRM>");
   \                     ??ProcessSensorState_1: (+1)
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable4_7
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x.... 0x....      BL       sprintf
    279                  RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   0000003A   0x4669             MOV      R1,SP
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       RoadBrd_UART_Transmit
    280                  BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000042   0x4668             MOV      R0,SP
   \   00000044   0x.... 0x....      BL       strlen
   \   00000048   0x4669             MOV      R1,SP
   \   0000004A   0x.... 0x....      BL       BGM111_Transmit
    281                  if ( Get_DriverStates( VOLTAGE_MNTR_TASK ))
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x.... 0x....      BL       Get_DriverStates
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD01F             BEQ.N    ??ProcessSensorState_8
    282                  {
    283                    /* Read the Voltage Monitor Data. */
    284                    Status = RoadBrd_VMonitor_RdShntVltg_Scaled( &TmpData.ShntVltg );
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable4_8
   \   0000005C   0x.... 0x....      BL       RoadBrd_VMonitor_RdShntVltg_Scaled
   \   00000060   0x0004             MOVS     R4,R0
    285                    if (Status != HAL_OK)
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0x2C00             CMP      R4,#+0
   \   00000066   0xD169             BNE.N    ??ProcessSensorState_7
    286                      break;
    287                    Status = RoadBrd_VMonitor_RdCurrent_Scaled( &TmpData.Current );
   \                     ??ProcessSensorState_9: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable4_9
   \   0000006C   0x.... 0x....      BL       RoadBrd_VMonitor_RdCurrent_Scaled
   \   00000070   0x0004             MOVS     R4,R0
    288                    if (Status != HAL_OK)
   \   00000072   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000074   0x2C00             CMP      R4,#+0
   \   00000076   0xD161             BNE.N    ??ProcessSensorState_7
    289                      break;
    290                    Status = RoadBrd_VMonitor_RdPower_Scaled( &TmpData.Power );
   \                     ??ProcessSensorState_10: (+1)
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable4_10
   \   0000007C   0x.... 0x....      BL       RoadBrd_VMonitor_RdPower_Scaled
   \   00000080   0x0004             MOVS     R4,R0
    291                    if (Status != HAL_OK)
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C00             CMP      R4,#+0
   \   00000086   0xD159             BNE.N    ??ProcessSensorState_7
    292                      break;
    293                    Status = RoadBrd_VMonitor_RdVoltage_Scaled( &TmpData.Voltage );
   \                     ??ProcessSensorState_11: (+1)
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable4_11
   \   0000008C   0x.... 0x....      BL       RoadBrd_VMonitor_RdVoltage_Scaled
   \   00000090   0x0004             MOVS     R4,R0
    294                    if (Status != HAL_OK)
   \   00000092   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000094   0x2C00             CMP      R4,#+0
   \   00000096   0xD151             BNE.N    ??ProcessSensorState_7
    295                      break;
    296                  }
    297                  break;
   \                     ??ProcessSensorState_8: (+1)
   \   00000098   0xE050             B.N      ??ProcessSensorState_7
    298                case TEMPERATURE_MNTR_TASK:
    299                  if ( Get_DriverStates( TEMPERATURE_MNTR_TASK ))
   \                     ??ProcessSensorState_3: (+1)
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x.... 0x....      BL       Get_DriverStates
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD004             BEQ.N    ??ProcessSensorState_12
    300                  {
    301                    /* Read the Temperature Data. */
    302                    Status = RoadBrd_ReadTemp_Scaled( &TmpData.Temp );
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable4_12
   \   000000A8   0x.... 0x....      BL       RoadBrd_ReadTemp_Scaled
   \   000000AC   0x0004             MOVS     R4,R0
    303                  }
    304                  break;
   \                     ??ProcessSensorState_12: (+1)
   \   000000AE   0xE045             B.N      ??ProcessSensorState_7
    305                case IRRADIANCE_MNTR_TASK:
    306                  if ( Get_DriverStates( IRRADIANCE_MNTR_TASK ))
   \                     ??ProcessSensorState_2: (+1)
   \   000000B0   0x2002             MOVS     R0,#+2
   \   000000B2   0x.... 0x....      BL       Get_DriverStates
   \   000000B6   0x2800             CMP      R0,#+0
   \   000000B8   0xD004             BEQ.N    ??ProcessSensorState_13
    307                  {
    308                    /* Read the Irradiance Data. */
    309                    Status = RoadBrd_RGBReadValues( &TmpData.RGBValues );
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable4_13
   \   000000BE   0x.... 0x....      BL       RoadBrd_RGBReadValues
   \   000000C2   0x0004             MOVS     R4,R0
    310                  }
    311                  break;
   \                     ??ProcessSensorState_13: (+1)
   \   000000C4   0xE03A             B.N      ??ProcessSensorState_7
    312                case PRESSURE_MNTR_TASK:
    313                  if ( Get_DriverStates( PRESSURE_MNTR_TASK ))
   \                     ??ProcessSensorState_5: (+1)
   \   000000C6   0x2003             MOVS     R0,#+3
   \   000000C8   0x.... 0x....      BL       Get_DriverStates
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xD00C             BEQ.N    ??ProcessSensorState_14
    314                  {
    315                    /* Read the pressure and temperature */
    316                    Status = RoadBrd_Baro_ReadPressure_Scaled( &TmpData.Pressure );
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000000D4   0x.... 0x....      BL       RoadBrd_Baro_ReadPressure_Scaled
   \   000000D8   0x0004             MOVS     R4,R0
    317                    if (Status != HAL_OK)
   \   000000DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DC   0x2C00             CMP      R4,#+0
   \   000000DE   0xD12D             BNE.N    ??ProcessSensorState_7
    318                      break;
    319                    Status = RoadBrd_Baro_ReadTemp( &TmpData.PrTemp );
   \                     ??ProcessSensorState_15: (+1)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable4_14
   \   000000E4   0x.... 0x....      BL       RoadBrd_Baro_ReadTemp
   \   000000E8   0x0004             MOVS     R4,R0
    320                  }
    321                  break;
   \                     ??ProcessSensorState_14: (+1)
   \   000000EA   0xE027             B.N      ??ProcessSensorState_7
    322                case HUMIDITY_MNTR_TASK:
    323                  if ( Get_DriverStates( HUMIDITY_MNTR_TASK ))
   \                     ??ProcessSensorState_4: (+1)
   \   000000EC   0x2004             MOVS     R0,#+4
   \   000000EE   0x.... 0x....      BL       Get_DriverStates
   \   000000F2   0x2800             CMP      R0,#+0
   \   000000F4   0xD00C             BEQ.N    ??ProcessSensorState_16
    324                  {
    325                    /* Read the Humidity and temperature */
    326                    Status = RoadBrd_Humidity_ReadHumidity_Scaled( &TmpData.Humidity );
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000000FA   0x.... 0x....      BL       RoadBrd_Humidity_ReadHumidity_Scaled
   \   000000FE   0x0004             MOVS     R4,R0
    327                    if (Status != HAL_OK)
   \   00000100   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000102   0x2C00             CMP      R4,#+0
   \   00000104   0xD11A             BNE.N    ??ProcessSensorState_7
    328                      break;
    329                    Status = RoadBrd_Humidity_ReadTemperature_Scaled( &TmpData.HmTemp );
   \                     ??ProcessSensorState_17: (+1)
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable4_15
   \   0000010A   0x.... 0x....      BL       RoadBrd_Humidity_ReadTemperature_Scaled
   \   0000010E   0x0004             MOVS     R4,R0
    330                  }
    331                  break;
   \                     ??ProcessSensorState_16: (+1)
   \   00000110   0xE014             B.N      ??ProcessSensorState_7
    332                case GRIDEYE_MNTR_TASK:
    333                  if ( Get_DriverStates( GRIDEYE_MNTR_TASK ))
   \                     ??ProcessSensorState_6: (+1)
   \   00000112   0x2005             MOVS     R0,#+5
   \   00000114   0x.... 0x....      BL       Get_DriverStates
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD005             BEQ.N    ??ProcessSensorState_18
    334                  {
    335                    Status = RoadBrd_GridEye_ReadValues_Scaled( &TmpData.GridValues );
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable4_16
   \   00000120   0x.... 0x....      BL       RoadBrd_GridEye_ReadValues_Scaled
   \   00000124   0x0004             MOVS     R4,R0
   \   00000126   0xE009             B.N      ??ProcessSensorState_19
    336                  }
    337                  else if ( Get_DriverStates( COOLEYE_MNTR_TASK ))
   \                     ??ProcessSensorState_18: (+1)
   \   00000128   0x2006             MOVS     R0,#+6
   \   0000012A   0x.... 0x....      BL       Get_DriverStates
   \   0000012E   0x2800             CMP      R0,#+0
   \   00000130   0xD004             BEQ.N    ??ProcessSensorState_19
    338                  {
    339                    Status = RoadBrd_CoolEye_ReadValues_Scaled( &TmpData.GridValues );
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable4_16
   \   00000136   0x.... 0x....      BL       RoadBrd_CoolEye_ReadValues_Scaled
   \   0000013A   0x0004             MOVS     R4,R0
    340                  }
    341                  break;
    342              }
    343              // Update Count
    344              data.task_item++;
   \                     ??ProcessSensorState_19: (+1)
   \                     ??ProcessSensorState_7: (+1)
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   00000140   0x7880             LDRB     R0,[R0, #+2]
   \   00000142   0x1C40             ADDS     R0,R0,#+1
   \   00000144   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000148   0x7088             STRB     R0,[R1, #+2]
    345              if (data.task_item >= TASK_LENGTH)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable4_6
   \   0000014E   0x7880             LDRB     R0,[R0, #+2]
   \   00000150   0x280A             CMP      R0,#+10
   \   00000152   0xDB07             BLT.N    ??ProcessSensorState_20
    346              {
    347                // Reset Count
    348                data.task_item = VOLTAGE_MNTR_TASK;
   \   00000154   0x2000             MOVS     R0,#+0
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   0000015A   0x7088             STRB     R0,[R1, #+2]
    349                /* Clear the scheduling flag */
    350                data.reading_scheduled = false;
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000162   0x7008             STRB     R0,[R1, #+0]
    351              }
    352              if (Status != HAL_OK)
   \                     ??ProcessSensorState_20: (+1)
   \   00000164   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000166   0x2C00             CMP      R4,#+0
   \   00000168   0xD002             BEQ.N    ??ProcessSensorState_21
    353                return Status;
   \   0000016A   0x0020             MOVS     R0,R4
   \   0000016C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016E   0xE3EF             B.N      ??ProcessSensorState_22
    354          //************************NEW STYLE TASKING ENDS HERE************************
    355          #endif
    356              // Service Watchdog
    357              RoadBrd_WWDG_Refresh();     // Refresh WatchDog
   \                     ??ProcessSensorState_21: (+1)
   \   00000170   0x.... 0x....      BL       RoadBrd_WWDG_Refresh
    358              //************ NOW Compare the data strings and determine if characteristics need to be sent.
    359              //..ShntVltg
    360          //#if 0
    361          #ifndef LEGACY_PATCH
    362              if(strcmp( (char *)TmpData.ShntVltg.Raw, (char *)data.ShntVltg.Raw) != 0 )
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000017C   0x.... 0x....      BL       strcmp
   \   00000180   0x2800             CMP      R0,#+0
   \   00000182   0xD01F             BEQ.N    ??ProcessSensorState_23
    363              {
    364                RoadBrd_gpio_On( BGM_LED );
   \   00000184   0x2001             MOVS     R0,#+1
   \   00000186   0x.... 0x....      BL       RoadBrd_gpio_On
    365                // Update Information in data structure
    366                strcpy( (char *)data.ShntVltg.Raw, (char *)TmpData.ShntVltg.Raw );
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000192   0x.... 0x....      BL       strcpy
    367                strcpy( (char *)data.ShntVltg.Voltage, (char *)TmpData.ShntVltg.Voltage );
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable4_8
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000019E   0x.... 0x....      BL       strcpy
    368                // Update BLE Characteristics
    369                /* Send the ShntVltgRw to the BLE module */
    370                sprintf( (char *)tmpBuffer, "<U0002>%s</U0002>", (uint8_t *)data.ShntVltg.Voltage);
   \   000001A2   0x.... 0x....      LDR.W    R2,??DataTable5_2
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   000001AA   0x4668             MOV      R0,SP
   \   000001AC   0x.... 0x....      BL       sprintf
    371                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000001B0   0x4669             MOV      R1,SP
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x.... 0x....      BL       RoadBrd_UART_Transmit
    372                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000001B8   0x4668             MOV      R0,SP
   \   000001BA   0x.... 0x....      BL       strlen
   \   000001BE   0x4669             MOV      R1,SP
   \   000001C0   0x.... 0x....      BL       BGM111_Transmit
    373          //      BGM111_WriteCharacteristic(gattdb_ShntVltgRw,
    374          //                                 strlen((char *)data.ShntVltg.Raw), (uint8_t *)data.ShntVltg.Raw);
    375                /* Send the ShntVltg to the BLE module */
    376          //**HERE      BGM111_WriteCharacteristic(gattdb_ShntVltg,
    377          //                                 strlen((char *)data.ShntVltg.Voltage), (uint8_t *)data.ShntVltg.Voltage);
    378              }
    379              //..Current
    380              if(strcmp( (char *)TmpData.Current.Raw, (char *)data.Current.Raw) != 0 )
   \                     ??ProcessSensorState_23: (+1)
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000001CC   0x.... 0x....      BL       strcmp
   \   000001D0   0x2800             CMP      R0,#+0
   \   000001D2   0xD01F             BEQ.N    ??ProcessSensorState_24
    381              {
    382                RoadBrd_gpio_On( BGM_LED );
   \   000001D4   0x2001             MOVS     R0,#+1
   \   000001D6   0x.... 0x....      BL       RoadBrd_gpio_On
    383                // Update Information in data structure
    384                strcpy( (char *)data.Current.Raw, (char *)TmpData.Current.Raw );
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000001DE   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000001E2   0x.... 0x....      BL       strcpy
    385                strcpy( (char *)data.Current.Current, (char *)TmpData.Current.Current );
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable4_9
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000001EE   0x.... 0x....      BL       strcpy
    386                // Update BLE Characteristics
    387                /* Send the CurrentRw to the BLE module */
    388                sprintf( (char *)tmpBuffer, "<U0004>%s</U0004>", (uint8_t *)data.Current.Current);
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   000001FA   0x4668             MOV      R0,SP
   \   000001FC   0x.... 0x....      BL       sprintf
    389                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000200   0x4669             MOV      R1,SP
   \   00000202   0x2000             MOVS     R0,#+0
   \   00000204   0x.... 0x....      BL       RoadBrd_UART_Transmit
    390                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000208   0x4668             MOV      R0,SP
   \   0000020A   0x.... 0x....      BL       strlen
   \   0000020E   0x4669             MOV      R1,SP
   \   00000210   0x.... 0x....      BL       BGM111_Transmit
    391          //      BGM111_WriteCharacteristic(gattdb_CurrentRw,
    392          //                                 strlen((char *)data.Current.Raw), (uint8_t *)data.Current.Raw);
    393                /* Send the Current to the BLE module */
    394          //**HERE      BGM111_WriteCharacteristic(gattdb_Current,
    395          //                                 strlen((char *)data.Current.Current), (uint8_t *)data.Current.Current);
    396              }
    397              //..Power
    398              if(strcmp( (char *)TmpData.Power.Raw, (char *)data.Power.Raw) != 0 )
   \                     ??ProcessSensorState_24: (+1)
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   0000021C   0x.... 0x....      BL       strcmp
   \   00000220   0x2800             CMP      R0,#+0
   \   00000222   0xD01F             BEQ.N    ??ProcessSensorState_25
    399              {
    400                RoadBrd_gpio_On( BGM_LED );
   \   00000224   0x2001             MOVS     R0,#+1
   \   00000226   0x.... 0x....      BL       RoadBrd_gpio_On
    401                // Update Information in data structure
    402                strcpy( (char *)data.Power.Raw, (char *)TmpData.Power.Raw );
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000232   0x.... 0x....      BL       strcpy
    403                strcpy( (char *)data.Power.Power, (char *)TmpData.Power.Power );
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable4_10
   \   0000023A   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   0000023E   0x.... 0x....      BL       strcpy
    404                // Update BLE Characteristics
    405                /* Send the PowerRw to the BLE module */
    406                sprintf( (char *)tmpBuffer, "<U0006>%s</U0006>", (uint8_t *)data.Power.Power);
   \   00000242   0x.... 0x....      LDR.W    R2,??DataTable7_6
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable7_7
   \   0000024A   0x4668             MOV      R0,SP
   \   0000024C   0x.... 0x....      BL       sprintf
    407                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000250   0x4669             MOV      R1,SP
   \   00000252   0x2000             MOVS     R0,#+0
   \   00000254   0x.... 0x....      BL       RoadBrd_UART_Transmit
    408                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000258   0x4668             MOV      R0,SP
   \   0000025A   0x.... 0x....      BL       strlen
   \   0000025E   0x4669             MOV      R1,SP
   \   00000260   0x.... 0x....      BL       BGM111_Transmit
    409          //      BGM111_WriteCharacteristic(gattdb_PowerRw,
    410          //                                 strlen((char *)data.Power.Raw), (uint8_t *)data.Power.Raw);
    411                /* Send the Power to the BLE module */
    412          //**HERE      BGM111_WriteCharacteristic(gattdb_Power,
    413          //                                 strlen((char *)data.Power.Power), (uint8_t *)data.Power.Power);
    414              }
    415              //..Voltage
    416              if(strcmp( (char *)TmpData.Voltage.Raw, (char *)data.Voltage.Raw) != 0 )
   \                     ??ProcessSensorState_25: (+1)
   \   00000264   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000268   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   0000026C   0x.... 0x....      BL       strcmp
   \   00000270   0x2800             CMP      R0,#+0
   \   00000272   0xD01F             BEQ.N    ??ProcessSensorState_26
    417              {
    418                RoadBrd_gpio_On( BGM_LED );
   \   00000274   0x2001             MOVS     R0,#+1
   \   00000276   0x.... 0x....      BL       RoadBrd_gpio_On
    419                // Update Information in data structure
    420                strcpy( (char *)data.Voltage.Raw, (char *)TmpData.Voltage.Raw );
   \   0000027A   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   0000027E   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   00000282   0x.... 0x....      BL       strcpy
    421                strcpy( (char *)data.Voltage.Voltage, (char *)TmpData.Voltage.Voltage );
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable4_11
   \   0000028A   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   0000028E   0x.... 0x....      BL       strcpy
    422                // Update BLE Characteristics
    423                /* Send the VoltageRw to the BLE module */
    424                sprintf( (char *)tmpBuffer, "<U0008>%s</U0008>", (uint8_t *)data.Voltage.Voltage);
   \   00000292   0x.... 0x....      LDR.W    R2,??DataTable8_3
   \   00000296   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   0000029A   0x4668             MOV      R0,SP
   \   0000029C   0x.... 0x....      BL       sprintf
    425                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000002A0   0x4669             MOV      R1,SP
   \   000002A2   0x2000             MOVS     R0,#+0
   \   000002A4   0x.... 0x....      BL       RoadBrd_UART_Transmit
    426                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000002A8   0x4668             MOV      R0,SP
   \   000002AA   0x.... 0x....      BL       strlen
   \   000002AE   0x4669             MOV      R1,SP
   \   000002B0   0x.... 0x....      BL       BGM111_Transmit
    427          //      BGM111_WriteCharacteristic(gattdb_VoltageRw,
    428          //                                 strlen((char *)data.Voltage.Raw), (uint8_t *)data.Voltage.Raw);
    429                /* Send the Voltage to the BLE module */
    430          //**HERE      BGM111_WriteCharacteristic(gattdb_Voltage,
    431          //                                 strlen((char *)data.Voltage.Voltage), (uint8_t *)data.Voltage.Voltage);
    432              }
    433          #endif
    434              //..Temperature
    435              if(strcmp( (char *)TmpData.Temp.Raw, (char *)data.Temp.Raw) != 0 )
   \                     ??ProcessSensorState_26: (+1)
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   000002B8   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   000002BC   0x.... 0x....      BL       strcmp
   \   000002C0   0x2800             CMP      R0,#+0
   \   000002C2   0xD03E             BEQ.N    ??ProcessSensorState_27
    436              {
    437                RoadBrd_gpio_On( BGM_LED );
   \   000002C4   0x2001             MOVS     R0,#+1
   \   000002C6   0x.... 0x....      BL       RoadBrd_gpio_On
    438                // Update Information in data structure
    439                strcpy( (char *)data.Temp.Raw, (char *)TmpData.Temp.Raw );
   \   000002CA   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   000002D2   0x.... 0x....      BL       strcpy
    440                strcpy( (char *)data.Temp.TempC, (char *)TmpData.Temp.TempC );
   \   000002D6   0x.... 0x....      LDR.W    R1,??DataTable4_12
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   000002DE   0x.... 0x....      BL       strcpy
    441                strcpy( (char *)data.Temp.TempF, (char *)TmpData.Temp.TempF );
   \   000002E2   0x.... 0x....      LDR.W    R1,??DataTable9_2
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000002EA   0x.... 0x....      BL       strcpy
    442                data.Temp.RawC = TmpData.Temp.RawC;
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000002F2   0xF8B0 0x0058      LDRH     R0,[R0, #+88]
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   000002FA   0xF8A1 0x0058      STRH     R0,[R1, #+88]
    443                // Update BLE Characteristics
    444                /* Send the TemperatureRw to the BLE module */
    445          #ifndef LEGACY_PATCH
    446          //      BGM111_WriteCharacteristic(gattdb_TemperatureRw,
    447          //                                 strlen((char *)data.Temp.Raw), (uint8_t *)data.Temp.Raw);
    448                /* Send the TemperatureC to the BLE module */
    449                sprintf( (char *)tmpBuffer, "<U000A>%s</U000A>", (uint8_t *)data.Temp.TempC);
   \   000002FE   0x.... 0x....      LDR.W    R2,??DataTable9_1
   \   00000302   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000306   0x4668             MOV      R0,SP
   \   00000308   0x.... 0x....      BL       sprintf
    450                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   0000030C   0x4669             MOV      R1,SP
   \   0000030E   0x2000             MOVS     R0,#+0
   \   00000310   0x.... 0x....      BL       RoadBrd_UART_Transmit
    451                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000314   0x4668             MOV      R0,SP
   \   00000316   0x.... 0x....      BL       strlen
   \   0000031A   0x4669             MOV      R1,SP
   \   0000031C   0x.... 0x....      BL       BGM111_Transmit
    452          //**HERE      BGM111_WriteCharacteristic(gattdb_TemperatureC,
    453          //                                 strlen((char *)data.Temp.TempC), (uint8_t *)data.Temp.TempC);
    454                /* Send the TemperatureF to the BLE module */
    455                sprintf( (char *)tmpBuffer, "<U000B>%s</U000B>", (uint8_t *)data.Temp.TempF);
   \   00000320   0x.... 0x....      LDR.W    R2,??DataTable9_3
   \   00000324   0x.... 0x....      LDR.W    R1,??DataTable9_5
   \   00000328   0x4668             MOV      R0,SP
   \   0000032A   0x.... 0x....      BL       sprintf
    456                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   0000032E   0x4669             MOV      R1,SP
   \   00000330   0x2000             MOVS     R0,#+0
   \   00000332   0x.... 0x....      BL       RoadBrd_UART_Transmit
    457                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000336   0x4668             MOV      R0,SP
   \   00000338   0x.... 0x....      BL       strlen
   \   0000033C   0x4669             MOV      R1,SP
   \   0000033E   0x.... 0x....      BL       BGM111_Transmit
    458          //**HERE      BGM111_WriteCharacteristic(gattdb_TemperatureF,
    459          //                                 strlen((char *)data.Temp.TempF), (uint8_t *)data.Temp.TempF);
    460          #endif
    461                // Update Legacy Temperature Characteristic...
    462          //      tmpBuffer[0] = (uint8_t)('T');
    463          //      tmpBuffer[1] = (uint8_t)(0x00);
    464          //      tmpBuffer[2] = (uint8_t)(data.Temp.RawC & 0x00ff);
    465          //      tmpBuffer[3] = (uint8_t)((data.Temp.RawC & 0xff00) >> 8);
    466                /* Send the Temperature RawC to the BLE module */
    467          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp0,
    468          //                                 0x04, (uint8_t *)tmpBuffer);
    469              }
    470          
    471              //..Irradiance
    472          #ifndef LEGACY_PATCH
    473              if(strcmp( (char *)TmpData.RGBValues.Raw, (char *)data.RGBValues.Raw) != 0 )
   \                     ??ProcessSensorState_27: (+1)
   \   00000342   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable9_6
   \   0000034A   0x.... 0x....      BL       strcmp
   \   0000034E   0x2800             CMP      R0,#+0
   \   00000350   0xD05E             BEQ.N    ??ProcessSensorState_28
    474              {
    475                RoadBrd_gpio_On( BGM_LED );
   \   00000352   0x2001             MOVS     R0,#+1
   \   00000354   0x.... 0x....      BL       RoadBrd_gpio_On
    476                // Update Information in data structure
    477                strcpy( (char *)data.RGBValues.Raw, (char *)TmpData.RGBValues.Raw );
   \   00000358   0x.... 0x....      LDR.W    R1,??DataTable9_6
   \   0000035C   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000360   0x.... 0x....      BL       strcpy
    478                strcpy( (char *)data.RGBValues.Red, (char *)TmpData.RGBValues.Red );
   \   00000364   0x.... 0x....      LDR.W    R1,??DataTable4_13
   \   00000368   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   0000036C   0x.... 0x....      BL       strcpy
    479                strcpy( (char *)data.RGBValues.Green, (char *)TmpData.RGBValues.Green );
   \   00000370   0x.... 0x....      LDR.W    R1,??DataTable13_2
   \   00000374   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   00000378   0x.... 0x....      BL       strcpy
    480                strcpy( (char *)data.RGBValues.Blue, (char *)TmpData.RGBValues.Blue );
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable13_4
   \   00000380   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000384   0x.... 0x....      BL       strcpy
    481                // Update BLE Characteristics
    482                /* Send the RGBLightRw to the BLE module */
    483                sprintf( (char *)tmpBuffer, "<U000C>%s</U000C>", (uint8_t *)data.RGBValues.Raw);
   \   00000388   0x.... 0x....      LDR.W    R2,??DataTable11
   \   0000038C   0x.... 0x....      LDR.W    R1,??DataTable13_6
   \   00000390   0x4668             MOV      R0,SP
   \   00000392   0x.... 0x....      BL       sprintf
    484                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000396   0x4669             MOV      R1,SP
   \   00000398   0x2000             MOVS     R0,#+0
   \   0000039A   0x.... 0x....      BL       RoadBrd_UART_Transmit
    485                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000039E   0x4668             MOV      R0,SP
   \   000003A0   0x.... 0x....      BL       strlen
   \   000003A4   0x4669             MOV      R1,SP
   \   000003A6   0x.... 0x....      BL       BGM111_Transmit
    486          //      BGM111_WriteCharacteristic(gattdb_RGBLightRw,
    487          //                                 strlen((char *)data.RGBValues.Raw), (uint8_t *)data.RGBValues.Raw);
    488                /* Send the RGBLightRd to the BLE module */
    489                sprintf( (char *)tmpBuffer, "<U000D>%s</U000D>", (uint8_t *)data.RGBValues.Red);
   \   000003AA   0x.... 0x....      LDR.W    R2,??DataTable13_1
   \   000003AE   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   000003B2   0x4668             MOV      R0,SP
   \   000003B4   0x.... 0x....      BL       sprintf
    490                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000003B8   0x4669             MOV      R1,SP
   \   000003BA   0x2000             MOVS     R0,#+0
   \   000003BC   0x.... 0x....      BL       RoadBrd_UART_Transmit
    491                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000003C0   0x4668             MOV      R0,SP
   \   000003C2   0x.... 0x....      BL       strlen
   \   000003C6   0x4669             MOV      R1,SP
   \   000003C8   0x.... 0x....      BL       BGM111_Transmit
    492          //**HERE      BGM111_WriteCharacteristic(gattdb_RGBLightRd,
    493          //                                 strlen((char *)data.RGBValues.Red), (uint8_t *)data.RGBValues.Red);
    494                /* Send the RGBLightGrn to the BLE module */
    495                sprintf( (char *)tmpBuffer, "<U000E>%s</U000E>", (uint8_t *)data.RGBValues.Green);
   \   000003CC   0x.... 0x....      LDR.W    R2,??DataTable13_3
   \   000003D0   0x.... 0x....      LDR.W    R1,??DataTable13_8
   \   000003D4   0x4668             MOV      R0,SP
   \   000003D6   0x.... 0x....      BL       sprintf
    496                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000003DA   0x4669             MOV      R1,SP
   \   000003DC   0x2000             MOVS     R0,#+0
   \   000003DE   0x.... 0x....      BL       RoadBrd_UART_Transmit
    497                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000003E2   0x4668             MOV      R0,SP
   \   000003E4   0x.... 0x....      BL       strlen
   \   000003E8   0x4669             MOV      R1,SP
   \   000003EA   0x.... 0x....      BL       BGM111_Transmit
    498          //**HERE      BGM111_WriteCharacteristic(gattdb_RGBLightGrn,
    499          //                                 strlen((char *)data.RGBValues.Green), (uint8_t *)data.RGBValues.Green);
    500                /* Send the RGBLightBlu to the BLE module */
    501                sprintf( (char *)tmpBuffer, "<U000F>%s</U000F>", (uint8_t *)data.RGBValues.Blue);
   \   000003EE   0x.... 0x....      LDR.W    R2,??DataTable13_5
   \   000003F2   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000003F6   0x4668             MOV      R0,SP
   \   000003F8   0x.... 0x....      BL       sprintf
    502                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000003FC   0x4669             MOV      R1,SP
   \   000003FE   0x2000             MOVS     R0,#+0
   \   00000400   0x.... 0x....      BL       RoadBrd_UART_Transmit
    503                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000404   0x4668             MOV      R0,SP
   \   00000406   0x.... 0x....      BL       strlen
   \   0000040A   0x4669             MOV      R1,SP
   \   0000040C   0x.... 0x....      BL       BGM111_Transmit
    504          //**HERE      BGM111_WriteCharacteristic(gattdb_RGBLightBlu,
    505          //                                 strlen((char *)data.RGBValues.Blue), (uint8_t *)data.RGBValues.Blue);
    506              }
    507              //..Pressure
    508              if(strcmp( (char *)TmpData.Pressure.Raw, (char *)data.Pressure.Raw) != 0 )
   \                     ??ProcessSensorState_28: (+1)
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable13_10
   \   00000414   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000418   0x.... 0x....      BL       strcmp
   \   0000041C   0x2800             CMP      R0,#+0
   \   0000041E   0xD027             BEQ.N    ??ProcessSensorState_29
    509              {
    510                RoadBrd_gpio_On( BGM_LED );
   \   00000420   0x2001             MOVS     R0,#+1
   \   00000422   0x.... 0x....      BL       RoadBrd_gpio_On
    511                // Update Information inPressure data structure
    512                strcpy( (char *)data.Pressure.Raw, (char *)TmpData.Pressure.Raw );
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable13_11
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable13_10
   \   0000042E   0x.... 0x....      BL       strcpy
    513                strcpy( (char *)data.Pressure.Pressure, (char *)TmpData.Pressure.Pressure );
   \   00000432   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable13_12
   \   0000043A   0x.... 0x....      BL       strcpy
    514                data.Pressure.RawC = TmpData.Pressure.RawC;
   \   0000043E   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000442   0xF8D0 0x009C      LDR      R0,[R0, #+156]
   \   00000446   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   0000044A   0xF8C1 0x009C      STR      R0,[R1, #+156]
    515                // Update BLE Characteristics
    516                /* Send the PressureRw to the BLE module */
    517                sprintf( (char *)tmpBuffer, "<UACAC>%s</UACAC>", (uint8_t *)data.Pressure.Pressure);
   \   0000044E   0x.... 0x....      LDR.W    R2,??DataTable13_12
   \   00000452   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   00000456   0x4668             MOV      R0,SP
   \   00000458   0x.... 0x....      BL       sprintf
    518                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   0000045C   0x4669             MOV      R1,SP
   \   0000045E   0x2000             MOVS     R0,#+0
   \   00000460   0x.... 0x....      BL       RoadBrd_UART_Transmit
    519                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000464   0x4668             MOV      R0,SP
   \   00000466   0x.... 0x....      BL       strlen
   \   0000046A   0x4669             MOV      R1,SP
   \   0000046C   0x.... 0x....      BL       BGM111_Transmit
    520          //      BGM111_WriteCharacteristic(gattdb_PressureRw,
    521          //                                 strlen((char *)data.Pressure.Raw), (uint8_t *)data.Pressure.Raw);
    522                /* Send the Pressure to the BLE module */
    523          //**HERE      BGM111_WriteCharacteristic(gattdb_Pressure,
    524          //                                 strlen((char *)data.Pressure.Pressure), (uint8_t *)data.Pressure.Pressure);
    525                // Update Legacy Pressure Characteristic..
    526          //      tmpBuffer[0] = (uint8_t)('P');
    527          //      tmpBuffer[3] = (uint8_t)(data.Pressure.RawC & 0x00ff);
    528          //      tmpBuffer[2] = (uint8_t)((data.Pressure.RawC & 0xff00) >> 8);
    529          //      tmpBuffer[1] = (uint8_t)((data.Pressure.RawC & 0xff0000) >> 16);
    530                /* Send the Pressure RawC to the BLE module */
    531          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_barometer,
    532          //                                 0x04, (uint8_t *)tmpBuffer);
    533              }
    534              if(strcmp( (char *)TmpData.PrTemp.Raw, (char *)data.PrTemp.Raw) != 0 )
   \                     ??ProcessSensorState_29: (+1)
   \   00000470   0x.... 0x....      LDR.W    R1,??DataTable13_14
   \   00000474   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000478   0x.... 0x....      BL       strcmp
   \   0000047C   0x2800             CMP      R0,#+0
   \   0000047E   0xD025             BEQ.N    ??ProcessSensorState_30
    535              {
    536                RoadBrd_gpio_On( BGM_LED );
   \   00000480   0x2001             MOVS     R0,#+1
   \   00000482   0x.... 0x....      BL       RoadBrd_gpio_On
    537                // Update Information in data structure
    538                strcpy( (char *)data.PrTemp.Raw, (char *)TmpData.PrTemp.Raw );
   \   00000486   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000048A   0x.... 0x....      LDR.W    R0,??DataTable13_14
   \   0000048E   0x.... 0x....      BL       strcpy
    539                strcpy( (char *)data.PrTemp.TempC, (char *)TmpData.PrTemp.TempC );
   \   00000492   0x.... 0x....      LDR.W    R1,??DataTable4_14
   \   00000496   0x.... 0x....      LDR.W    R0,??DataTable13_16
   \   0000049A   0x.... 0x....      BL       strcpy
    540                strcpy( (char *)data.PrTemp.TempF, (char *)TmpData.PrTemp.TempF );
   \   0000049E   0x.... 0x....      LDR.W    R1,??DataTable13_17
   \   000004A2   0x.... 0x....      LDR.W    R0,??DataTable13_18
   \   000004A6   0x.... 0x....      BL       strcpy
    541                // Update BLE Characteristics
    542                /* Send the PrTemp to the BLE module */
    543                sprintf( (char *)tmpBuffer, "<UACAC>%s</UACAC>", (uint8_t *)data.Pressure.Pressure);
   \   000004AA   0x.... 0x....      LDR.W    R2,??DataTable13_12
   \   000004AE   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   000004B2   0x4668             MOV      R0,SP
   \   000004B4   0x.... 0x....      BL       sprintf
    544                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000004B8   0x4669             MOV      R1,SP
   \   000004BA   0x2000             MOVS     R0,#+0
   \   000004BC   0x.... 0x....      BL       RoadBrd_UART_Transmit
    545                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000004C0   0x4668             MOV      R0,SP
   \   000004C2   0x.... 0x....      BL       strlen
   \   000004C6   0x4669             MOV      R1,SP
   \   000004C8   0x.... 0x....      BL       BGM111_Transmit
    546          //      BGM111_WriteCharacteristic(gattdb_PrTemperatureRw,
    547          //                                 strlen((char *)data.PrTemp.Raw), (uint8_t *)data.PrTemp.Raw);
    548                /* Send the PrTemp to the BLE module */
    549          //**HERE      BGM111_WriteCharacteristic(gattdb_PrTemperatureC,
    550          //                                 strlen((char *)data.PrTemp.TempC), (uint8_t *)data.PrTemp.TempC);
    551                /* Send the PrTemp to the BLE module */
    552          //**HERE      BGM111_WriteCharacteristic(gattdb_PrTemperatureF,
    553          //                                 strlen((char *)data.PrTemp.TempF), (uint8_t *)data.PrTemp.TempF);
    554              } 
    555              //..Humidity
    556              if(strcmp( (char *)TmpData.Humidity.HRaw, (char *)data.Humidity.HRaw) != 0 )
   \                     ??ProcessSensorState_30: (+1)
   \   000004CC   0x.... 0x....      LDR.W    R1,??DataTable13_19
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable13_20
   \   000004D4   0x.... 0x....      BL       strcmp
   \   000004D8   0x2800             CMP      R0,#+0
   \   000004DA   0xD027             BEQ.N    ??ProcessSensorState_31
    557              {
    558                RoadBrd_gpio_On( BGM_LED );
   \   000004DC   0x2001             MOVS     R0,#+1
   \   000004DE   0x.... 0x....      BL       RoadBrd_gpio_On
    559                // Update Information in Humidity data structure
    560                strcpy( (char *)data.Humidity.HRaw, (char *)TmpData.Humidity.HRaw );
   \   000004E2   0x.... 0x....      LDR.W    R1,??DataTable13_20
   \   000004E6   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   000004EA   0x.... 0x....      BL       strcpy
    561                strcpy( (char *)data.Humidity.Humidity, (char *)TmpData.Humidity.Humidity );
   \   000004EE   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   000004F2   0x.... 0x....      LDR.W    R0,??DataTable13_21
   \   000004F6   0x.... 0x....      BL       strcpy
    562                data.Humidity.HRawC = TmpData.Humidity.HRawC;
   \   000004FA   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000004FE   0xF8B0 0x00C8      LDRH     R0,[R0, #+200]
   \   00000502   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000506   0xF8A1 0x00C8      STRH     R0,[R1, #+200]
    563                // Update BLE Characteristics
    564                /* Send the data to the BLE module */
    565                sprintf( (char *)tmpBuffer, "<UABAB>%s</UABAB>", (uint8_t *)data.Humidity.Humidity);
   \   0000050A   0x.... 0x....      LDR.W    R2,??DataTable13_21
   \   0000050E   0x.... 0x....      LDR.W    R1,??DataTable13_22
   \   00000512   0x4668             MOV      R0,SP
   \   00000514   0x.... 0x....      BL       sprintf
    566                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000518   0x4669             MOV      R1,SP
   \   0000051A   0x2000             MOVS     R0,#+0
   \   0000051C   0x.... 0x....      BL       RoadBrd_UART_Transmit
    567                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000520   0x4668             MOV      R0,SP
   \   00000522   0x.... 0x....      BL       strlen
   \   00000526   0x4669             MOV      R1,SP
   \   00000528   0x.... 0x....      BL       BGM111_Transmit
    568          //      BGM111_WriteCharacteristic(gattdb_HumidityRw,
    569          //                                 strlen((char *)data.Humidity.HRaw), (uint8_t *)data.Humidity.HRaw);
    570                /* Send the data to the BLE module */
    571          //**HERE      BGM111_WriteCharacteristic(gattdb_Humidity,
    572          //                                 strlen((char *)data.Humidity.Humidity), (uint8_t *)data.Humidity.Humidity);
    573                // Update Legacy Humidity Characteristic..
    574          //      tmpBuffer[0] = (uint8_t)('H');
    575          //      tmpBuffer[2] = (uint8_t)(data.Humidity.HRawC & 0x00ff);
    576          //      tmpBuffer[1] = (uint8_t)((data.Humidity.HRawC & 0xff00) >> 8);
    577          //      tmpBuffer[3] = (uint8_t)0x00;
    578                /* Send the Temperature RawC to the BLE module */
    579          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_humidity,
    580          //                                 0x03, (uint8_t *)tmpBuffer);
    581              }
    582              if(strcmp( (char *)TmpData.HmTemp.Raw, (char *)data.HmTemp.Raw) != 0 )
   \                     ??ProcessSensorState_31: (+1)
   \   0000052C   0x.... 0x....      LDR.W    R1,??DataTable13_23
   \   00000530   0x.... 0x....      LDR.W    R0,??DataTable13_24
   \   00000534   0x.... 0x....      BL       strcmp
   \   00000538   0x2800             CMP      R0,#+0
   \   0000053A   0xD03E             BEQ.N    ??ProcessSensorState_32
    583              {
    584                RoadBrd_gpio_On( BGM_LED );
   \   0000053C   0x2001             MOVS     R0,#+1
   \   0000053E   0x.... 0x....      BL       RoadBrd_gpio_On
    585                // Update Information in data structure
    586                strcpy( (char *)data.HmTemp.Raw, (char *)TmpData.HmTemp.Raw );
   \   00000542   0x.... 0x....      LDR.W    R1,??DataTable13_24
   \   00000546   0x.... 0x....      LDR.W    R0,??DataTable13_23
   \   0000054A   0x.... 0x....      BL       strcpy
    587                strcpy( (char *)data.HmTemp.TempC, (char *)TmpData.HmTemp.TempC );
   \   0000054E   0x.... 0x....      LDR.W    R1,??DataTable4_15
   \   00000552   0x.... 0x....      LDR.W    R0,??DataTable13_25
   \   00000556   0x.... 0x....      BL       strcpy
    588                strcpy( (char *)data.HmTemp.TempF, (char *)TmpData.HmTemp.TempF );
   \   0000055A   0x.... 0x....      LDR.W    R1,??DataTable13_26
   \   0000055E   0x.... 0x....      LDR.W    R0,??DataTable13_27
   \   00000562   0x.... 0x....      BL       strcpy
    589                data.HmTemp.RawC = TmpData.HmTemp.RawC;
   \   00000566   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000056A   0xF8B0 0x00E0      LDRH     R0,[R0, #+224]
   \   0000056E   0x.... 0x....      LDR.W    R1,??DataTable4_6
   \   00000572   0xF8A1 0x00E0      STRH     R0,[R1, #+224]
    590                // Update BLE Characteristics
    591                /* Send the HmTemp to the BLE module */
    592          //      BGM111_WriteCharacteristic(gattdb_HmdtyTempRw,
    593          //                                 strlen((char *)data.HmTemp.Raw), (uint8_t *)data.HmTemp.Raw);
    594                /* Send the HmTemp to the BLE module */
    595                sprintf( (char *)tmpBuffer, "<U0032>%s</U0032>", (uint8_t *)data.HmTemp.TempC);
   \   00000576   0x.... 0x....      LDR.W    R2,??DataTable13_25
   \   0000057A   0x.... 0x....      LDR.W    R1,??DataTable13_28
   \   0000057E   0x4668             MOV      R0,SP
   \   00000580   0x.... 0x....      BL       sprintf
    596                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000584   0x4669             MOV      R1,SP
   \   00000586   0x2000             MOVS     R0,#+0
   \   00000588   0x.... 0x....      BL       RoadBrd_UART_Transmit
    597                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000058C   0x4668             MOV      R0,SP
   \   0000058E   0x.... 0x....      BL       strlen
   \   00000592   0x4669             MOV      R1,SP
   \   00000594   0x.... 0x....      BL       BGM111_Transmit
    598          //**HERE      BGM111_WriteCharacteristic(gattdb_HmdtyTempC,
    599          //                                 strlen((char *)data.HmTemp.TempC), (uint8_t *)data.HmTemp.TempC);
    600                /* Send the HmTemp to the BLE module */
    601                sprintf( (char *)tmpBuffer, "<U0033>%s</U0033>", (uint8_t *)data.HmTemp.TempF);
   \   00000598   0x.... 0x....      LDR.W    R2,??DataTable13_27
   \   0000059C   0x.... 0x....      LDR.W    R1,??DataTable13_29
   \   000005A0   0x4668             MOV      R0,SP
   \   000005A2   0x.... 0x....      BL       sprintf
    602                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000005A6   0x4669             MOV      R1,SP
   \   000005A8   0x2000             MOVS     R0,#+0
   \   000005AA   0x.... 0x....      BL       RoadBrd_UART_Transmit
    603                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000005AE   0x4668             MOV      R0,SP
   \   000005B0   0x.... 0x....      BL       strlen
   \   000005B4   0x4669             MOV      R1,SP
   \   000005B6   0x.... 0x....      BL       BGM111_Transmit
    604          //**HERE      BGM111_WriteCharacteristic(gattdb_HmdtyTempF,
    605          //                                 strlen((char *)data.HmTemp.TempF), (uint8_t *)data.HmTemp.TempF);
    606              } 
    607              //..GridEye...Thermistor
    608          #ifndef ALWAYS_SEND
    609              if(strcmp( (char *)TmpData.GridValues.Thermistor.Raw, (char *)data.GridValues.Thermistor.Raw) != 0 )
   \                     ??ProcessSensorState_32: (+1)
   \   000005BA   0x.... 0x....      LDR.W    R1,??DataTable13_30
   \   000005BE   0x.... 0x....      LDR.W    R0,??DataTable13_31
   \   000005C2   0x.... 0x....      BL       strcmp
   \   000005C6   0x2800             CMP      R0,#+0
   \   000005C8   0xD01F             BEQ.N    ??ProcessSensorState_33
    610              {
    611          #endif
    612                RoadBrd_gpio_On( BGM_LED );
   \   000005CA   0x2001             MOVS     R0,#+1
   \   000005CC   0x.... 0x....      BL       RoadBrd_gpio_On
    613                // Update Information in data structure
    614                strcpy( (char *)data.GridValues.Thermistor.Raw, (char *)TmpData.GridValues.Thermistor.Raw );
   \   000005D0   0x.... 0x....      LDR.W    R1,??DataTable13_31
   \   000005D4   0x.... 0x....      LDR.W    R0,??DataTable13_30
   \   000005D8   0x.... 0x....      BL       strcpy
    615                strcpy( (char *)data.GridValues.Thermistor.TempC, (char *)TmpData.GridValues.Thermistor.TempC );
   \   000005DC   0x.... 0x....      LDR.W    R1,??DataTable4_16
   \   000005E0   0x.... 0x....      LDR.W    R0,??DataTable13_32
   \   000005E4   0x.... 0x....      BL       strcpy
    616                // Update BLE Characteristics
    617          //      BGM111_WriteCharacteristic(gattdb_ThermistorRw,
    618          //                                 strlen((char *)data.GridValues.Thermistor.Raw), (uint8_t *)data.GridValues.Thermistor.Raw);
    619                /* Send the Pressure to the BLE module */
    620                sprintf( (char *)tmpBuffer, "<U0017>%s</U0017>", (uint8_t *)data.GridValues.Thermistor.TempC);
   \   000005E8   0x.... 0x....      LDR.W    R2,??DataTable13_32
   \   000005EC   0x.... 0x....      LDR.W    R1,??DataTable13_33
   \   000005F0   0x4668             MOV      R0,SP
   \   000005F2   0x.... 0x....      BL       sprintf
    621                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000005F6   0x4669             MOV      R1,SP
   \   000005F8   0x2000             MOVS     R0,#+0
   \   000005FA   0x.... 0x....      BL       RoadBrd_UART_Transmit
    622                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000005FE   0x4668             MOV      R0,SP
   \   00000600   0x.... 0x....      BL       strlen
   \   00000604   0x4669             MOV      R1,SP
   \   00000606   0x.... 0x....      BL       BGM111_Transmit
    623          //**HERE      BGM111_WriteCharacteristic(gattdb_ThermistorC,
    624          //                                 strlen((char *)data.GridValues.Thermistor.TempC), (uint8_t *)data.GridValues.Thermistor.TempC);
    625          #ifndef ALWAYS_SEND
    626              }
    627          #endif
    628          #endif
    629              //..GridEye...Grid 1
    630          #ifndef ALWAYS_SEND
    631              if(strcmp( (char *)TmpData.GridValues.GridEye1.Raw, (char *)data.GridValues.GridEye1.Raw) != 0 )
   \                     ??ProcessSensorState_33: (+1)
   \   0000060A   0x.... 0x....      LDR.W    R1,??DataTable13_34
   \   0000060E   0x.... 0x....      LDR.W    R0,??DataTable13_35
   \   00000612   0x.... 0x....      BL       strcmp
   \   00000616   0x2800             CMP      R0,#+0
   \   00000618   0xD026             BEQ.N    ??ProcessSensorState_34
    632              {
    633          #endif
    634                RoadBrd_gpio_On( BGM_LED );
   \   0000061A   0x2001             MOVS     R0,#+1
   \   0000061C   0x.... 0x....      BL       RoadBrd_gpio_On
    635                // Update Information in data structure
    636                strcpy( (char *)data.GridValues.GridEye1.Raw, (char *)TmpData.GridValues.GridEye1.Raw );
   \   00000620   0x.... 0x....      LDR.W    R1,??DataTable13_35
   \   00000624   0x.... 0x....      LDR.W    R0,??DataTable13_34
   \   00000628   0x.... 0x....      BL       strcpy
    637                strcpy( (char *)data.GridValues.GridEye1.TempC, (char *)TmpData.GridValues.GridEye1.TempC );
   \   0000062C   0x.... 0x....      LDR.W    R1,??DataTable13_36
   \   00000630   0x.... 0x....      LDR.W    R0,??DataTable13_37
   \   00000634   0x.... 0x....      BL       strcpy
    638                data.GridValues.GridEye1.RawC = TmpData.GridValues.GridEye1.RawC;
   \   00000638   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000063C   0xF8B0 0x019C      LDRH     R0,[R0, #+412]
   \   00000640   0x....             LDR.N    R1,??DataTable4_6
   \   00000642   0xF8A1 0x019C      STRH     R0,[R1, #+412]
    639                // Update BLE Characteristics
    640                /* Send the PressureRw to the BLE module */
    641          #ifndef LEGACY_PATCH
    642                sprintf( (char *)tmpBuffer, "<U0019>%s</U0019>", (uint8_t *)data.GridValues.GridEye1.TempC);
   \   00000646   0x.... 0x....      LDR.W    R2,??DataTable13_37
   \   0000064A   0x.... 0x....      LDR.W    R1,??DataTable13_38
   \   0000064E   0x4668             MOV      R0,SP
   \   00000650   0x.... 0x....      BL       sprintf
    643                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000654   0x4669             MOV      R1,SP
   \   00000656   0x2000             MOVS     R0,#+0
   \   00000658   0x.... 0x....      BL       RoadBrd_UART_Transmit
    644                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000065C   0x4668             MOV      R0,SP
   \   0000065E   0x.... 0x....      BL       strlen
   \   00000662   0x4669             MOV      R1,SP
   \   00000664   0x.... 0x....      BL       BGM111_Transmit
    645          //      BGM111_WriteCharacteristic(gattdb_Thermal_1Rw,
    646          //                                 strlen((char *)data.GridValues.GridEye1.Raw), (uint8_t *)data.GridValues.GridEye1.Raw);
    647                /* Send the Pressure to the BLE module */
    648          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_1RwC,
    649          //                                 strlen((char *)data.GridValues.GridEye1.TempC), (uint8_t *)data.GridValues.GridEye1.TempC);
    650          #endif
    651                // Update Legacy Temperature Characteristic..
    652          //      tmpBuffer[0] = (uint8_t)('T');
    653          //      tmpBuffer[1] = (uint8_t)(0x01);
    654          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye1.RawC & 0x00ff);
    655          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye1.RawC & 0xff00) >> 8);
    656                /* Send the Temperature RawC to the BLE module */
    657          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp1,
    658          //                                 0x04, (uint8_t *)tmpBuffer);
    659          #ifndef ALWAYS_SEND
    660              }
    661          #endif
    662              //.GridEye..Grid 2
    663              if(strcmp( (char *)TmpData.GridValues.GridEye2.Raw, (char *)data.GridValues.GridEye2.Raw) != 0 )
   \                     ??ProcessSensorState_34: (+1)
   \   00000668   0x....             LDR.N    R1,??DataTable4
   \   0000066A   0x.... 0x....      LDR.W    R0,??DataTable13_39
   \   0000066E   0x.... 0x....      BL       strcmp
   \   00000672   0x2800             CMP      R0,#+0
   \   00000674   0xD025             BEQ.N    ??ProcessSensorState_35
    664              {
    665                RoadBrd_gpio_On( BGM_LED );
   \   00000676   0x2001             MOVS     R0,#+1
   \   00000678   0x.... 0x....      BL       RoadBrd_gpio_On
    666                // Update Information in data structure
    667                strcpy( (char *)data.GridValues.GridEye2.Raw, (char *)TmpData.GridValues.GridEye2.Raw );
   \   0000067C   0x.... 0x....      LDR.W    R1,??DataTable13_39
   \   00000680   0x....             LDR.N    R0,??DataTable4
   \   00000682   0x.... 0x....      BL       strcpy
    668                strcpy( (char *)data.GridValues.GridEye2.TempC, (char *)TmpData.GridValues.GridEye2.TempC );
   \   00000686   0x.... 0x....      LDR.W    R1,??DataTable13_40
   \   0000068A   0x.... 0x....      LDR.W    R0,??DataTable13_41
   \   0000068E   0x.... 0x....      BL       strcpy
    669                data.GridValues.GridEye2.RawC = TmpData.GridValues.GridEye2.RawC;
   \   00000692   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000696   0xF8B0 0x01B4      LDRH     R0,[R0, #+436]
   \   0000069A   0x....             LDR.N    R1,??DataTable4_6
   \   0000069C   0xF8A1 0x01B4      STRH     R0,[R1, #+436]
    670                // Update BLE Characteristics
    671                /* Send the PressureRw to the BLE module */
    672          #ifndef LEGACY_PATCH
    673          //      BGM111_WriteCharacteristic(gattdb_Thermal_2Rw,
    674          //                                 strlen((char *)data.GridValues.GridEye2.Raw), (uint8_t *)data.GridValues.GridEye2.Raw);
    675                /* Send the Pressure to the BLE module */
    676                sprintf( (char *)tmpBuffer, "<U001B>%s</U001B>", (uint8_t *)data.GridValues.GridEye2.TempC);
   \   000006A0   0x.... 0x....      LDR.W    R2,??DataTable13_41
   \   000006A4   0x.... 0x....      LDR.W    R1,??DataTable13_42
   \   000006A8   0x4668             MOV      R0,SP
   \   000006AA   0x.... 0x....      BL       sprintf
    677                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000006AE   0x4669             MOV      R1,SP
   \   000006B0   0x2000             MOVS     R0,#+0
   \   000006B2   0x.... 0x....      BL       RoadBrd_UART_Transmit
    678                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000006B6   0x4668             MOV      R0,SP
   \   000006B8   0x.... 0x....      BL       strlen
   \   000006BC   0x4669             MOV      R1,SP
   \   000006BE   0x.... 0x....      BL       BGM111_Transmit
    679          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_2RwC,
    680          //                                 strlen((char *)data.GridValues.GridEye2.TempC), (uint8_t *)data.GridValues.GridEye2.TempC);
    681          #endif
    682                // Update Legacy Temperature Characteristic..
    683          //      tmpBuffer[0] = (uint8_t)('T');
    684          //      tmpBuffer[1] = (uint8_t)(0x02);
    685          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye2.RawC & 0x00ff);
    686          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye2.RawC & 0xff00) >> 8);
    687                /* Send the Temperature RawC to the BLE module */
    688          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp2,
    689          //                                 0x04, (uint8_t *)tmpBuffer);
    690              }
    691              //.GridEye..Grid 3
    692              if(strcmp( (char *)TmpData.GridValues.GridEye3.Raw, (char *)data.GridValues.GridEye3.Raw) != 0 )
   \                     ??ProcessSensorState_35: (+1)
   \   000006C2   0x....             LDR.N    R1,??DataTable4_1
   \   000006C4   0x.... 0x....      LDR.W    R0,??DataTable13_43
   \   000006C8   0x.... 0x....      BL       strcmp
   \   000006CC   0x2800             CMP      R0,#+0
   \   000006CE   0xD025             BEQ.N    ??ProcessSensorState_36
    693              {
    694                RoadBrd_gpio_On( BGM_LED );
   \   000006D0   0x2001             MOVS     R0,#+1
   \   000006D2   0x.... 0x....      BL       RoadBrd_gpio_On
    695                // Update Information in data structure
    696                strcpy( (char *)data.GridValues.GridEye3.Raw, (char *)TmpData.GridValues.GridEye3.Raw );
   \   000006D6   0x.... 0x....      LDR.W    R1,??DataTable13_43
   \   000006DA   0x....             LDR.N    R0,??DataTable4_1
   \   000006DC   0x.... 0x....      BL       strcpy
    697                strcpy( (char *)data.GridValues.GridEye3.TempC, (char *)TmpData.GridValues.GridEye3.TempC );
   \   000006E0   0x.... 0x....      LDR.W    R1,??DataTable13_44
   \   000006E4   0x.... 0x....      LDR.W    R0,??DataTable13_45
   \   000006E8   0x.... 0x....      BL       strcpy
    698                data.GridValues.GridEye3.RawC = TmpData.GridValues.GridEye3.RawC;
   \   000006EC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000006F0   0xF8B0 0x01CC      LDRH     R0,[R0, #+460]
   \   000006F4   0x....             LDR.N    R1,??DataTable4_6
   \   000006F6   0xF8A1 0x01CC      STRH     R0,[R1, #+460]
    699                // Update BLE Characteristics
    700                /* Send the PressureRw to the BLE module */
    701          #ifndef LEGACY_PATCH
    702          //      BGM111_WriteCharacteristic(gattdb_Thermal_3Rw,
    703          //                                 strlen((char *)data.GridValues.GridEye3.Raw), (uint8_t *)data.GridValues.GridEye3.Raw);
    704                /* Send the Pressure to the BLE module */
    705          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_3RwC,
    706          //                                 strlen((char *)data.GridValues.GridEye3.TempC), (uint8_t *)data.GridValues.GridEye3.TempC);
    707          #endif
    708                // Update Legacy Temperature Characteristic..
    709          //      tmpBuffer[0] = (uint8_t)('T');
    710          //      tmpBuffer[1] = (uint8_t)(0x04);
    711          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye3.RawC & 0x00ff);
    712          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye3.RawC & 0xff00) >> 8);
    713                /* Send the Temperature RawC to the BLE module */
    714                sprintf( (char *)tmpBuffer, "<U001D>%s</U001D>", (uint8_t *)data.GridValues.GridEye3.TempC);
   \   000006FA   0x.... 0x....      LDR.W    R2,??DataTable13_45
   \   000006FE   0x.... 0x....      LDR.W    R1,??DataTable13_46
   \   00000702   0x4668             MOV      R0,SP
   \   00000704   0x.... 0x....      BL       sprintf
    715                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000708   0x4669             MOV      R1,SP
   \   0000070A   0x2000             MOVS     R0,#+0
   \   0000070C   0x.... 0x....      BL       RoadBrd_UART_Transmit
    716                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000710   0x4668             MOV      R0,SP
   \   00000712   0x.... 0x....      BL       strlen
   \   00000716   0x4669             MOV      R1,SP
   \   00000718   0x.... 0x....      BL       BGM111_Transmit
    717          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp3,
    718          //                                 0x04, (uint8_t *)tmpBuffer);
    719              }
    720              //.GridEye..Grid 4
    721          #ifndef ALWAYS_SEND
    722              if(strcmp( (char *)TmpData.GridValues.GridEye4.TempC, (char *)data.GridValues.GridEye4.TempC) != 0 )
   \                     ??ProcessSensorState_36: (+1)
   \   0000071C   0x.... 0x....      LDR.W    R1,??DataTable13_47
   \   00000720   0x.... 0x....      LDR.W    R0,??DataTable13_48
   \   00000724   0x.... 0x....      BL       strcmp
   \   00000728   0x2800             CMP      R0,#+0
   \   0000072A   0xD025             BEQ.N    ??ProcessSensorState_37
    723              {
    724          #endif
    725                RoadBrd_gpio_On( BGM_LED );
   \   0000072C   0x2001             MOVS     R0,#+1
   \   0000072E   0x.... 0x....      BL       RoadBrd_gpio_On
    726                // Update Information in data structure
    727                strcpy( (char *)data.GridValues.GridEye4.Raw, (char *)TmpData.GridValues.GridEye4.Raw );
   \   00000732   0x.... 0x....      LDR.W    R1,??DataTable13_49
   \   00000736   0x....             LDR.N    R0,??DataTable4_2
   \   00000738   0x.... 0x....      BL       strcpy
    728                strcpy( (char *)data.GridValues.GridEye4.TempC, (char *)TmpData.GridValues.GridEye4.TempC );
   \   0000073C   0x.... 0x....      LDR.W    R1,??DataTable13_48
   \   00000740   0x.... 0x....      LDR.W    R0,??DataTable13_47
   \   00000744   0x.... 0x....      BL       strcpy
    729                data.GridValues.GridEye4.RawC = TmpData.GridValues.GridEye4.RawC;
   \   00000748   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000074C   0xF8B0 0x01E4      LDRH     R0,[R0, #+484]
   \   00000750   0x....             LDR.N    R1,??DataTable4_6
   \   00000752   0xF8A1 0x01E4      STRH     R0,[R1, #+484]
    730                // Update BLE Characteristics
    731                /* Send the PressureRw to the BLE module */
    732                sprintf( (char *)tmpBuffer, "<U001F>%s</U001F>", (uint8_t *)data.GridValues.GridEye4.TempC);
   \   00000756   0x.... 0x....      LDR.W    R2,??DataTable13_47
   \   0000075A   0x.... 0x....      LDR.W    R1,??DataTable13_50
   \   0000075E   0x4668             MOV      R0,SP
   \   00000760   0x.... 0x....      BL       sprintf
    733                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000764   0x4669             MOV      R1,SP
   \   00000766   0x2000             MOVS     R0,#+0
   \   00000768   0x.... 0x....      BL       RoadBrd_UART_Transmit
    734                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000076C   0x4668             MOV      R0,SP
   \   0000076E   0x.... 0x....      BL       strlen
   \   00000772   0x4669             MOV      R1,SP
   \   00000774   0x.... 0x....      BL       BGM111_Transmit
    735          #ifndef LEGACY_PATCH
    736          //      BGM111_WriteCharacteristic(gattdb_Thermal_4Rw,
    737          //                                 strlen((char *)data.GridValues.GridEye4.Raw), (uint8_t *)data.GridValues.GridEye4.Raw);
    738                /* Send the Pressure to the BLE module */
    739          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_4RwC,
    740          //                                 strlen((char *)data.GridValues.GridEye4.TempC), (uint8_t *)data.GridValues.GridEye4.TempC);
    741          #endif
    742                // Update Legacy Temperature Characteristic..
    743          //      tmpBuffer[0] = (uint8_t)('T');
    744          //      tmpBuffer[1] = (uint8_t)(0x04);
    745          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye4.RawC & 0x00ff);
    746          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye4.RawC & 0xff00) >> 8);
    747                /* Send the Temperature RawC to the BLE module */
    748          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp4,
    749          //                                 0x04, (uint8_t *)tmpBuffer);
    750          #ifndef ALWAYS_SEND
    751              }
    752              //.GridEye..Grid 5
    753          #endif
    754              if(strcmp( (char *)TmpData.GridValues.GridEye5.Raw, (char *)data.GridValues.GridEye5.Raw) != 0 )
   \                     ??ProcessSensorState_37: (+1)
   \   00000778   0x....             LDR.N    R1,??DataTable4_3
   \   0000077A   0x.... 0x....      LDR.W    R0,??DataTable13_51
   \   0000077E   0x.... 0x....      BL       strcmp
   \   00000782   0x2800             CMP      R0,#+0
   \   00000784   0xD025             BEQ.N    ??ProcessSensorState_38
    755              {
    756                RoadBrd_gpio_On( BGM_LED );
   \   00000786   0x2001             MOVS     R0,#+1
   \   00000788   0x.... 0x....      BL       RoadBrd_gpio_On
    757                // Update Information in data structure
    758                strcpy( (char *)data.GridValues.GridEye5.Raw, (char *)TmpData.GridValues.GridEye5.Raw );
   \   0000078C   0x.... 0x....      LDR.W    R1,??DataTable13_51
   \   00000790   0x....             LDR.N    R0,??DataTable4_3
   \   00000792   0x.... 0x....      BL       strcpy
    759                strcpy( (char *)data.GridValues.GridEye5.TempC, (char *)TmpData.GridValues.GridEye5.TempC );
   \   00000796   0x.... 0x....      LDR.W    R1,??DataTable13_52
   \   0000079A   0x.... 0x....      LDR.W    R0,??DataTable13_53
   \   0000079E   0x.... 0x....      BL       strcpy
    760                data.GridValues.GridEye5.RawC = TmpData.GridValues.GridEye5.RawC;
   \   000007A2   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000007A6   0xF8B0 0x01FC      LDRH     R0,[R0, #+508]
   \   000007AA   0x....             LDR.N    R1,??DataTable4_6
   \   000007AC   0xF8A1 0x01FC      STRH     R0,[R1, #+508]
    761                // Update BLE Characteristics
    762                sprintf( (char *)tmpBuffer, "<U0021>%s</U0021>", (uint8_t *)data.GridValues.GridEye5.TempC);
   \   000007B0   0x.... 0x....      LDR.W    R2,??DataTable13_53
   \   000007B4   0x.... 0x....      LDR.W    R1,??DataTable13_54
   \   000007B8   0x4668             MOV      R0,SP
   \   000007BA   0x.... 0x....      BL       sprintf
    763                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000007BE   0x4669             MOV      R1,SP
   \   000007C0   0x2000             MOVS     R0,#+0
   \   000007C2   0x.... 0x....      BL       RoadBrd_UART_Transmit
    764                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000007C6   0x4668             MOV      R0,SP
   \   000007C8   0x.... 0x....      BL       strlen
   \   000007CC   0x4669             MOV      R1,SP
   \   000007CE   0x.... 0x....      BL       BGM111_Transmit
    765          #ifndef LEGACY_PATCH
    766          //      BGM111_WriteCharacteristic(gattdb_Thermal_5Rw,
    767          //                                 strlen((char *)data.GridValues.GridEye5.Raw), (uint8_t *)data.GridValues.GridEye5.Raw);
    768                /* Send the Pressure to the BLE module */
    769          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_5RwC,
    770          //                                 strlen((char *)data.GridValues.GridEye5.TempC), (uint8_t *)data.GridValues.GridEye5.TempC);
    771          #endif
    772                // Update Legacy Temperature Characteristic..
    773          //      tmpBuffer[0] = (uint8_t)('T');
    774          //      tmpBuffer[1] = (uint8_t)(0x05);
    775          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye5.RawC & 0x00ff);
    776          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye5.RawC & 0xff00) >> 8);
    777                /* Send the Temperature RawC to the BLE module */
    778          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp5,
    779          //                                 0x04, (uint8_t *)tmpBuffer);
    780              }
    781              //.GridEye..Grid 6
    782              if(strcmp( (char *)TmpData.GridValues.GridEye6.Raw, (char *)data.GridValues.GridEye6.Raw) != 0 )
   \                     ??ProcessSensorState_38: (+1)
   \   000007D2   0x....             LDR.N    R1,??DataTable4_4
   \   000007D4   0x.... 0x....      LDR.W    R0,??DataTable13_55
   \   000007D8   0x.... 0x....      BL       strcmp
   \   000007DC   0x2800             CMP      R0,#+0
   \   000007DE   0xD025             BEQ.N    ??ProcessSensorState_39
    783              {
    784                RoadBrd_gpio_On( BGM_LED );
   \   000007E0   0x2001             MOVS     R0,#+1
   \   000007E2   0x.... 0x....      BL       RoadBrd_gpio_On
    785                // Update Information in data structure
    786                strcpy( (char *)data.GridValues.GridEye6.Raw, (char *)TmpData.GridValues.GridEye6.Raw );
   \   000007E6   0x.... 0x....      LDR.W    R1,??DataTable13_55
   \   000007EA   0x....             LDR.N    R0,??DataTable4_4
   \   000007EC   0x.... 0x....      BL       strcpy
    787                strcpy( (char *)data.GridValues.GridEye6.TempC, (char *)TmpData.GridValues.GridEye6.TempC );
   \   000007F0   0x.... 0x....      LDR.W    R1,??DataTable13_56
   \   000007F4   0x.... 0x....      LDR.W    R0,??DataTable13_57
   \   000007F8   0x.... 0x....      BL       strcpy
    788                data.GridValues.GridEye6.RawC = TmpData.GridValues.GridEye6.RawC;
   \   000007FC   0x.... 0x....      LDR.W    R0,??DataTable13
   \   00000800   0xF8B0 0x0214      LDRH     R0,[R0, #+532]
   \   00000804   0x....             LDR.N    R1,??DataTable4_6
   \   00000806   0xF8A1 0x0214      STRH     R0,[R1, #+532]
    789                // Update BLE Characteristics
    790                /* Send the PressureRw to the BLE module */
    791                sprintf( (char *)tmpBuffer, "<U0023>%s</U0023>", (uint8_t *)data.GridValues.GridEye6.TempC);
   \   0000080A   0x.... 0x....      LDR.W    R2,??DataTable13_57
   \   0000080E   0x.... 0x....      LDR.W    R1,??DataTable13_58
   \   00000812   0x4668             MOV      R0,SP
   \   00000814   0x.... 0x....      BL       sprintf
    792                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000818   0x4669             MOV      R1,SP
   \   0000081A   0x2000             MOVS     R0,#+0
   \   0000081C   0x.... 0x....      BL       RoadBrd_UART_Transmit
    793                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000820   0x4668             MOV      R0,SP
   \   00000822   0x.... 0x....      BL       strlen
   \   00000826   0x4669             MOV      R1,SP
   \   00000828   0x.... 0x....      BL       BGM111_Transmit
    794          #ifndef LEGACY_PATCH
    795          //      BGM111_WriteCharacteristic(gattdb_Thermal_6Rw,
    796          //                                 strlen((char *)data.GridValues.GridEye6.Raw), (uint8_t *)data.GridValues.GridEye6.Raw);
    797                /* Send the Pressure to the BLE module */
    798          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_6RwC,
    799          //                                 strlen((char *)data.GridValues.GridEye6.TempC), (uint8_t *)data.GridValues.GridEye6.TempC);
    800          #endif
    801                // Update Legacy Temperature Characteristic..
    802          //      tmpBuffer[0] = (uint8_t)('T');
    803          //      tmpBuffer[1] = (uint8_t)(0x06);
    804          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye6.RawC & 0x00ff);
    805          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye6.RawC & 0xff00) >> 8);
    806                /* Send the Temperature RawC to the BLE module */
    807          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp6,
    808          //                                 0x04, (uint8_t *)tmpBuffer);
    809              }
    810              //.GridEye..Grid 7
    811          #ifndef ALWAYS_SEND
    812              if(strcmp( (char *)TmpData.GridValues.GridEye7.Raw, (char *)data.GridValues.GridEye7.Raw) != 0 )
   \                     ??ProcessSensorState_39: (+1)
   \   0000082C   0x....             LDR.N    R1,??DataTable4_5
   \   0000082E   0x.... 0x....      LDR.W    R0,??DataTable13_59
   \   00000832   0x.... 0x....      BL       strcmp
   \   00000836   0x2800             CMP      R0,#+0
   \   00000838   0xD025             BEQ.N    ??ProcessSensorState_40
    813              {
    814          #endif
    815                RoadBrd_gpio_On( BGM_LED );
   \   0000083A   0x2001             MOVS     R0,#+1
   \   0000083C   0x.... 0x....      BL       RoadBrd_gpio_On
    816                // Update Information in data structure
    817                strcpy( (char *)data.GridValues.GridEye7.Raw, (char *)TmpData.GridValues.GridEye7.Raw );
   \   00000840   0x.... 0x....      LDR.W    R1,??DataTable13_59
   \   00000844   0x....             LDR.N    R0,??DataTable4_5
   \   00000846   0x.... 0x....      BL       strcpy
    818                strcpy( (char *)data.GridValues.GridEye7.TempC, (char *)TmpData.GridValues.GridEye7.TempC );
   \   0000084A   0x.... 0x....      LDR.W    R1,??DataTable13_60
   \   0000084E   0x.... 0x....      LDR.W    R0,??DataTable13_61
   \   00000852   0x.... 0x....      BL       strcpy
    819                data.GridValues.GridEye7.RawC = TmpData.GridValues.GridEye7.RawC;
   \   00000856   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000085A   0xF8B0 0x022C      LDRH     R0,[R0, #+556]
   \   0000085E   0x....             LDR.N    R1,??DataTable4_6
   \   00000860   0xF8A1 0x022C      STRH     R0,[R1, #+556]
    820                // Update BLE Characteristics
    821                /* Send the PressureRw to the BLE module */
    822                sprintf( (char *)tmpBuffer, "<U0025>%s</U0025>", (uint8_t *)data.GridValues.GridEye7.TempC);
   \   00000864   0x.... 0x....      LDR.W    R2,??DataTable13_61
   \   00000868   0x.... 0x....      LDR.W    R1,??DataTable13_62
   \   0000086C   0x4668             MOV      R0,SP
   \   0000086E   0x.... 0x....      BL       sprintf
    823                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000872   0x4669             MOV      R1,SP
   \   00000874   0x2000             MOVS     R0,#+0
   \   00000876   0x.... 0x....      BL       RoadBrd_UART_Transmit
    824                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000087A   0x4668             MOV      R0,SP
   \   0000087C   0x.... 0x....      BL       strlen
   \   00000880   0x4669             MOV      R1,SP
   \   00000882   0x.... 0x....      BL       BGM111_Transmit
    825          #ifndef LEGACY_PATCH
    826          //      BGM111_WriteCharacteristic(gattdb_Thermal_7Rw,
    827          //                                 strlen((char *)data.GridValues.GridEye7.Raw), (uint8_t *)data.GridValues.GridEye7.Raw);
    828                /* Send the Pressure to the BLE module */
    829          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_7RwC,
    830          //                                 strlen((char *)data.GridValues.GridEye7.TempC), (uint8_t *)data.GridValues.GridEye7.TempC);
    831          #endif
    832                // Update Legacy Temperature Characteristic..
    833          //      tmpBuffer[0] = (uint8_t)('T');
    834          //      tmpBuffer[1] = (uint8_t)(0x07);
    835          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye7.RawC & 0x00ff);
    836          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye7.RawC & 0xff00) >> 8);
    837                /* Send the Temperature RawC to the BLE module */
    838          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp7,
    839          //                                 0x04, (uint8_t *)tmpBuffer);
    840          #ifndef ALWAYS_SEND
    841              }
    842              //.GridEye..Grid 8
    843          #endif
    844              if(strcmp( (char *)TmpData.GridValues.GridEye8.Raw, (char *)data.GridValues.GridEye8.Raw) != 0 )
   \                     ??ProcessSensorState_40: (+1)
   \   00000886   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000088A   0x.... 0x....      LDR.W    R0,??DataTable13_63
   \   0000088E   0x.... 0x....      BL       strcmp
   \   00000892   0x2800             CMP      R0,#+0
   \   00000894   0xD026             BEQ.N    ??ProcessSensorState_41
    845              {
    846                RoadBrd_gpio_On( BGM_LED );
   \   00000896   0x2001             MOVS     R0,#+1
   \   00000898   0x.... 0x....      BL       RoadBrd_gpio_On
    847                // Update Information in data structure
    848                strcpy( (char *)data.GridValues.GridEye8.Raw, (char *)TmpData.GridValues.GridEye8.Raw );
   \   0000089C   0x.... 0x....      LDR.W    R1,??DataTable13_63
   \   000008A0   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000008A4   0x.... 0x....      BL       strcpy
    849                strcpy( (char *)data.GridValues.GridEye8.TempC, (char *)TmpData.GridValues.GridEye8.TempC );
   \   000008A8   0x.... 0x....      LDR.W    R1,??DataTable13_64
   \   000008AC   0x.... 0x....      LDR.W    R0,??DataTable13_65
   \   000008B0   0x.... 0x....      BL       strcpy
    850                data.GridValues.GridEye8.RawC = TmpData.GridValues.GridEye8.RawC;
   \   000008B4   0x.... 0x....      LDR.W    R0,??DataTable13
   \   000008B8   0xF8B0 0x0244      LDRH     R0,[R0, #+580]
   \   000008BC   0x....             LDR.N    R1,??DataTable4_6
   \   000008BE   0xF8A1 0x0244      STRH     R0,[R1, #+580]
    851                // Update BLE Characteristics
    852                /* Send the PressureRw to the BLE module */
    853                sprintf( (char *)tmpBuffer, "<U0027>%s</U0027>", (uint8_t *)data.GridValues.GridEye8.TempC);
   \   000008C2   0x.... 0x....      LDR.W    R2,??DataTable13_65
   \   000008C6   0x.... 0x....      LDR.W    R1,??DataTable13_66
   \   000008CA   0x4668             MOV      R0,SP
   \   000008CC   0x.... 0x....      BL       sprintf
    854                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   000008D0   0x4669             MOV      R1,SP
   \   000008D2   0x2000             MOVS     R0,#+0
   \   000008D4   0x.... 0x....      BL       RoadBrd_UART_Transmit
    855                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   000008D8   0x4668             MOV      R0,SP
   \   000008DA   0x.... 0x....      BL       strlen
   \   000008DE   0x4669             MOV      R1,SP
   \   000008E0   0x.... 0x....      BL       BGM111_Transmit
    856          #ifndef LEGACY_PATCH
    857          //      BGM111_WriteCharacteristic(gattdb_Thermal_8Rw,
    858          //                                 strlen((char *)data.GridValues.GridEye8.Raw), (uint8_t *)data.GridValues.GridEye8.Raw);
    859                /* Send the Pressure to the BLE module */
    860          //**HERE      BGM111_WriteCharacteristic(gattdb_Thermal_8RwC,
    861          //                                 strlen((char *)data.GridValues.GridEye8.TempC), (uint8_t *)data.GridValues.GridEye8.TempC);
    862          #endif
    863                // Update Legacy Temperature Characteristic..
    864          //      tmpBuffer[0] = (uint8_t)('T');
    865          //      tmpBuffer[1] = (uint8_t)(0x08);
    866          //      tmpBuffer[2] = (uint8_t)(data.GridValues.GridEye8.RawC & 0x00ff);
    867          //      tmpBuffer[3] = (uint8_t)((data.GridValues.GridEye8.RawC & 0xff00) >> 8);
    868                /* Send the Temperature RawC to the BLE module */
    869          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_temp8,
    870          //                                 0x04, (uint8_t *)tmpBuffer);
    871              }
    872              // Test Legacy flag to perform one time operations
    873              if( data.Legacy_OneTime )
   \                     ??ProcessSensorState_41: (+1)
   \   000008E4   0x....             LDR.N    R0,??DataTable4_6
   \   000008E6   0x7840             LDRB     R0,[R0, #+1]
   \   000008E8   0x2800             CMP      R0,#+0
   \   000008EA   0xD013             BEQ.N    ??ProcessSensorState_42
    874              {
    875                // Clear Flag...We are done.
    876                data.Legacy_OneTime = false;
   \   000008EC   0x2000             MOVS     R0,#+0
   \   000008EE   0x....             LDR.N    R1,??DataTable4_6
   \   000008F0   0x7048             STRB     R0,[R1, #+1]
    877                // Update BLE Characteristics
    878                sprintf( (char *)tmpBuffer, "<UAEAE>%s</UAEAE>", (uint8_t *)LEGACY_BANNER);
   \   000008F2   0x.... 0x....      LDR.W    R2,??DataTable13_67
   \   000008F6   0x.... 0x....      LDR.W    R1,??DataTable13_68
   \   000008FA   0x4668             MOV      R0,SP
   \   000008FC   0x.... 0x....      BL       sprintf
    879                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000900   0x4669             MOV      R1,SP
   \   00000902   0x2000             MOVS     R0,#+0
   \   00000904   0x.... 0x....      BL       RoadBrd_UART_Transmit
    880                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   00000908   0x4668             MOV      R0,SP
   \   0000090A   0x.... 0x....      BL       strlen
   \   0000090E   0x4669             MOV      R1,SP
   \   00000910   0x.... 0x....      BL       BGM111_Transmit
    881          //**HERE      BGM111_WriteCharacteristic(gattdb_xgatt_rev,
    882          //                                 strlen((char *)LEGACY_BANNER), (uint8_t *)LEGACY_BANNER);
    883              }
    884          //#endif
    885              if (data.task_item == VOLTAGE_MNTR_TASK)
   \                     ??ProcessSensorState_42: (+1)
   \   00000914   0x....             LDR.N    R0,??DataTable4_6
   \   00000916   0x7880             LDRB     R0,[R0, #+2]
   \   00000918   0x2800             CMP      R0,#+0
   \   0000091A   0xD117             BNE.N    ??ProcessSensorState_0
    886              {
    887                // Send </FRM> String.
    888                sprintf( (char *)tmpBuffer, "</FRM>");
   \   0000091C   0x.... 0x....      LDR.W    R1,??DataTable13_69
   \   00000920   0x4668             MOV      R0,SP
   \   00000922   0x.... 0x....      BL       sprintf
    889                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000926   0x4669             MOV      R1,SP
   \   00000928   0x2000             MOVS     R0,#+0
   \   0000092A   0x.... 0x....      BL       RoadBrd_UART_Transmit
    890                BGM111_Transmit((uint32_t)(strlen((char *)tmpBuffer)), tmpBuffer);
   \   0000092E   0x4668             MOV      R0,SP
   \   00000930   0x.... 0x....      BL       strlen
   \   00000934   0x4669             MOV      R1,SP
   \   00000936   0x.... 0x....      BL       BGM111_Transmit
    891                sprintf( (char *)tmpBuffer, "\r\n\r\n" );
   \   0000093A   0x.... 0x....      LDR.W    R1,??DataTable13_70
   \   0000093E   0x4668             MOV      R0,SP
   \   00000940   0x.... 0x....      BL       sprintf
    892                RoadBrd_UART_Transmit(MONITOR_UART, tmpBuffer);
   \   00000944   0x4669             MOV      R1,SP
   \   00000946   0x2000             MOVS     R0,#+0
   \   00000948   0x.... 0x....      BL       RoadBrd_UART_Transmit
    893              }
    894              
    895           }
    896          
    897            return Status;
   \                     ??ProcessSensorState_0: (+1)
   \   0000094C   0x0020             MOVS     R0,R4
   \   0000094E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??ProcessSensorState_22: (+1)
   \   00000950   0xB00A             ADD      SP,SP,#+40
   \   00000952   0xBD10             POP      {R4,PC}          ;; return
    898          }
    899          
    900            /**
    901            * @brief  This function Processes the Road SOund interface and builds the appropriate characteristics.
    902            * @param  None
    903            * @retval None
    904            */

   \                                 In section .text, align 2, keep-with-next
    905          void Process_RdSound( void )
    906          {
   \                     Process_RdSound: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB095             SUB      SP,SP,#+84
    907          //  uint8_t tempStr[13];
    908            uint8_t tempBffr2[80];
    909            
    910            if ((BGM111_Ready()) &&
    911                (BGM111_Connected()) &&
    912                (BGM111_DataConnected()) &&
    913                (BGM111_SyncModeTestNoInc()) )
   \   00000004   0x.... 0x....      BL       BGM111_Ready
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF000 0x80CB      BEQ.W    ??Process_RdSound_0
   \   0000000E   0x.... 0x....      BL       BGM111_Connected
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xF000 0x80C6      BEQ.W    ??Process_RdSound_0
   \   00000018   0x.... 0x....      BL       BGM111_DataConnected
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xF000 0x80C1      BEQ.W    ??Process_RdSound_0
   \   00000022   0x.... 0x....      BL       BGM111_SyncModeTestNoInc
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xF000 0x80BC      BEQ.W    ??Process_RdSound_0
    914            {
    915                // Send <FRM> String.
    916                sprintf( (char *)tempBffr2, "<FRM>");
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable13_71
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x.... 0x....      BL       sprintf
    917                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   00000036   0x4669             MOV      R1,SP
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       RoadBrd_UART_Transmit
    918                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   0000003E   0x4668             MOV      R0,SP
   \   00000040   0x.... 0x....      BL       strlen
   \   00000044   0x4669             MOV      R1,SP
   \   00000046   0x.... 0x....      BL       BGM111_Transmit
    919            
    920                RoadBrd_gpio_On( MICRO_LED );
   \   0000004A   0x2002             MOVS     R0,#+2
   \   0000004C   0x.... 0x....      BL       RoadBrd_gpio_On
    921                // 1. Build and Process Road Sound
    922                RoadBrdSnd_ProcessSound();
   \   00000050   0x.... 0x....      BL       RoadBrdSnd_ProcessSound
    923                
    924                // 2. Load FFT Data into local Data.
    925                RoadBrdSnd_DumpBin0( &data.FFTBin0 );
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable13_72
   \   00000058   0x.... 0x....      BL       RoadBrdSnd_DumpBin0
    926                RoadBrdSnd_DumpBin16( &data.FFTBin16 );
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable13_73
   \   00000060   0x.... 0x....      BL       RoadBrdSnd_DumpBin16
    927                RoadBrdSnd_DumpBin32( &data.FFTBin32 );
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable13_74
   \   00000068   0x.... 0x....      BL       RoadBrdSnd_DumpBin32
    928                RoadBrdSnd_DumpBin48( &data.FFTBin48 );
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable13_75
   \   00000070   0x.... 0x....      BL       RoadBrdSnd_DumpBin48
    929                
    930                // 3. Update BLE Characteristics with new data.
    931                /* Send the FFTBin0 to the BLE module */
    932                RoadBrd_gpio_On( BGM_LED );
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      BL       RoadBrd_gpio_On
    933              #ifndef LEGACY_PATCH
    934                sprintf( (char *)tempBffr2, "<U0012>%s</U0012>", (uint8_t *)data.FFTBin0.dumpStr);
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable13_72
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable13_76
   \   00000082   0x4668             MOV      R0,SP
   \   00000084   0x.... 0x....      BL       sprintf
    935                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   00000088   0x4669             MOV      R1,SP
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x.... 0x....      BL       RoadBrd_UART_Transmit
    936                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   00000090   0x4668             MOV      R0,SP
   \   00000092   0x.... 0x....      BL       strlen
   \   00000096   0x4669             MOV      R1,SP
   \   00000098   0x.... 0x....      BL       BGM111_Transmit
    937              //  BGM111_WriteCharacteristic(gattdb_RdSound0,
    938              //                             strlen((char *)data.FFTBin0.dumpStr), (uint8_t *)data.FFTBin0.dumpStr);
    939              #endif
    940                /* Send the FFTBin16 to the BLE module */
    941                RoadBrd_gpio_On( BGM_LED );
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x.... 0x....      BL       RoadBrd_gpio_On
    942              #ifndef LEGACY_PATCH
    943                sprintf( (char *)tempBffr2, "<U0013>%s</U0013>", (uint8_t *)data.FFTBin16.dumpStr);
   \   000000A2   0x.... 0x....      LDR.W    R2,??DataTable13_73
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable13_77
   \   000000AA   0x4668             MOV      R0,SP
   \   000000AC   0x.... 0x....      BL       sprintf
    944                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   000000B0   0x4669             MOV      R1,SP
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       RoadBrd_UART_Transmit
    945                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   000000B8   0x4668             MOV      R0,SP
   \   000000BA   0x.... 0x....      BL       strlen
   \   000000BE   0x4669             MOV      R1,SP
   \   000000C0   0x.... 0x....      BL       BGM111_Transmit
    946              //  BGM111_WriteCharacteristic(gattdb_RdSound16,
    947              //                             strlen((char *)data.FFTBin16.dumpStr), (uint8_t *)data.FFTBin16.dumpStr);
    948              #endif
    949                /* Send the FFTBin32 to the BLE module */
    950                RoadBrd_gpio_On( BGM_LED );
   \   000000C4   0x2001             MOVS     R0,#+1
   \   000000C6   0x.... 0x....      BL       RoadBrd_gpio_On
    951              #ifndef LEGACY_PATCH
    952                sprintf( (char *)tempBffr2, "<U0014>%s</U0014>", (uint8_t *)data.FFTBin32.dumpStr);
   \   000000CA   0x.... 0x....      LDR.W    R2,??DataTable13_74
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable13_78
   \   000000D2   0x4668             MOV      R0,SP
   \   000000D4   0x.... 0x....      BL       sprintf
    953                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   000000D8   0x4669             MOV      R1,SP
   \   000000DA   0x2000             MOVS     R0,#+0
   \   000000DC   0x.... 0x....      BL       RoadBrd_UART_Transmit
    954                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   000000E0   0x4668             MOV      R0,SP
   \   000000E2   0x.... 0x....      BL       strlen
   \   000000E6   0x4669             MOV      R1,SP
   \   000000E8   0x.... 0x....      BL       BGM111_Transmit
    955              //  BGM111_WriteCharacteristic(gattdb_RdSound32,
    956              //                             strlen((char *)data.FFTBin32.dumpStr), (uint8_t *)data.FFTBin32.dumpStr);
    957              #endif
    958                /* Send the FFTBin48 to the BLE module */
    959                RoadBrd_gpio_On( BGM_LED );
   \   000000EC   0x2001             MOVS     R0,#+1
   \   000000EE   0x.... 0x....      BL       RoadBrd_gpio_On
    960              #ifndef LEGACY_PATCH
    961                sprintf( (char *)tempBffr2, "<U0015>%s</U0015>", (uint8_t *)data.FFTBin48.dumpStr);
   \   000000F2   0x.... 0x....      LDR.W    R2,??DataTable13_75
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable13_79
   \   000000FA   0x4668             MOV      R0,SP
   \   000000FC   0x.... 0x....      BL       sprintf
    962                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   00000100   0x4669             MOV      R1,SP
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x.... 0x....      BL       RoadBrd_UART_Transmit
    963                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   00000108   0x4668             MOV      R0,SP
   \   0000010A   0x.... 0x....      BL       strlen
   \   0000010E   0x4669             MOV      R1,SP
   \   00000110   0x.... 0x....      BL       BGM111_Transmit
    964              //  BGM111_WriteCharacteristic(gattdb_RdSound48,
    965              //                             strlen((char *)data.FFTBin48.dumpStr), (uint8_t *)data.FFTBin48.dumpStr);
    966                //sprintf( (char *)tempBffr2, "<TICK>RP/%08x/%04x/%04x</TICK>", HAL_GetTick(), HeartBeat_Cnt, connection_cnt);
    967                sprintf( (char *)tempBffr2, "<TICK>RP/%08x</TICK>", HAL_GetTick());
   \   00000114   0x.... 0x....      BL       HAL_GetTick
   \   00000118   0x0002             MOVS     R2,R0
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable13_80
   \   0000011E   0x4668             MOV      R0,SP
   \   00000120   0x.... 0x....      BL       sprintf
    968                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   00000124   0x4669             MOV      R1,SP
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0x.... 0x....      BL       RoadBrd_UART_Transmit
    969                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   0000012C   0x4668             MOV      R0,SP
   \   0000012E   0x.... 0x....      BL       strlen
   \   00000132   0x4669             MOV      R1,SP
   \   00000134   0x.... 0x....      BL       BGM111_Transmit
    970                // Set Sync Flag for Frame.
    971                BGM111_cntrlSetSyncFlg( SYNC_WAIT );
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      BL       BGM111_cntrlSetSyncFlg
    972                // Test TACK State
    973                if (BGM111_GetTackState() == TACK_ARMED)
   \   0000013E   0x.... 0x....      BL       BGM111_GetTackState
   \   00000142   0x2801             CMP      R0,#+1
   \   00000144   0xD108             BNE.N    ??Process_RdSound_1
    974                {
    975                  BGM111_SetTackState(TACK_ARMED2);
   \   00000146   0x2002             MOVS     R0,#+2
   \   00000148   0x.... 0x....      BL       BGM111_SetTackState
    976                  RoadBrd_UART_Transmit(MONITOR_UART, (uint8_t *)"<ble.TackArmed = TACK_ARMED2>");
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable13_81
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x.... 0x....      BL       RoadBrd_UART_Transmit
   \   00000156   0xE00B             B.N      ??Process_RdSound_2
    977                }
    978                else if (BGM111_GetTackState() == TACK_ARMED2)
   \                     ??Process_RdSound_1: (+1)
   \   00000158   0x.... 0x....      BL       BGM111_GetTackState
   \   0000015C   0x2802             CMP      R0,#+2
   \   0000015E   0xD107             BNE.N    ??Process_RdSound_2
    979                {
    980                  BGM111_SetTackState(TACK_ASYNC);
   \   00000160   0x2004             MOVS     R0,#+4
   \   00000162   0x.... 0x....      BL       BGM111_SetTackState
    981                  RoadBrd_UART_Transmit(MONITOR_UART, (uint8_t *)"<ble.TackArmed = TACK_ASYNC>");      }
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable13_82
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x.... 0x....      BL       RoadBrd_UART_Transmit
    982                // Service Watchdog
    983                RoadBrd_WWDG_Refresh();     // Refresh WatchDog
   \                     ??Process_RdSound_2: (+1)
   \   00000170   0x.... 0x....      BL       RoadBrd_WWDG_Refresh
    984                // Send </FRM> String.
    985                sprintf( (char *)tempBffr2, "</FRM>");
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable13_69
   \   00000178   0x4668             MOV      R0,SP
   \   0000017A   0x.... 0x....      BL       sprintf
    986                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   0000017E   0x4669             MOV      R1,SP
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x.... 0x....      BL       RoadBrd_UART_Transmit
    987                BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
   \   00000186   0x4668             MOV      R0,SP
   \   00000188   0x.... 0x....      BL       strlen
   \   0000018C   0x4669             MOV      R1,SP
   \   0000018E   0x.... 0x....      BL       BGM111_Transmit
    988                sprintf( (char *)tempBffr2, "\r\n\r\n" );
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable13_70
   \   00000196   0x4668             MOV      R0,SP
   \   00000198   0x.... 0x....      BL       sprintf
    989                //BGM111_Transmit((uint32_t)(strlen((char *)tempBffr2)), tempBffr2);
    990                RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   \   0000019C   0x4669             MOV      R1,SP
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x.... 0x....      BL       RoadBrd_UART_Transmit
    991            } // Endif (BGM111_Ready()
    992            // Test Analytics flag and determine if we need to update that characteristic
    993          //  if (!(Tst_HeartBeat()))
    994            if (analytics.HrtBeat_Cnt++ >= ANALYTICS_MAXCNT)
   \                     ??Process_RdSound_0: (+1)
   \   000001A4   0x....             LDR.N    R0,??DataTable8
   \   000001A6   0x8840             LDRH     R0,[R0, #+2]
   \   000001A8   0x1C41             ADDS     R1,R0,#+1
   \   000001AA   0x....             LDR.N    R2,??DataTable8
   \   000001AC   0x8051             STRH     R1,[R2, #+2]
   \   000001AE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B0   0x280E             CMP      R0,#+14
   \   000001B2   0xDB04             BLT.N    ??Process_RdSound_3
    995            {
    996              analytics.HrtBeat_Cnt = 0;
   \   000001B4   0x2000             MOVS     R0,#+0
   \   000001B6   0x....             LDR.N    R1,??DataTable8
   \   000001B8   0x8048             STRH     R0,[R1, #+2]
    997              ClrDataStructure();                           // Clear Backup data structure.
   \   000001BA   0x.... 0x....      BL       ClrDataStructure
    998          //    sprintf( (char *)tempStr, "%010dHB", analytics.HrtBeat_Cnt++);
    999          //    BGM111_WriteCharacteristic(gattdb_AnlHrtBt,
   1000          //                             strlen((char *)tempStr), (uint8_t *)tempStr);
   1001            }
   1002          #endif
   1003            RoadBrd_gpio_Off( MICRO_LED );
   \                     ??Process_RdSound_3: (+1)
   \   000001BE   0x2002             MOVS     R0,#+2
   \   000001C0   0x.... 0x....      BL       RoadBrd_gpio_Off
   1004            // Last....Report Perioic Status of time/Hrtbt_Cnt/Cnct_Cnt
   1005            // ALSO Last....Report Perioic Status of Voltage/Current/Power
   1006            //sprintf( (char *)tempBffr2, " <%s/%s/%s> ", data.Voltage.Voltage, data.Current.Current, data.Power.Power);
   1007            //RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   1008          }
   \   000001C4   0xB015             ADD      SP,SP,#+84
   \   000001C6   0xBD00             POP      {PC}             ;; return
   1009          
   1010          
   1011          /**
   1012            * @brief  This function streams the passed string to the App via characteristics..
   1013            * @param  uint8_t *pData
   1014            * @retval None
   1015            */

   \                                 In section .text, align 2, keep-with-next
   1016          void SendApp_String( uint8_t *pData )
   1017          {
   \                     SendApp_String: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
   1018            uint8_t tempBffr3[25];
   1019            uint8_t *tempPtr;
   1020            //int tempval;
   1021          
   1022            if (BGM111_Ready())
   \   00000006   0x.... 0x....      BL       BGM111_Ready
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD013             BEQ.N    ??SendApp_String_0
   1023            {
   1024              strncpy( (char *)tempBffr3, (char *)pData, 20);
   \   0000000E   0x2214             MOVS     R2,#+20
   \   00000010   0x0021             MOVS     R1,R4
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       strncpy
   1025              //BGM111_WriteCharacteristic(gattdb_AnlHrtBt,
   1026              //                          strlen((char *)tempBffr3), (uint8_t *)tempBffr3);
   1027              //tempval = strlen((char *)pData);
   1028              //if (tempval > 20)
   1029              if (strlen((char *)pData) > 20)
   \   00000018   0x0020             MOVS     R0,R4
   \   0000001A   0x.... 0x....      BL       strlen
   \   0000001E   0x2815             CMP      R0,#+21
   \   00000020   0xD303             BCC.N    ??SendApp_String_1
   1030                tempPtr = &pData[20];
   \   00000022   0xF114 0x0014      ADDS     R0,R4,#+20
   \   00000026   0x0005             MOVS     R5,R0
   \   00000028   0xE000             B.N      ??SendApp_String_2
   1031              else
   1032                tempPtr = &pData[0];
   \                     ??SendApp_String_1: (+1)
   \   0000002A   0x0025             MOVS     R5,R4
   1033              strncpy( (char *)tempBffr3, (char *)tempPtr, 20);
   \                     ??SendApp_String_2: (+1)
   \   0000002C   0x2214             MOVS     R2,#+20
   \   0000002E   0x0029             MOVS     R1,R5
   \   00000030   0x4668             MOV      R0,SP
   \   00000032   0x.... 0x....      BL       strncpy
   1034              //BGM111_WriteCharacteristic(gattdb_AnlHrtBt2,
   1035              //                          strlen((char *)tempBffr3), (uint8_t *)tempBffr3);
   1036            }
   1037          }
   \                     ??SendApp_String_0: (+1)
   \   00000036   0xB007             ADD      SP,SP,#+28
   \   00000038   0xBD30             POP      {R4,R5,PC}       ;; return
   1038          
   1039          /**
   1040            * @brief  This function Tests for an active connection.
   1041            * @param  None
   1042            * @retval None
   1043            */

   \                                 In section .text, align 2, keep-with-next
   1044          void Test_Connection( void )
   1045          {
   \                     Test_Connection: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1046          //  uint8_t tempBffr2[40];
   1047            
   1048            // Test HAL Count
   1049          /*  if (HAL_GetTick() >= HAL_TIMEOUT_CNT)
   1050            {
   1051              // Has been 90 Seconds....Time to reset Code.
   1052              RdBrd_ErrCdLogErrCd( ERROR_BGM_CNNCT, MODULE_bgm111 );
   1053              Clr_HrtBeat_Cnt();
   1054              RdBrd_BlinkErrCd( ERROR_BGM_CNNCT );
   1055              //RoadBrd_Delay( 1000 );
   1056              HAL_NVIC_SystemReset();
   1057            }*/
   1058            
   1059            // Test Connection
   1060            if ( BGM111_Connected() )
   \   00000002   0x.... 0x....      BL       BGM111_Connected
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD016             BEQ.N    ??Test_Connection_0
   1061            {
   1062              // Yes...Clear count
   1063             connection_cnt = 0;
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable13_83
   \   00000010   0x8008             STRH     R0,[R1, #+0]
   1064              // Test Heart Beat. Has it been cleared?
   1065              if (Tst_HeartBeat())
   \   00000012   0x.... 0x....      BL       Tst_HeartBeat
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD007             BEQ.N    ??Test_Connection_1
   1066              {
   1067                // No We need to watch this closely.
   1068                // Test Heart Beat Count and determine if time to reset.
   1069                HeartBeat_Cnt++;
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable13_84
   \   0000001E   0x8800             LDRH     R0,[R0, #+0]
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable13_84
   \   00000026   0x8008             STRH     R0,[R1, #+0]
   \   00000028   0xE00D             B.N      ??Test_Connection_2
   1070                // Time to Build Status?
   1071          //      if ( (HeartBeat_Cnt % 5) == 0 )
   1072          //      {
   1073          //        sprintf( (char *)tempBffr2, " \r\n<HB:%04x/%08x> ", HeartBeat_Cnt, HAL_GetTick());
   1074          //        RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   1075          //        SendApp_String( tempBffr2 );
   1076          //      }
   1077                // Test Heart Beat Count. If expired, reset.
   1078          //      if (HeartBeat_Cnt > HEARTBEAT_CNT)
   1079          //      {
   1080                  // Has been 30 Seconds....Time to reset Code.
   1081          //        RdBrd_ErrCdLogErrCd( ERROR_BGM_HRTBT, MODULE_bgm111 );
   1082          //        HeartBeat_Cnt = 0;
   1083          //        Clr_HrtBeat_Cnt();
   1084                  //RoadBrd_Delay( 1000 );
   1085          //        RdBrd_BlinkErrCd( ERROR_BGM_HRTBT );
   1086          //        HAL_NVIC_SystemReset();
   1087          //      }
   1088              } // EndIf (Tst_HeartBeat())
   1089              else
   1090              {
   1091                // OK. Clear Count.
   1092                HeartBeat_Cnt = 0;
   \                     ??Test_Connection_1: (+1)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable13_84
   \   00000030   0x8008             STRH     R0,[R1, #+0]
   1093                // Set Heart Beat Flag for next Sequence.
   1094                Set_HeartBeat();
   \   00000032   0x.... 0x....      BL       Set_HeartBeat
   \   00000036   0xE006             B.N      ??Test_Connection_2
   1095              }
   1096            } // EndIf ( BGM111_Connected() )
   1097            else
   1098            {
   1099              // No..
   1100              connection_cnt++;
   \                     ??Test_Connection_0: (+1)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable13_83
   \   0000003C   0x8800             LDRH     R0,[R0, #+0]
   \   0000003E   0x1C40             ADDS     R0,R0,#+1
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable13_83
   \   00000044   0x8008             STRH     R0,[R1, #+0]
   1101              // Test Connection Count. If expired, reset.
   1102          //    if ( (connection_cnt % 5) == 0 )
   1103          //    {
   1104          //      sprintf( (char *)tempBffr2, " \r\n<CNCT:%04x/%08x> ", connection_cnt, HAL_GetTick());
   1105          //      RoadBrd_UART_Transmit(MONITOR_UART, tempBffr2);
   1106          //    }
   1107          //    if (connection_cnt > CONNECTION_CNT)
   1108          //    {
   1109                // Has been 90 Seconds....Time to reset Code.
   1110          //      RdBrd_ErrCdLogErrCd( ERROR_BGM_CNNCT, MODULE_bgm111 );
   1111          //      Clr_HrtBeat_Cnt();
   1112          //      RdBrd_BlinkErrCd( ERROR_BGM_CNNCT );
   1113                //RoadBrd_Delay( 1000 );
   1114          //      HAL_NVIC_SystemReset();
   1115          //    }
   1116            } // EndElse ( BGM111_Connected() )
   1117          }
   \                     ??Test_Connection_2: (+1)
   \   00000046   0xBD01             POP      {R0,PC}          ;; return
   1118          
   1119            /**
   1120            * @brief  This function resets the driver State List to all off.
   1121            * @param  None
   1122            * @retval None
   1123            */

   \                                 In section .text, align 2, keep-with-next
   1124          void Reset_DriverStates( void )
   1125          {
   1126            driver_list.VoltageMonitor = DRIVER_OFF;
   \                     Reset_DriverStates: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable13_85
   \   00000006   0x7008             STRB     R0,[R1, #+0]
   1127            driver_list.Temperature = DRIVER_OFF;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable13_85
   \   0000000E   0x7048             STRB     R0,[R1, #+1]
   1128            driver_list.Humidity = DRIVER_OFF;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable13_85
   \   00000016   0x7108             STRB     R0,[R1, #+4]
   1129            driver_list.Pressure = DRIVER_OFF;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR.N    R1,??DataTable13_85
   \   0000001C   0x70C8             STRB     R0,[R1, #+3]
   1130            driver_list.Irradiance = DRIVER_OFF;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x....             LDR.N    R1,??DataTable13_85
   \   00000022   0x7088             STRB     R0,[R1, #+2]
   1131            driver_list.GridEye = DRIVER_OFF;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x....             LDR.N    R1,??DataTable13_85
   \   00000028   0x7148             STRB     R0,[R1, #+5]
   1132            driver_list.CoolEye = DRIVER_OFF;
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x....             LDR.N    R1,??DataTable13_85
   \   0000002E   0x7188             STRB     R0,[R1, #+6]
   1133            driver_list.I2CState = DRIVER_OFF;
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR.N    R1,??DataTable13_85
   \   00000034   0x71C8             STRB     R0,[R1, #+7]
   1134          }
   \   00000036   0x4770             BX       LR               ;; return
   1135          
   1136            /**
   1137            * @brief  This function updates the Driver list based on parameter passed.
   1138            * @param  task_defs Task: Driver State to be modified, bool New State for Driver
   1139            * @retval None
   1140            */

   \                                 In section .text, align 2, keep-with-next
   1141          void Set_DriverStates( task_defs Task, bool State )
   1142          {
   1143            switch(Task)
   \                     Set_DriverStates: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD00E             BEQ.N    ??Set_DriverStates_0
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xD012             BEQ.N    ??Set_DriverStates_1
   \   0000000A   0xD30E             BCC.N    ??Set_DriverStates_2
   \   0000000C   0x2804             CMP      R0,#+4
   \   0000000E   0xD015             BEQ.N    ??Set_DriverStates_3
   \   00000010   0xD311             BCC.N    ??Set_DriverStates_4
   \   00000012   0x2806             CMP      R0,#+6
   \   00000014   0xD018             BEQ.N    ??Set_DriverStates_5
   \   00000016   0xD314             BCC.N    ??Set_DriverStates_6
   \   00000018   0x2808             CMP      R0,#+8
   \   0000001A   0xD01B             BEQ.N    ??Set_DriverStates_7
   \   0000001C   0xD317             BCC.N    ??Set_DriverStates_8
   \   0000001E   0x2809             CMP      R0,#+9
   \   00000020   0xD01B             BEQ.N    ??Set_DriverStates_9
   \   00000022   0xE01D             B.N      ??Set_DriverStates_10
   1144            {
   1145            case VOLTAGE_MNTR_TASK:
   1146              driver_list.VoltageMonitor = State;
   \                     ??Set_DriverStates_0: (+1)
   \   00000024   0x....             LDR.N    R2,??DataTable13_85
   \   00000026   0x7011             STRB     R1,[R2, #+0]
   1147              break;
   \   00000028   0xE01A             B.N      ??Set_DriverStates_11
   1148            case TEMPERATURE_MNTR_TASK:
   1149              driver_list.Temperature = State;
   \                     ??Set_DriverStates_2: (+1)
   \   0000002A   0x....             LDR.N    R2,??DataTable13_85
   \   0000002C   0x7051             STRB     R1,[R2, #+1]
   1150              break;
   \   0000002E   0xE017             B.N      ??Set_DriverStates_11
   1151            case IRRADIANCE_MNTR_TASK:
   1152              driver_list.Irradiance = State;
   \                     ??Set_DriverStates_1: (+1)
   \   00000030   0x....             LDR.N    R2,??DataTable13_85
   \   00000032   0x7091             STRB     R1,[R2, #+2]
   1153              break;
   \   00000034   0xE014             B.N      ??Set_DriverStates_11
   1154            case PRESSURE_MNTR_TASK:
   1155              driver_list.Pressure = State;
   \                     ??Set_DriverStates_4: (+1)
   \   00000036   0x....             LDR.N    R2,??DataTable13_85
   \   00000038   0x70D1             STRB     R1,[R2, #+3]
   1156              break;
   \   0000003A   0xE011             B.N      ??Set_DriverStates_11
   1157            case HUMIDITY_MNTR_TASK:
   1158              driver_list.Humidity = State;
   \                     ??Set_DriverStates_3: (+1)
   \   0000003C   0x....             LDR.N    R2,??DataTable13_85
   \   0000003E   0x7111             STRB     R1,[R2, #+4]
   1159              break;
   \   00000040   0xE00E             B.N      ??Set_DriverStates_11
   1160            case GRIDEYE_MNTR_TASK:
   1161              driver_list.GridEye = State;
   \                     ??Set_DriverStates_6: (+1)
   \   00000042   0x....             LDR.N    R2,??DataTable13_85
   \   00000044   0x7151             STRB     R1,[R2, #+5]
   1162              break;
   \   00000046   0xE00B             B.N      ??Set_DriverStates_11
   1163            case COOLEYE_MNTR_TASK:
   1164              driver_list.CoolEye = State;
   \                     ??Set_DriverStates_5: (+1)
   \   00000048   0x....             LDR.N    R2,??DataTable13_85
   \   0000004A   0x7191             STRB     R1,[R2, #+6]
   1165              break;
   \   0000004C   0xE008             B.N      ??Set_DriverStates_11
   1166            case I2C_STATE:
   1167              driver_list.I2CState = State;
   \                     ??Set_DriverStates_8: (+1)
   \   0000004E   0x....             LDR.N    R2,??DataTable13_85
   \   00000050   0x71D1             STRB     R1,[R2, #+7]
   1168              break;
   \   00000052   0xE005             B.N      ??Set_DriverStates_11
   1169            case FRAME_TASK:
   1170              driver_list.FrameState = State;
   \                     ??Set_DriverStates_7: (+1)
   \   00000054   0x....             LDR.N    R2,??DataTable13_85
   \   00000056   0x7211             STRB     R1,[R2, #+8]
   1171              break;
   \   00000058   0xE002             B.N      ??Set_DriverStates_11
   1172            case CAL_TASK:
   1173              driver_list.CalibrationState = State;
   \                     ??Set_DriverStates_9: (+1)
   \   0000005A   0x....             LDR.N    R2,??DataTable13_85
   \   0000005C   0x7251             STRB     R1,[R2, #+9]
   1174              break;
   \   0000005E   0xE7FF             B.N      ??Set_DriverStates_11
   1175            default:
   1176              break;
   1177            }
   1178          }
   \                     ??Set_DriverStates_10: (+1)
   \                     ??Set_DriverStates_11: (+1)
   \   00000060   0x4770             BX       LR               ;; return
   1179          
   1180            /**
   1181            * @brief  This function returns the status based on parameter passed.
   1182            * @param  task_defs Task: Driver State to be modified
   1183            * @retval bool State for Driver
   1184            */

   \                                 In section .text, align 2, keep-with-next
   1185          bool Get_DriverStates( task_defs Task )
   1186          {
   \                     Get_DriverStates: (+1)
   \   00000000   0x0001             MOVS     R1,R0
   1187            switch(Task)
   \   00000002   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD00E             BEQ.N    ??Get_DriverStates_0
   \   00000008   0x2902             CMP      R1,#+2
   \   0000000A   0xD012             BEQ.N    ??Get_DriverStates_1
   \   0000000C   0xD30E             BCC.N    ??Get_DriverStates_2
   \   0000000E   0x2904             CMP      R1,#+4
   \   00000010   0xD015             BEQ.N    ??Get_DriverStates_3
   \   00000012   0xD311             BCC.N    ??Get_DriverStates_4
   \   00000014   0x2906             CMP      R1,#+6
   \   00000016   0xD018             BEQ.N    ??Get_DriverStates_5
   \   00000018   0xD314             BCC.N    ??Get_DriverStates_6
   \   0000001A   0x2908             CMP      R1,#+8
   \   0000001C   0xD01B             BEQ.N    ??Get_DriverStates_7
   \   0000001E   0xD317             BCC.N    ??Get_DriverStates_8
   \   00000020   0x2909             CMP      R1,#+9
   \   00000022   0xD01B             BEQ.N    ??Get_DriverStates_9
   \   00000024   0xE01D             B.N      ??Get_DriverStates_10
   1188            {
   1189            case VOLTAGE_MNTR_TASK:
   1190              return driver_list.VoltageMonitor;
   \                     ??Get_DriverStates_0: (+1)
   \   00000026   0x....             LDR.N    R0,??DataTable13_85
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0xE01B             B.N      ??Get_DriverStates_11
   1191              break;
   1192            case TEMPERATURE_MNTR_TASK:
   1193              return driver_list.Temperature;
   \                     ??Get_DriverStates_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable13_85
   \   0000002E   0x7840             LDRB     R0,[R0, #+1]
   \   00000030   0xE018             B.N      ??Get_DriverStates_11
   1194              break;
   1195            case IRRADIANCE_MNTR_TASK:
   1196              return driver_list.Irradiance;
   \                     ??Get_DriverStates_1: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable13_85
   \   00000034   0x7880             LDRB     R0,[R0, #+2]
   \   00000036   0xE015             B.N      ??Get_DriverStates_11
   1197              break;
   1198            case PRESSURE_MNTR_TASK:
   1199              return driver_list.Pressure;
   \                     ??Get_DriverStates_4: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable13_85
   \   0000003A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000003C   0xE012             B.N      ??Get_DriverStates_11
   1200              break;
   1201            case HUMIDITY_MNTR_TASK:
   1202              return driver_list.Humidity;
   \                     ??Get_DriverStates_3: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable13_85
   \   00000040   0x7900             LDRB     R0,[R0, #+4]
   \   00000042   0xE00F             B.N      ??Get_DriverStates_11
   1203              break;
   1204            case GRIDEYE_MNTR_TASK:
   1205              return driver_list.GridEye;
   \                     ??Get_DriverStates_6: (+1)
   \   00000044   0x....             LDR.N    R0,??DataTable13_85
   \   00000046   0x7940             LDRB     R0,[R0, #+5]
   \   00000048   0xE00C             B.N      ??Get_DriverStates_11
   1206              break;
   1207            case COOLEYE_MNTR_TASK:
   1208              return driver_list.CoolEye;
   \                     ??Get_DriverStates_5: (+1)
   \   0000004A   0x....             LDR.N    R0,??DataTable13_85
   \   0000004C   0x7980             LDRB     R0,[R0, #+6]
   \   0000004E   0xE009             B.N      ??Get_DriverStates_11
   1209              break;
   1210            case I2C_STATE:
   1211              return driver_list.I2CState;
   \                     ??Get_DriverStates_8: (+1)
   \   00000050   0x....             LDR.N    R0,??DataTable13_85
   \   00000052   0x79C0             LDRB     R0,[R0, #+7]
   \   00000054   0xE006             B.N      ??Get_DriverStates_11
   1212              break;
   1213            case FRAME_TASK:
   1214              return driver_list.FrameState;
   \                     ??Get_DriverStates_7: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable13_85
   \   00000058   0x7A00             LDRB     R0,[R0, #+8]
   \   0000005A   0xE003             B.N      ??Get_DriverStates_11
   1215              break;
   1216            case CAL_TASK:
   1217              return driver_list.CalibrationState;
   \                     ??Get_DriverStates_9: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable13_85
   \   0000005E   0x7A40             LDRB     R0,[R0, #+9]
   \   00000060   0xE000             B.N      ??Get_DriverStates_11
   1218              break;
   1219            default:
   1220              return DRIVER_OFF;
   \                     ??Get_DriverStates_10: (+1)
   \   00000062   0x2000             MOVS     R0,#+0
   \                     ??Get_DriverStates_11: (+1)
   \   00000064   0x4770             BX       LR               ;; return
   1221              break;
   1222            }
   1223          }
   1224          
   1225            /**
   1226            * @brief  This function returns the status of all Drivers.
   1227            * @param  task_defs Task: Driver State to be modified
   1228            * @retval bool State for Driver
   1229            */

   \                                 In section .text, align 2, keep-with-next
   1230          uint16_t Get_DriverStatus( void )
   1231          {
   \                     Get_DriverStatus: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1232            uint16_t Status = 0x00;
   \   00000002   0x2400             MOVS     R4,#+0
   1233            
   1234            if ( Get_DriverStates( VOLTAGE_MNTR_TASK ) )
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       Get_DriverStates
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD000             BEQ.N    ??Get_DriverStatus_0
   1235              Status += 0x0001;
   \   0000000E   0x1C64             ADDS     R4,R4,#+1
   1236            if ( Get_DriverStates( TEMPERATURE_MNTR_TASK ) )
   \                     ??Get_DriverStatus_0: (+1)
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       Get_DriverStates
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD000             BEQ.N    ??Get_DriverStatus_1
   1237              Status += 0x0002;
   \   0000001A   0x1CA4             ADDS     R4,R4,#+2
   1238            if ( Get_DriverStates( IRRADIANCE_MNTR_TASK ) )
   \                     ??Get_DriverStatus_1: (+1)
   \   0000001C   0x2002             MOVS     R0,#+2
   \   0000001E   0x.... 0x....      BL       Get_DriverStates
   \   00000022   0x2800             CMP      R0,#+0
   \   00000024   0xD000             BEQ.N    ??Get_DriverStatus_2
   1239              Status += 0x0004;
   \   00000026   0x1D24             ADDS     R4,R4,#+4
   1240            if ( Get_DriverStates( PRESSURE_MNTR_TASK ) )
   \                     ??Get_DriverStatus_2: (+1)
   \   00000028   0x2003             MOVS     R0,#+3
   \   0000002A   0x.... 0x....      BL       Get_DriverStates
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD000             BEQ.N    ??Get_DriverStatus_3
   1241              Status += 0x0008;
   \   00000032   0x3408             ADDS     R4,R4,#+8
   1242            if ( Get_DriverStates( HUMIDITY_MNTR_TASK ) )
   \                     ??Get_DriverStatus_3: (+1)
   \   00000034   0x2004             MOVS     R0,#+4
   \   00000036   0x.... 0x....      BL       Get_DriverStates
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD000             BEQ.N    ??Get_DriverStatus_4
   1243              Status += 0x0010;
   \   0000003E   0x3410             ADDS     R4,R4,#+16
   1244            if ( Get_DriverStates( GRIDEYE_MNTR_TASK ) )
   \                     ??Get_DriverStatus_4: (+1)
   \   00000040   0x2005             MOVS     R0,#+5
   \   00000042   0x.... 0x....      BL       Get_DriverStates
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD000             BEQ.N    ??Get_DriverStatus_5
   1245              Status += 0x0020;
   \   0000004A   0x3420             ADDS     R4,R4,#+32
   1246            if ( Get_DriverStates( COOLEYE_MNTR_TASK ) )
   \                     ??Get_DriverStatus_5: (+1)
   \   0000004C   0x2006             MOVS     R0,#+6
   \   0000004E   0x.... 0x....      BL       Get_DriverStates
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD000             BEQ.N    ??Get_DriverStatus_6
   1247              Status += 0x0040;
   \   00000056   0x3440             ADDS     R4,R4,#+64
   1248            if ( Get_DriverStates( I2C_STATE ) )
   \                     ??Get_DriverStatus_6: (+1)
   \   00000058   0x2007             MOVS     R0,#+7
   \   0000005A   0x.... 0x....      BL       Get_DriverStates
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD000             BEQ.N    ??Get_DriverStatus_7
   1249              Status += 0x0080;
   \   00000062   0x3480             ADDS     R4,R4,#+128
   1250            if ( Get_DriverStates( FRAME_TASK ) )
   \                     ??Get_DriverStatus_7: (+1)
   \   00000064   0x2008             MOVS     R0,#+8
   \   00000066   0x.... 0x....      BL       Get_DriverStates
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD001             BEQ.N    ??Get_DriverStatus_8
   1251              Status += 0x0100;
   \   0000006E   0xF514 0x7480      ADDS     R4,R4,#+256
   1252            if ( Get_DriverStates( CAL_TASK ) )
   \                     ??Get_DriverStatus_8: (+1)
   \   00000072   0x2009             MOVS     R0,#+9
   \   00000074   0x.... 0x....      BL       Get_DriverStates
   \   00000078   0x2800             CMP      R0,#+0
   \   0000007A   0xD001             BEQ.N    ??Get_DriverStatus_9
   1253              Status += 0x0200;
   \   0000007C   0xF514 0x7400      ADDS     R4,R4,#+512
   1254            return Status;
   \                     ??Get_DriverStatus_9: (+1)
   \   00000080   0x0020             MOVS     R0,R4
   \   00000082   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000084   0xBD10             POP      {R4,PC}          ;; return
   1255          }
   1256          
   1257            /**
   1258            * @brief  This function Clears the Heart Beat Count.
   1259            * @param  None
   1260            * @retval bool: Status of Heart Beat Flag
   1261            */

   \                                 In section .text, align 2, keep-with-next
   1262          void Clr_HrtBeat_Cnt( void )
   1263          {
   1264            analytics.HrtBeat_Cnt = 0;
   \                     Clr_HrtBeat_Cnt: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable13_86
   \   00000004   0x8048             STRH     R0,[R1, #+2]
   1265          }
   \   00000006   0x4770             BX       LR               ;; return
   1266          
   1267            /**
   1268            * @brief  This function returns the status of the Heart Beat Flag.
   1269            * @param  None
   1270            * @retval bool: Status of Heart Beat Flag
   1271            */

   \                                 In section .text, align 2, keep-with-next
   1272          bool Tst_HeartBeat( void )
   1273          {
   1274            return analytics.HrtBeat_Flg;
   \                     Tst_HeartBeat: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable13_86
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
   1275          }
   1276          
   1277            /**
   1278            * @brief  This function sets the Heart Beat Flag.
   1279            * @param  None
   1280            * @retval None
   1281            */

   \                                 In section .text, align 2, keep-with-next
   1282          void Set_HeartBeat( void )
   1283          {
   1284            analytics.HrtBeat_Flg = true;
   \                     Set_HeartBeat: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x....             LDR.N    R1,??DataTable13_86
   \   00000004   0x7008             STRB     R0,[R1, #+0]
   1285          }
   \   00000006   0x4770             BX       LR               ;; return
   1286          
   1287            /**
   1288            * @brief  This function clears the Heart Beat Flag.
   1289            * @param  None
   1290            * @retval None
   1291            */

   \                                 In section .text, align 2, keep-with-next
   1292          void Clr_HeartBeat( void )
   1293          {
   1294            analytics.HrtBeat_Flg = false;
   \                     Clr_HeartBeat: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable13_86
   \   00000004   0x7008             STRB     R0,[R1, #+0]
   1295          }
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     `data`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     `data`+0xB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     `data`+0x1B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     `data`+0x2B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     `data`+0x3A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     `data`+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `data`+0x72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     `data`+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     `data`+0xAE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     `data`+0xC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     `data`+0xD8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     `data`+0x17C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     `data`+0x194

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     `data`+0x1AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     `data`+0x1C4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     `data`+0x1DC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     `data`+0x1F4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     `data`+0x20C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     `data`+0x224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     `data`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     TmpData+0x3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     TmpData+0x12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     TmpData+0x22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     TmpData+0x32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     TmpData+0x42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x........         DC32     TmpData+0x5A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x........         DC32     TmpData+0xA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     TmpData+0xCA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     TmpData+0x16E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     `data`+0xB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     TmpData+0xB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     `data`+0x3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     `data`+0x1B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     TmpData+0x1B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     TmpData+0x84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     TmpData+0xB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     `data`+0x12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     `data`+0x2B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     TmpData+0x2B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     `data`+0x22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     analytics

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     `data`+0x3A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     TmpData+0x3A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     `data`+0x32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     `data`+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     TmpData+0x50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     `data`+0x23C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     `data`+0x42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     TmpData+0x49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     `data`+0x49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_6:
   \   00000000   0x........         DC32     TmpData+0x72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     `data`+0x72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     TmpData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     `data`+0x5A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     TmpData+0x62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     `data`+0x62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     TmpData+0x6A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     `data`+0x6A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     `data`+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     TmpData+0x90

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     `data`+0x84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     `data`+0xAE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     TmpData+0xAE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     `data`+0xA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x........         DC32     TmpData+0xA7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     `data`+0xA7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     `data`+0xC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x........         DC32     TmpData+0xC0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     `data`+0xB8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     `data`+0xD8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x........         DC32     TmpData+0xD8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x........         DC32     `data`+0xCA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x........         DC32     TmpData+0xD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     `data`+0xD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x........         DC32     `data`+0x17C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x........         DC32     TmpData+0x17C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x........         DC32     `data`+0x16E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x........         DC32     `data`+0x194

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x........         DC32     TmpData+0x194

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x........         DC32     TmpData+0x186

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x........         DC32     `data`+0x186

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_38:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_39:
   \   00000000   0x........         DC32     TmpData+0x1AC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_40:
   \   00000000   0x........         DC32     TmpData+0x19E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_41:
   \   00000000   0x........         DC32     `data`+0x19E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_42:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_43:
   \   00000000   0x........         DC32     TmpData+0x1C4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_44:
   \   00000000   0x........         DC32     TmpData+0x1B6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_45:
   \   00000000   0x........         DC32     `data`+0x1B6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_46:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_47:
   \   00000000   0x........         DC32     `data`+0x1CE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_48:
   \   00000000   0x........         DC32     TmpData+0x1CE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_49:
   \   00000000   0x........         DC32     TmpData+0x1DC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_50:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_51:
   \   00000000   0x........         DC32     TmpData+0x1F4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_52:
   \   00000000   0x........         DC32     TmpData+0x1E6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_53:
   \   00000000   0x........         DC32     `data`+0x1E6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_54:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_55:
   \   00000000   0x........         DC32     TmpData+0x20C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_56:
   \   00000000   0x........         DC32     TmpData+0x1FE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_57:
   \   00000000   0x........         DC32     `data`+0x1FE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_58:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_59:
   \   00000000   0x........         DC32     TmpData+0x224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_60:
   \   00000000   0x........         DC32     TmpData+0x216

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_61:
   \   00000000   0x........         DC32     `data`+0x216

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_62:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_63:
   \   00000000   0x........         DC32     TmpData+0x23C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_64:
   \   00000000   0x........         DC32     TmpData+0x22E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_65:
   \   00000000   0x........         DC32     `data`+0x22E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_66:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_67:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_68:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_69:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_70:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_71:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_72:
   \   00000000   0x........         DC32     `data`+0xE2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_73:
   \   00000000   0x........         DC32     `data`+0x105

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_74:
   \   00000000   0x........         DC32     `data`+0x128

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_75:
   \   00000000   0x........         DC32     `data`+0x14B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_76:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_77:
   \   00000000   0x........         DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_78:
   \   00000000   0x........         DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_79:
   \   00000000   0x........         DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_80:
   \   00000000   0x........         DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_81:
   \   00000000   0x........         DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_82:
   \   00000000   0x........         DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_83:
   \   00000000   0x........         DC32     connection_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_84:
   \   00000000   0x........         DC32     HeartBeat_Cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_85:
   \   00000000   0x........         DC32     driver_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_86:
   \   00000000   0x........         DC32     analytics

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x2D 0x2D          DC8 "------"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x2D 0x2D          DC8 "--------------"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x2D 0x2D          DC8 "---------"
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x2D    
   \              0x2D 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x3C 0x46          DC8 "<FRM>"
   \              0x52 0x4D    
   \              0x3E 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x3C 0x55          DC8 "<U0002>%s</U0002>"
   \              0x30 0x30    
   \              0x30 0x32    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x32    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x3C 0x55          DC8 "<U0004>%s</U0004>"
   \              0x30 0x30    
   \              0x30 0x34    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x34    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x3C 0x55          DC8 "<U0006>%s</U0006>"
   \              0x30 0x30    
   \              0x30 0x36    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x36    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x3C 0x55          DC8 "<U0008>%s</U0008>"
   \              0x30 0x30    
   \              0x30 0x38    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x38    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x3C 0x55          DC8 "<U000A>%s</U000A>"
   \              0x30 0x30    
   \              0x30 0x41    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x41    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x3C 0x55          DC8 "<U000B>%s</U000B>"
   \              0x30 0x30    
   \              0x30 0x42    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x42    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x3C 0x55          DC8 "<U000C>%s</U000C>"
   \              0x30 0x30    
   \              0x30 0x43    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x43    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x3C 0x55          DC8 "<U000D>%s</U000D>"
   \              0x30 0x30    
   \              0x30 0x44    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x44    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x3C 0x55          DC8 "<U000E>%s</U000E>"
   \              0x30 0x30    
   \              0x30 0x45    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x45    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x3C 0x55          DC8 "<U000F>%s</U000F>"
   \              0x30 0x30    
   \              0x30 0x46    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x30 0x46    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x3C 0x55          DC8 "<UACAC>%s</UACAC>"
   \              0x41 0x43    
   \              0x41 0x43    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x41 0x43    
   \              0x41 0x43    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x3C 0x55          DC8 "<UABAB>%s</UABAB>"
   \              0x41 0x42    
   \              0x41 0x42    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x41 0x42    
   \              0x41 0x42    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x3C 0x55          DC8 "<U0032>%s</U0032>"
   \              0x30 0x30    
   \              0x33 0x32    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x33 0x32    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x3C 0x55          DC8 "<U0033>%s</U0033>"
   \              0x30 0x30    
   \              0x33 0x33    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x33 0x33    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x3C 0x55          DC8 "<U0017>%s</U0017>"
   \              0x30 0x30    
   \              0x31 0x37    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x37    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x3C 0x55          DC8 "<U0019>%s</U0019>"
   \              0x30 0x30    
   \              0x31 0x39    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x39    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x3C 0x55          DC8 "<U001B>%s</U001B>"
   \              0x30 0x30    
   \              0x31 0x42    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x42    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x3C 0x55          DC8 "<U001D>%s</U001D>"
   \              0x30 0x30    
   \              0x31 0x44    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x44    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x3C 0x55          DC8 "<U001F>%s</U001F>"
   \              0x30 0x30    
   \              0x31 0x46    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x46    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x3C 0x55          DC8 "<U0021>%s</U0021>"
   \              0x30 0x30    
   \              0x32 0x31    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x32 0x31    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x3C 0x55          DC8 "<U0023>%s</U0023>"
   \              0x30 0x30    
   \              0x32 0x33    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x32 0x33    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x3C 0x55          DC8 "<U0025>%s</U0025>"
   \              0x30 0x30    
   \              0x32 0x35    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x32 0x35    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x3C 0x55          DC8 "<U0027>%s</U0027>"
   \              0x30 0x30    
   \              0x32 0x37    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x32 0x37    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x3C 0x55          DC8 "<UAEAE>%s</UAEAE>"
   \              0x41 0x45    
   \              0x41 0x45    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x41 0x45    
   \              0x41 0x45    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x4E 0x38          DC8 "N8.0 7/18/17"
   \              0x2E 0x30    
   \              0x20 0x37    
   \              0x2F 0x31    
   \              0x38 0x2F    
   \              0x31 0x37    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x3C 0x2F          DC8 "</FRM>"
   \              0x46 0x52    
   \              0x4D 0x3E    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x0D 0x0A          DC8 "\015\012\015\012"
   \              0x0D 0x0A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x3C 0x55          DC8 "<U0012>%s</U0012>"
   \              0x30 0x30    
   \              0x31 0x32    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x32    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x3C 0x55          DC8 "<U0013>%s</U0013>"
   \              0x30 0x30    
   \              0x31 0x33    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x33    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x3C 0x55          DC8 "<U0014>%s</U0014>"
   \              0x30 0x30    
   \              0x31 0x34    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x34    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0x3C 0x55          DC8 "<U0015>%s</U0015>"
   \              0x30 0x30    
   \              0x31 0x35    
   \              0x3E 0x25    
   \              0x73 0x3C    
   \              0x2F 0x55    
   \              0x30 0x30    
   \              0x31 0x35    
   \              0x3E 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x3C 0x54          DC8 "<TICK>RP/%08x</TICK>"
   \              0x49 0x43    
   \              0x4B 0x3E    
   \              0x52 0x50    
   \              0x2F 0x25    
   \              0x30 0x38    
   \              0x78 0x3C    
   \              0x2F 0x54    
   \              0x49 0x43    
   \              0x4B 0x3E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x3C 0x62          DC8 "<ble.TackArmed = TACK_ARMED2>"
   \              0x6C 0x65    
   \              0x2E 0x54    
   \              0x61 0x63    
   \              0x6B 0x41    
   \              0x72 0x6D    
   \              0x65 0x64    
   \              0x20 0x3D    
   \              0x20 0x54    
   \              0x41 0x43    
   \              0x4B 0x5F    
   \              0x41 0x52    
   \              0x4D 0x45    
   \              0x44 0x32    
   \              0x3E 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x3C 0x62          DC8 "<ble.TackArmed = TACK_ASYNC>"
   \              0x6C 0x65    
   \              0x2E 0x54    
   \              0x61 0x63    
   \              0x6B 0x41    
   \              0x72 0x6D    
   \              0x65 0x64    
   \              0x20 0x3D    
   \              0x20 0x54    
   \              0x41 0x43    
   \              0x4B 0x5F    
   \              0x41 0x53    
   \              0x59 0x4E    
   \              0x43 0x3E    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1296          
   1297          
   1298          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   ClrDataStructure
         8   -> strcpy
       0   Clr_HeartBeat
       0   Clr_HrtBeat_Cnt
       0   Get_DriverStates
       8   Get_DriverStatus
         8   -> Get_DriverStates
       8   InitSensors
         8   -> ClrDataStructure
      48   ProcessSensorState
        48   -> BGM111_Transmit
        48   -> Get_DriverStates
        48   -> RoadBrd_Baro_ReadPressure_Scaled
        48   -> RoadBrd_Baro_ReadTemp
        48   -> RoadBrd_CoolEye_ReadValues_Scaled
        48   -> RoadBrd_GridEye_ReadValues_Scaled
        48   -> RoadBrd_Humidity_ReadHumidity_Scaled
        48   -> RoadBrd_Humidity_ReadTemperature_Scaled
        48   -> RoadBrd_RGBReadValues
        48   -> RoadBrd_ReadTemp_Scaled
        48   -> RoadBrd_UART_Transmit
        48   -> RoadBrd_VMonitor_RdCurrent_Scaled
        48   -> RoadBrd_VMonitor_RdPower_Scaled
        48   -> RoadBrd_VMonitor_RdShntVltg_Scaled
        48   -> RoadBrd_VMonitor_RdVoltage_Scaled
        48   -> RoadBrd_WWDG_Refresh
        48   -> RoadBrd_gpio_On
        48   -> sprintf
        48   -> strcmp
        48   -> strcpy
        48   -> strlen
      88   Process_RdSound
        88   -> BGM111_Connected
        88   -> BGM111_DataConnected
        88   -> BGM111_GetTackState
        88   -> BGM111_Ready
        88   -> BGM111_SetTackState
        88   -> BGM111_SyncModeTestNoInc
        88   -> BGM111_Transmit
        88   -> BGM111_cntrlSetSyncFlg
        88   -> ClrDataStructure
        88   -> HAL_GetTick
        88   -> RoadBrdSnd_DumpBin0
        88   -> RoadBrdSnd_DumpBin16
        88   -> RoadBrdSnd_DumpBin32
        88   -> RoadBrdSnd_DumpBin48
        88   -> RoadBrdSnd_ProcessSound
        88   -> RoadBrd_UART_Transmit
        88   -> RoadBrd_WWDG_Refresh
        88   -> RoadBrd_gpio_Off
        88   -> RoadBrd_gpio_On
        88   -> sprintf
        88   -> strlen
       0   Reset_DriverStates
      40   SendApp_String
        40   -> BGM111_Ready
        40   -> strlen
        40   -> strncpy
       0   SetDataReady
       0   Set_DriverStates
       0   Set_HeartBeat
       0   TIM6_IRQHandler
       8   Test_Connection
         8   -> BGM111_Connected
         8   -> Set_HeartBeat
         8   -> Tst_HeartBeat
       0   Tst_HeartBeat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_38
       4  ??DataTable13_39
       4  ??DataTable13_4
       4  ??DataTable13_40
       4  ??DataTable13_41
       4  ??DataTable13_42
       4  ??DataTable13_43
       4  ??DataTable13_44
       4  ??DataTable13_45
       4  ??DataTable13_46
       4  ??DataTable13_47
       4  ??DataTable13_48
       4  ??DataTable13_49
       4  ??DataTable13_5
       4  ??DataTable13_50
       4  ??DataTable13_51
       4  ??DataTable13_52
       4  ??DataTable13_53
       4  ??DataTable13_54
       4  ??DataTable13_55
       4  ??DataTable13_56
       4  ??DataTable13_57
       4  ??DataTable13_58
       4  ??DataTable13_59
       4  ??DataTable13_6
       4  ??DataTable13_60
       4  ??DataTable13_61
       4  ??DataTable13_62
       4  ??DataTable13_63
       4  ??DataTable13_64
       4  ??DataTable13_65
       4  ??DataTable13_66
       4  ??DataTable13_67
       4  ??DataTable13_68
       4  ??DataTable13_69
       4  ??DataTable13_7
       4  ??DataTable13_70
       4  ??DataTable13_71
       4  ??DataTable13_72
       4  ??DataTable13_73
       4  ??DataTable13_74
       4  ??DataTable13_75
       4  ??DataTable13_76
       4  ??DataTable13_77
       4  ??DataTable13_78
       4  ??DataTable13_79
       4  ??DataTable13_8
       4  ??DataTable13_80
       4  ??DataTable13_81
       4  ??DataTable13_82
       4  ??DataTable13_83
       4  ??DataTable13_84
       4  ??DataTable13_85
       4  ??DataTable13_86
       4  ??DataTable13_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
       4  ??DataTable9_6
       8  ?_0
      16  ?_1
      20  ?_10
      20  ?_11
      20  ?_12
      20  ?_13
      20  ?_14
      20  ?_15
      20  ?_16
      20  ?_17
      20  ?_18
      20  ?_19
      12  ?_2
      20  ?_20
      20  ?_21
      20  ?_22
      20  ?_23
      20  ?_24
      20  ?_25
      20  ?_26
      20  ?_27
      16  ?_28
       8  ?_29
       8  ?_3
       8  ?_30
      20  ?_31
      20  ?_32
      20  ?_33
      20  ?_34
      24  ?_35
      32  ?_36
      32  ?_37
      20  ?_4
      20  ?_5
      20  ?_6
      20  ?_7
      20  ?_8
      20  ?_9
     176  ClrDataStructure
       8  Clr_HeartBeat
       8  Clr_HrtBeat_Cnt
     102  Get_DriverStates
     134  Get_DriverStatus
       2  HeartBeat_Cnt
      36  InitSensors
    2388  ProcessSensorState
     456  Process_RdSound
      56  Reset_DriverStates
      58  SendApp_String
      10  SetDataReady
      98  Set_DriverStates
       8  Set_HeartBeat
      10  TIM6_IRQHandler
      72  Test_Connection
     584  TmpData
       6  Tst_HeartBeat
       4  analytics
       2  connection_cnt
     584  data
      12  driver_list

 
 1 188 bytes in section .bss
   724 bytes in section .rodata
 4 222 bytes in section .text
 
 4 222 bytes of CODE  memory
   724 bytes of CONST memory
 1 188 bytes of DATA  memory

Errors: none
Warnings: none
